

================================================================
== Vivado HLS Report for 'bin_dense'
================================================================
* Date:           Sun Mar 28 14:51:15 2021

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        BNN_6
* Solution:       solution1
* Product family: kintex7
* Target device:  xc7k70t-fbv676-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  12.00|    10.489|        1.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   13|   13|   13|   13|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |    6|    6|         3|          -|          -|     2|    no    |
        |- Loop 2  |    2|    2|         1|          -|          -|     2|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 8
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 6 
4 --> 5 
5 --> 3 
6 --> 7 6 
7 --> 8 
8 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.66>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%o_index_V_2_read = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %o_index_V_2)" [cpp/accel/Accel.cpp:613]   --->   Operation 9 'read' 'o_index_V_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%d_o_idx_V_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %d_o_idx_V)" [cpp/accel/Accel.cpp:613]   --->   Operation 10 'read' 'd_o_idx_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%o_offset_V = trunc i16 %o_index_V_2_read to i6" [cpp/accel/Accel.cpp:636]   --->   Operation 11 'trunc' 'o_offset_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%tmp_16 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %o_index_V_2_read, i32 6)" [cpp/accel/Accel.cpp:635]   --->   Operation 12 'bitselect' 'tmp_16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%tmp_2 = call i9 @_ssdm_op_PartSelect.i9.i16.i32.i32(i16 %o_index_V_2_read, i32 7, i32 15)" [cpp/accel/Accel.cpp:637]   --->   Operation 13 'partselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%zext_ln1371 = zext i9 %tmp_2 to i10" [cpp/accel/Accel.cpp:637]   --->   Operation 14 'zext' 'zext_ln1371' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%tmp_3 = call i12 @_ssdm_op_BitConcatenate.i12.i1.i1.i10(i1 %d_o_idx_V_read, i1 %tmp_16, i10 %zext_ln1371)" [cpp/accel/Accel.cpp:637]   --->   Operation 15 'bitconcatenate' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%zext_ln637 = zext i12 %tmp_3 to i64" [cpp/accel/Accel.cpp:637]   --->   Operation 16 'zext' 'zext_ln637' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%dmem_V_1_addr = getelementptr [4096 x i64]* %dmem_V_2, i64 0, i64 %zext_ln637" [cpp/accel/Accel.cpp:637]   --->   Operation 17 'getelementptr' 'dmem_V_1_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [2/2] (2.66ns)   --->   "%dmem_V_1_load = load i64* %dmem_V_1_addr, align 8" [cpp/accel/Accel.cpp:637]   --->   Operation 18 'load' 'dmem_V_1_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>

State 2 <SV = 1> <Delay = 2.66>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%d_i_idx_V_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %d_i_idx_V)" [cpp/accel/Accel.cpp:613]   --->   Operation 19 'read' 'd_i_idx_V_read' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%layer_type_V_read = call i2 @_ssdm_op_Read.ap_auto.i2(i2 %layer_type_V)" [cpp/accel/Accel.cpp:613]   --->   Operation 20 'read' 'layer_type_V_read' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%kh_mem_V_2_addr = getelementptr [64 x i64]* %kh_mem_V_2, i64 0, i64 0" [cpp/accel/Accel.cpp:613]   --->   Operation 21 'getelementptr' 'kh_mem_V_2_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.64ns)   --->   "%icmp_ln879 = icmp eq i2 %layer_type_V_read, -2" [cpp/accel/Accel.cpp:623]   --->   Operation 22 'icmp' 'icmp_ln879' <Predicate = true> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%tmp_s = call i12 @_ssdm_op_BitConcatenate.i12.i1.i11(i1 %d_o_idx_V_read, i11 0)" [cpp/accel/Accel.cpp:718]   --->   Operation 23 'bitconcatenate' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%zext_ln180 = zext i12 %tmp_s to i64" [cpp/accel/Accel.cpp:718]   --->   Operation 24 'zext' 'zext_ln180' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%dmem_V_1_addr_2 = getelementptr [4096 x i64]* %dmem_V_2, i64 0, i64 %zext_ln180" [cpp/accel/Accel.cpp:718]   --->   Operation 25 'getelementptr' 'dmem_V_1_addr_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%tmp_1 = call i2 @_ssdm_op_BitConcatenate.i2.i1.i1(i1 %d_i_idx_V_read, i1 false)" [cpp/accel/Accel.cpp:648]   --->   Operation 26 'bitconcatenate' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln209 = zext i2 %tmp_1 to i3" [cpp/accel/Accel.cpp:635]   --->   Operation 27 'zext' 'zext_ln209' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/2] (2.66ns)   --->   "%dmem_V_1_load = load i64* %dmem_V_1_addr, align 8" [cpp/accel/Accel.cpp:637]   --->   Operation 28 'load' 'dmem_V_1_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str38)" [cpp/accel/Accel.cpp:642]   --->   Operation 29 'specregionbegin' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (1.06ns)   --->   "br label %0" [cpp/accel/Accel.cpp:645]   --->   Operation 30 'br' <Predicate = true> <Delay = 1.06>

State 3 <SV = 2> <Delay = 3.66>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%sum_m_V_1_09 = phi i16 [ undef, %LOOP_DENSE_I_begin ], [ %sum_m_1_V_1, %_ZrsILi64ELb1EEN11ap_int_baseIXT_EXT0_EE5RTypeIXT_EXT0_EE4arg1ERKS1_i.exit128.0.0 ]"   --->   Operation 31 'phi' 'sum_m_V_1_09' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%sum_m_V_0_08 = phi i16 [ undef, %LOOP_DENSE_I_begin ], [ %sum_m_1_V_2, %_ZrsILi64ELb1EEN11ap_int_baseIXT_EXT0_EE5RTypeIXT_EXT0_EE4arg1ERKS1_i.exit128.0.0 ]"   --->   Operation 32 'phi' 'sum_m_V_0_08' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%p_0348_0_0_0 = phi i2 [ 0, %LOOP_DENSE_I_begin ], [ %add_ln700_10, %_ZrsILi64ELb1EEN11ap_int_baseIXT_EXT0_EE5RTypeIXT_EXT0_EE4arg1ERKS1_i.exit128.0.0 ]" [cpp/accel/Accel.cpp:645]   --->   Operation 33 'phi' 'p_0348_0_0_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%phi_mul = phi i13 [ 0, %LOOP_DENSE_I_begin ], [ %add_ln649, %_ZrsILi64ELb1EEN11ap_int_baseIXT_EXT0_EE5RTypeIXT_EXT0_EE4arg1ERKS1_i.exit128.0.0 ]" [cpp/accel/Accel.cpp:649]   --->   Operation 34 'phi' 'phi_mul' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln887 = zext i13 %phi_mul to i64" [cpp/accel/Accel.cpp:645]   --->   Operation 35 'zext' 'zext_ln887' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.64ns)   --->   "%icmp_ln887 = icmp eq i2 %p_0348_0_0_0, -2" [cpp/accel/Accel.cpp:645]   --->   Operation 36 'icmp' 'icmp_ln887' <Predicate = true> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%empty_38 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2)"   --->   Operation 37 'speclooptripcount' 'empty_38' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (1.00ns)   --->   "%add_ln700_10 = add i2 %p_0348_0_0_0, 1" [cpp/accel/Accel.cpp:645]   --->   Operation 38 'add' 'add_ln700_10' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "br i1 %icmp_ln887, label %.preheader.0.0.preheader, label %_ZrsILi64ELb1EEN11ap_int_baseIXT_EXT0_EE5RTypeIXT_EXT0_EE4arg1ERKS1_i.exit128.0.0" [cpp/accel/Accel.cpp:645]   --->   Operation 39 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%zext_ln649 = zext i2 %p_0348_0_0_0 to i3" [cpp/accel/Accel.cpp:649]   --->   Operation 40 'zext' 'zext_ln649' <Predicate = (!icmp_ln887)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (1.45ns)   --->   "%add_ln649 = add i13 2341, %phi_mul" [cpp/accel/Accel.cpp:649]   --->   Operation 41 'add' 'add_ln649' <Predicate = (!icmp_ln887)> <Delay = 1.45> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%wt_mem_V_1_addr = getelementptr [4682 x i64]* %wt_mem_V_2, i64 0, i64 %zext_ln887" [cpp/accel/Accel.cpp:649]   --->   Operation 42 'getelementptr' 'wt_mem_V_1_addr' <Predicate = (!icmp_ln887)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (1.00ns)   --->   "%add_ln648 = add i3 %zext_ln649, %zext_ln209" [cpp/accel/Accel.cpp:648]   --->   Operation 43 'add' 'add_ln648' <Predicate = (!icmp_ln887)> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%tmp_17 = call i13 @_ssdm_op_BitConcatenate.i13.i3.i10(i3 %add_ln648, i10 0)" [cpp/accel/Accel.cpp:648]   --->   Operation 44 'bitconcatenate' 'tmp_17' <Predicate = (!icmp_ln887)> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln648 = zext i13 %tmp_17 to i64" [cpp/accel/Accel.cpp:648]   --->   Operation 45 'zext' 'zext_ln648' <Predicate = (!icmp_ln887)> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%dmem_V_1_addr_1 = getelementptr [4096 x i64]* %dmem_V_2, i64 0, i64 %zext_ln648" [cpp/accel/Accel.cpp:648]   --->   Operation 46 'getelementptr' 'dmem_V_1_addr_1' <Predicate = (!icmp_ln887)> <Delay = 0.00>
ST_3 : Operation 47 [2/2] (2.66ns)   --->   "%dmem_V_1_load_1 = load i64* %dmem_V_1_addr_1, align 8" [cpp/accel/Accel.cpp:648]   --->   Operation 47 'load' 'dmem_V_1_load_1' <Predicate = (!icmp_ln887)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>
ST_3 : Operation 48 [2/2] (2.66ns)   --->   "%wt_mem_V_1_load = load i64* %wt_mem_V_1_addr, align 8" [cpp/accel/Accel.cpp:649]   --->   Operation 48 'load' 'wt_mem_V_1_load' <Predicate = (!icmp_ln887)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%trunc_ln180 = trunc i2 %p_0348_0_0_0 to i1" [cpp/accel/Accel.cpp:662]   --->   Operation 49 'trunc' 'trunc_ln180' <Predicate = (!icmp_ln887)> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (1.06ns)   --->   "br label %.preheader.0.0" [cpp/accel/Accel.cpp:665]   --->   Operation 50 'br' <Predicate = (icmp_ln887)> <Delay = 1.06>

State 4 <SV = 3> <Delay = 10.4>
ST_4 : Operation 51 [1/2] (2.66ns)   --->   "%dmem_V_1_load_1 = load i64* %dmem_V_1_addr_1, align 8" [cpp/accel/Accel.cpp:648]   --->   Operation 51 'load' 'dmem_V_1_load_1' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>
ST_4 : Operation 52 [1/2] (2.66ns)   --->   "%wt_mem_V_1_load = load i64* %wt_mem_V_1_addr, align 8" [cpp/accel/Accel.cpp:649]   --->   Operation 52 'load' 'wt_mem_V_1_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>
ST_4 : Operation 53 [1/1] (0.68ns)   --->   "%xor_ln1357 = xor i64 %wt_mem_V_1_load, %dmem_V_1_load_1" [cpp/accel/Accel.cpp:651]   --->   Operation 53 'xor' 'xor_ln1357' <Predicate = true> <Delay = 0.68> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "%tmp_18 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 63)" [cpp/accel/Accel.cpp:654]   --->   Operation 54 'bitselect' 'tmp_18' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%tmp_19 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 61)" [cpp/accel/Accel.cpp:654]   --->   Operation 55 'bitselect' 'tmp_19' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (0.00ns)   --->   "%tmp_20 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 59)" [cpp/accel/Accel.cpp:654]   --->   Operation 56 'bitselect' 'tmp_20' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%tmp_21 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 57)" [cpp/accel/Accel.cpp:654]   --->   Operation 57 'bitselect' 'tmp_21' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%tmp_22 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 55)" [cpp/accel/Accel.cpp:654]   --->   Operation 58 'bitselect' 'tmp_22' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "%tmp_23 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 53)" [cpp/accel/Accel.cpp:654]   --->   Operation 59 'bitselect' 'tmp_23' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%tmp_24 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 51)" [cpp/accel/Accel.cpp:654]   --->   Operation 60 'bitselect' 'tmp_24' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%tmp_25 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 49)" [cpp/accel/Accel.cpp:654]   --->   Operation 61 'bitselect' 'tmp_25' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 62 [1/1] (0.00ns)   --->   "%tmp_26 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 47)" [cpp/accel/Accel.cpp:654]   --->   Operation 62 'bitselect' 'tmp_26' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%tmp_27 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 45)" [cpp/accel/Accel.cpp:654]   --->   Operation 63 'bitselect' 'tmp_27' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_28 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 43)" [cpp/accel/Accel.cpp:654]   --->   Operation 64 'bitselect' 'tmp_28' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 65 [1/1] (0.00ns)   --->   "%tmp_29 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 41)" [cpp/accel/Accel.cpp:654]   --->   Operation 65 'bitselect' 'tmp_29' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 66 [1/1] (0.00ns)   --->   "%tmp_30 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 39)" [cpp/accel/Accel.cpp:654]   --->   Operation 66 'bitselect' 'tmp_30' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%tmp_31 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 37)" [cpp/accel/Accel.cpp:654]   --->   Operation 67 'bitselect' 'tmp_31' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 68 [1/1] (0.00ns)   --->   "%tmp_32 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 35)" [cpp/accel/Accel.cpp:654]   --->   Operation 68 'bitselect' 'tmp_32' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 69 [1/1] (0.00ns)   --->   "%tmp_33 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 33)" [cpp/accel/Accel.cpp:654]   --->   Operation 69 'bitselect' 'tmp_33' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 70 [1/1] (0.00ns)   --->   "%tmp_34 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 31)" [cpp/accel/Accel.cpp:654]   --->   Operation 70 'bitselect' 'tmp_34' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 71 [1/1] (0.00ns)   --->   "%tmp_35 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 29)" [cpp/accel/Accel.cpp:654]   --->   Operation 71 'bitselect' 'tmp_35' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 72 [1/1] (0.00ns)   --->   "%tmp_36 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 27)" [cpp/accel/Accel.cpp:654]   --->   Operation 72 'bitselect' 'tmp_36' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 73 [1/1] (0.00ns)   --->   "%tmp_37 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 25)" [cpp/accel/Accel.cpp:654]   --->   Operation 73 'bitselect' 'tmp_37' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 74 [1/1] (0.00ns)   --->   "%tmp_38 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 23)" [cpp/accel/Accel.cpp:654]   --->   Operation 74 'bitselect' 'tmp_38' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 75 [1/1] (0.00ns)   --->   "%tmp_39 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 21)" [cpp/accel/Accel.cpp:654]   --->   Operation 75 'bitselect' 'tmp_39' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 76 [1/1] (0.00ns)   --->   "%tmp_40 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 19)" [cpp/accel/Accel.cpp:654]   --->   Operation 76 'bitselect' 'tmp_40' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 77 [1/1] (0.00ns)   --->   "%tmp_41 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 17)" [cpp/accel/Accel.cpp:654]   --->   Operation 77 'bitselect' 'tmp_41' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 78 [1/1] (0.00ns)   --->   "%tmp_42 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 15)" [cpp/accel/Accel.cpp:654]   --->   Operation 78 'bitselect' 'tmp_42' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_43 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 13)" [cpp/accel/Accel.cpp:654]   --->   Operation 79 'bitselect' 'tmp_43' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 80 [1/1] (0.00ns)   --->   "%tmp_44 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 11)" [cpp/accel/Accel.cpp:654]   --->   Operation 80 'bitselect' 'tmp_44' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 81 [1/1] (0.00ns)   --->   "%tmp_45 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 9)" [cpp/accel/Accel.cpp:654]   --->   Operation 81 'bitselect' 'tmp_45' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 82 [1/1] (0.00ns)   --->   "%tmp_46 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 7)" [cpp/accel/Accel.cpp:654]   --->   Operation 82 'bitselect' 'tmp_46' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 83 [1/1] (0.00ns)   --->   "%tmp_47 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 5)" [cpp/accel/Accel.cpp:654]   --->   Operation 83 'bitselect' 'tmp_47' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 84 [1/1] (0.00ns)   --->   "%tmp_48 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 3)" [cpp/accel/Accel.cpp:654]   --->   Operation 84 'bitselect' 'tmp_48' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 85 [1/1] (0.00ns)   --->   "%tmp_49 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 1)" [cpp/accel/Accel.cpp:654]   --->   Operation 85 'bitselect' 'tmp_49' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 86 [1/1] (0.00ns)   --->   "%and_ln = call i63 @_ssdm_op_BitConcatenate.i63.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1(i1 %tmp_18, i1 false, i1 %tmp_19, i1 false, i1 %tmp_20, i1 false, i1 %tmp_21, i1 false, i1 %tmp_22, i1 false, i1 %tmp_23, i1 false, i1 %tmp_24, i1 false, i1 %tmp_25, i1 false, i1 %tmp_26, i1 false, i1 %tmp_27, i1 false, i1 %tmp_28, i1 false, i1 %tmp_29, i1 false, i1 %tmp_30, i1 false, i1 %tmp_31, i1 false, i1 %tmp_32, i1 false, i1 %tmp_33, i1 false, i1 %tmp_34, i1 false, i1 %tmp_35, i1 false, i1 %tmp_36, i1 false, i1 %tmp_37, i1 false, i1 %tmp_38, i1 false, i1 %tmp_39, i1 false, i1 %tmp_40, i1 false, i1 %tmp_41, i1 false, i1 %tmp_42, i1 false, i1 %tmp_43, i1 false, i1 %tmp_44, i1 false, i1 %tmp_45, i1 false, i1 %tmp_46, i1 false, i1 %tmp_47, i1 false, i1 %tmp_48, i1 false, i1 %tmp_49)" [cpp/accel/Accel.cpp:654]   --->   Operation 86 'bitconcatenate' 'and_ln' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 87 [1/1] (0.00ns)   --->   "%zext_ln1355 = zext i63 %and_ln to i64" [cpp/accel/Accel.cpp:654]   --->   Operation 87 'zext' 'zext_ln1355' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 88 [1/1] (1.98ns)   --->   "%sub_ln701 = sub nsw i64 %xor_ln1357, %zext_ln1355" [cpp/accel/Accel.cpp:654]   --->   Operation 88 'sub' 'sub_ln701' <Predicate = true> <Delay = 1.98> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 89 [1/1] (0.00ns)   --->   "%tmp_4 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 60, i32 61)" [cpp/accel/Accel.cpp:655]   --->   Operation 89 'partselect' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 90 [1/1] (0.00ns)   --->   "%tmp_5 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 56, i32 57)" [cpp/accel/Accel.cpp:655]   --->   Operation 90 'partselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 91 [1/1] (0.00ns)   --->   "%tmp_6 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 52, i32 53)" [cpp/accel/Accel.cpp:655]   --->   Operation 91 'partselect' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 92 [1/1] (0.00ns)   --->   "%tmp_7 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 48, i32 49)" [cpp/accel/Accel.cpp:655]   --->   Operation 92 'partselect' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 93 [1/1] (0.00ns)   --->   "%tmp_8 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 44, i32 45)" [cpp/accel/Accel.cpp:655]   --->   Operation 93 'partselect' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 94 [1/1] (0.00ns)   --->   "%tmp_9 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 40, i32 41)" [cpp/accel/Accel.cpp:655]   --->   Operation 94 'partselect' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 95 [1/1] (0.00ns)   --->   "%tmp_10 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 36, i32 37)" [cpp/accel/Accel.cpp:655]   --->   Operation 95 'partselect' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 96 [1/1] (0.00ns)   --->   "%tmp_11 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 32, i32 33)" [cpp/accel/Accel.cpp:655]   --->   Operation 96 'partselect' 'tmp_11' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 97 [1/1] (0.00ns)   --->   "%tmp_12 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 28, i32 29)" [cpp/accel/Accel.cpp:655]   --->   Operation 97 'partselect' 'tmp_12' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 98 [1/1] (0.00ns)   --->   "%tmp_13 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 24, i32 25)" [cpp/accel/Accel.cpp:655]   --->   Operation 98 'partselect' 'tmp_13' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 99 [1/1] (0.00ns)   --->   "%tmp_14 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 20, i32 21)" [cpp/accel/Accel.cpp:655]   --->   Operation 99 'partselect' 'tmp_14' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 100 [1/1] (0.00ns)   --->   "%tmp_15 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 16, i32 17)" [cpp/accel/Accel.cpp:655]   --->   Operation 100 'partselect' 'tmp_15' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 101 [1/1] (0.00ns)   --->   "%tmp_50 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 12, i32 13)" [cpp/accel/Accel.cpp:655]   --->   Operation 101 'partselect' 'tmp_50' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 102 [1/1] (0.00ns)   --->   "%tmp_51 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 8, i32 9)" [cpp/accel/Accel.cpp:655]   --->   Operation 102 'partselect' 'tmp_51' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 103 [1/1] (0.00ns)   --->   "%tmp_52 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 4, i32 5)" [cpp/accel/Accel.cpp:655]   --->   Operation 103 'partselect' 'tmp_52' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 104 [1/1] (0.00ns)   --->   "%trunc_ln1355 = trunc i64 %sub_ln701 to i2" [cpp/accel/Accel.cpp:655]   --->   Operation 104 'trunc' 'trunc_ln1355' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 105 [1/1] (0.00ns)   --->   "%and_ln1355_1 = call i62 @_ssdm_op_BitConcatenate.i62.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2(i2 %tmp_4, i2 0, i2 %tmp_5, i2 0, i2 %tmp_6, i2 0, i2 %tmp_7, i2 0, i2 %tmp_8, i2 0, i2 %tmp_9, i2 0, i2 %tmp_10, i2 0, i2 %tmp_11, i2 0, i2 %tmp_12, i2 0, i2 %tmp_13, i2 0, i2 %tmp_14, i2 0, i2 %tmp_15, i2 0, i2 %tmp_50, i2 0, i2 %tmp_51, i2 0, i2 %tmp_52, i2 0, i2 %trunc_ln1355)" [cpp/accel/Accel.cpp:655]   --->   Operation 105 'bitconcatenate' 'and_ln1355_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 106 [1/1] (0.00ns)   --->   "%zext_ln1355_1 = zext i62 %and_ln1355_1 to i63" [cpp/accel/Accel.cpp:655]   --->   Operation 106 'zext' 'zext_ln1355_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 107 [1/1] (0.00ns)   --->   "%tmp_53 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 62, i32 63)" [cpp/accel/Accel.cpp:655]   --->   Operation 107 'partselect' 'tmp_53' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 108 [1/1] (0.00ns)   --->   "%tmp_54 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 58, i32 59)" [cpp/accel/Accel.cpp:655]   --->   Operation 108 'partselect' 'tmp_54' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 109 [1/1] (0.00ns)   --->   "%tmp_55 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 54, i32 55)" [cpp/accel/Accel.cpp:655]   --->   Operation 109 'partselect' 'tmp_55' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 110 [1/1] (0.00ns)   --->   "%tmp_56 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 50, i32 51)" [cpp/accel/Accel.cpp:655]   --->   Operation 110 'partselect' 'tmp_56' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 111 [1/1] (0.00ns)   --->   "%tmp_57 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 46, i32 47)" [cpp/accel/Accel.cpp:655]   --->   Operation 111 'partselect' 'tmp_57' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 112 [1/1] (0.00ns)   --->   "%tmp_58 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 42, i32 43)" [cpp/accel/Accel.cpp:655]   --->   Operation 112 'partselect' 'tmp_58' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 113 [1/1] (0.00ns)   --->   "%tmp_59 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 38, i32 39)" [cpp/accel/Accel.cpp:655]   --->   Operation 113 'partselect' 'tmp_59' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 114 [1/1] (0.00ns)   --->   "%tmp_60 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 34, i32 35)" [cpp/accel/Accel.cpp:655]   --->   Operation 114 'partselect' 'tmp_60' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 115 [1/1] (0.00ns)   --->   "%tmp_61 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 30, i32 31)" [cpp/accel/Accel.cpp:655]   --->   Operation 115 'partselect' 'tmp_61' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 116 [1/1] (0.00ns)   --->   "%tmp_62 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 26, i32 27)" [cpp/accel/Accel.cpp:655]   --->   Operation 116 'partselect' 'tmp_62' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 117 [1/1] (0.00ns)   --->   "%tmp_63 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 22, i32 23)" [cpp/accel/Accel.cpp:655]   --->   Operation 117 'partselect' 'tmp_63' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 118 [1/1] (0.00ns)   --->   "%tmp_64 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 18, i32 19)" [cpp/accel/Accel.cpp:655]   --->   Operation 118 'partselect' 'tmp_64' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 119 [1/1] (0.00ns)   --->   "%tmp_65 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 14, i32 15)" [cpp/accel/Accel.cpp:655]   --->   Operation 119 'partselect' 'tmp_65' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 120 [1/1] (0.00ns)   --->   "%tmp_66 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 10, i32 11)" [cpp/accel/Accel.cpp:655]   --->   Operation 120 'partselect' 'tmp_66' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 121 [1/1] (0.00ns)   --->   "%tmp_67 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 6, i32 7)" [cpp/accel/Accel.cpp:655]   --->   Operation 121 'partselect' 'tmp_67' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 122 [1/1] (0.00ns)   --->   "%tmp_68 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 2, i32 3)" [cpp/accel/Accel.cpp:655]   --->   Operation 122 'partselect' 'tmp_68' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 123 [1/1] (0.00ns)   --->   "%and_ln1355_2 = call i62 @_ssdm_op_BitConcatenate.i62.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2(i2 %tmp_53, i2 0, i2 %tmp_54, i2 0, i2 %tmp_55, i2 0, i2 %tmp_56, i2 0, i2 %tmp_57, i2 0, i2 %tmp_58, i2 0, i2 %tmp_59, i2 0, i2 %tmp_60, i2 0, i2 %tmp_61, i2 0, i2 %tmp_62, i2 0, i2 %tmp_63, i2 0, i2 %tmp_64, i2 0, i2 %tmp_65, i2 0, i2 %tmp_66, i2 0, i2 %tmp_67, i2 0, i2 %tmp_68)" [cpp/accel/Accel.cpp:655]   --->   Operation 123 'bitconcatenate' 'and_ln1355_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 124 [1/1] (0.00ns)   --->   "%zext_ln1355_2 = zext i62 %and_ln1355_2 to i63" [cpp/accel/Accel.cpp:655]   --->   Operation 124 'zext' 'zext_ln1355_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 125 [1/1] (0.00ns)   --->   "%trunc_ln68_3 = call i60 @_ssdm_op_BitConcatenate.i60.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2(i2 0, i2 %tmp_5, i2 0, i2 %tmp_6, i2 0, i2 %tmp_7, i2 0, i2 %tmp_8, i2 0, i2 %tmp_9, i2 0, i2 %tmp_10, i2 0, i2 %tmp_11, i2 0, i2 %tmp_12, i2 0, i2 %tmp_13, i2 0, i2 %tmp_14, i2 0, i2 %tmp_15, i2 0, i2 %tmp_50, i2 0, i2 %tmp_51, i2 0, i2 %tmp_52, i2 0, i2 %trunc_ln1355)" [cpp/accel/Accel.cpp:655]   --->   Operation 125 'bitconcatenate' 'trunc_ln68_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 126 [1/1] (0.00ns)   --->   "%trunc_ln68_4 = call i60 @_ssdm_op_BitConcatenate.i60.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2(i2 0, i2 %tmp_54, i2 0, i2 %tmp_55, i2 0, i2 %tmp_56, i2 0, i2 %tmp_57, i2 0, i2 %tmp_58, i2 0, i2 %tmp_59, i2 0, i2 %tmp_60, i2 0, i2 %tmp_61, i2 0, i2 %tmp_62, i2 0, i2 %tmp_63, i2 0, i2 %tmp_64, i2 0, i2 %tmp_65, i2 0, i2 %tmp_66, i2 0, i2 %tmp_67, i2 0, i2 %tmp_68)" [cpp/accel/Accel.cpp:655]   --->   Operation 126 'bitconcatenate' 'trunc_ln68_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 127 [1/1] (1.96ns)   --->   "%add_ln68_3 = add i62 %and_ln1355_1, %and_ln1355_2" [cpp/accel/Accel.cpp:655]   --->   Operation 127 'add' 'add_ln68_3' <Predicate = true> <Delay = 1.96> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 128 [1/1] (1.96ns)   --->   "%add_ln68 = add i63 %zext_ln1355_2, %zext_ln1355_1" [cpp/accel/Accel.cpp:655]   --->   Operation 128 'add' 'add_ln68' <Predicate = true> <Delay = 1.96> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 129 [1/1] (0.00ns)   --->   "%zext_ln700 = zext i2 %trunc_ln1355 to i4" [cpp/accel/Accel.cpp:657]   --->   Operation 129 'zext' 'zext_ln700' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 130 [1/1] (0.00ns)   --->   "%zext_ln700_1 = zext i2 %tmp_68 to i4" [cpp/accel/Accel.cpp:657]   --->   Operation 130 'zext' 'zext_ln700_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 131 [1/1] (0.00ns)   --->   "%tmp_69 = call i59 @_ssdm_op_PartSelect.i59.i63.i32.i32(i63 %add_ln68, i32 4, i32 62)" [cpp/accel/Accel.cpp:656]   --->   Operation 131 'partselect' 'tmp_69' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 132 [1/1] (0.00ns)   --->   "%zext_ln68_1 = zext i59 %tmp_69 to i60" [cpp/accel/Accel.cpp:656]   --->   Operation 132 'zext' 'zext_ln68_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 133 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln68_1 = add i60 %trunc_ln68_3, %trunc_ln68_4" [cpp/accel/Accel.cpp:656]   --->   Operation 133 'add' 'add_ln68_1' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.17> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 134 [1/1] (3.19ns) (root node of TernaryAdder)   --->   "%add_ln68_2 = add i60 %zext_ln68_1, %add_ln68_1" [cpp/accel/Accel.cpp:656]   --->   Operation 134 'add' 'add_ln68_2' <Predicate = true> <Delay = 3.19> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.17> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 135 [1/1] (0.00ns)   --->   "%trunc_ln4 = call i4 @_ssdm_op_PartSelect.i4.i62.i32.i32(i62 %add_ln68_3, i32 4, i32 7)" [cpp/accel/Accel.cpp:657]   --->   Operation 135 'partselect' 'trunc_ln4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 136 [1/1] (0.00ns)   --->   "%tmp_70 = call i4 @_ssdm_op_PartSelect.i4.i60.i32.i32(i60 %add_ln68_2, i32 56, i32 59)" [cpp/accel/Accel.cpp:656]   --->   Operation 136 'partselect' 'tmp_70' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 137 [1/1] (0.00ns)   --->   "%tmp_71 = call i4 @_ssdm_op_PartSelect.i4.i60.i32.i32(i60 %add_ln68_2, i32 48, i32 51)" [cpp/accel/Accel.cpp:656]   --->   Operation 137 'partselect' 'tmp_71' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 138 [1/1] (0.00ns)   --->   "%tmp_72 = call i4 @_ssdm_op_PartSelect.i4.i60.i32.i32(i60 %add_ln68_2, i32 40, i32 43)" [cpp/accel/Accel.cpp:656]   --->   Operation 138 'partselect' 'tmp_72' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 139 [1/1] (0.00ns)   --->   "%tmp_73 = call i4 @_ssdm_op_PartSelect.i4.i60.i32.i32(i60 %add_ln68_2, i32 32, i32 35)" [cpp/accel/Accel.cpp:656]   --->   Operation 139 'partselect' 'tmp_73' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 140 [1/1] (0.00ns)   --->   "%tmp_74 = call i4 @_ssdm_op_PartSelect.i4.i60.i32.i32(i60 %add_ln68_2, i32 24, i32 27)" [cpp/accel/Accel.cpp:656]   --->   Operation 140 'partselect' 'tmp_74' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 141 [1/1] (0.00ns)   --->   "%tmp_75 = call i4 @_ssdm_op_PartSelect.i4.i60.i32.i32(i60 %add_ln68_2, i32 16, i32 19)" [cpp/accel/Accel.cpp:656]   --->   Operation 141 'partselect' 'tmp_75' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 142 [1/1] (0.00ns)   --->   "%tmp_76 = call i4 @_ssdm_op_PartSelect.i4.i60.i32.i32(i60 %add_ln68_2, i32 8, i32 11)" [cpp/accel/Accel.cpp:656]   --->   Operation 142 'partselect' 'tmp_76' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 143 [1/1] (0.00ns)   --->   "%trunc_ln68 = trunc i60 %add_ln68_2 to i4" [cpp/accel/Accel.cpp:656]   --->   Operation 143 'trunc' 'trunc_ln68' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 144 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln700_7 = add i4 %zext_ln700, %trunc_ln4" [cpp/accel/Accel.cpp:657]   --->   Operation 144 'add' 'add_ln700_7' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.17> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 145 [1/1] (2.12ns) (root node of TernaryAdder)   --->   "%add_ln700 = add i4 %add_ln700_7, %zext_ln700_1" [cpp/accel/Accel.cpp:657]   --->   Operation 145 'add' 'add_ln700' <Predicate = true> <Delay = 2.12> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.17> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 5 <SV = 4> <Delay = 8.17>
ST_5 : Operation 146 [1/1] (0.00ns)   --->   "%and_ln1 = call i60 @_ssdm_op_BitConcatenate.i60.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4(i4 %tmp_70, i4 0, i4 %tmp_71, i4 0, i4 %tmp_72, i4 0, i4 %tmp_73, i4 0, i4 %tmp_74, i4 0, i4 %tmp_75, i4 0, i4 %tmp_76, i4 0, i4 %trunc_ln68)" [cpp/accel/Accel.cpp:656]   --->   Operation 146 'bitconcatenate' 'and_ln1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 147 [1/1] (0.00ns)   --->   "%zext_ln68 = zext i60 %and_ln1 to i61" [cpp/accel/Accel.cpp:656]   --->   Operation 147 'zext' 'zext_ln68' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 148 [1/1] (0.00ns)   --->   "%lshr_ln1503_3 = call i52 @_ssdm_op_BitConcatenate.i52.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4(i4 %tmp_70, i4 0, i4 %tmp_71, i4 0, i4 %tmp_72, i4 0, i4 %tmp_73, i4 0, i4 %tmp_74, i4 0, i4 %tmp_75, i4 0, i4 %tmp_76)" [cpp/accel/Accel.cpp:657]   --->   Operation 148 'bitconcatenate' 'lshr_ln1503_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 149 [1/1] (0.00ns)   --->   "%zext_ln1503_2 = zext i52 %lshr_ln1503_3 to i60" [cpp/accel/Accel.cpp:657]   --->   Operation 149 'zext' 'zext_ln1503_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 150 [1/1] (0.00ns)   --->   "%zext_ln1503 = zext i52 %lshr_ln1503_3 to i61" [cpp/accel/Accel.cpp:657]   --->   Operation 150 'zext' 'zext_ln1503' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 151 [1/1] (1.93ns)   --->   "%add_ln700_13 = add i60 %and_ln1, %zext_ln1503_2" [cpp/accel/Accel.cpp:657]   --->   Operation 151 'add' 'add_ln700_13' <Predicate = true> <Delay = 1.93> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 152 [1/1] (1.93ns)   --->   "%add_ln700_8 = add i61 %zext_ln1503, %zext_ln68" [cpp/accel/Accel.cpp:657]   --->   Operation 152 'add' 'add_ln700_8' <Predicate = true> <Delay = 1.93> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 153 [1/1] (0.00ns)   --->   "%lshr_ln1503_4 = call i45 @_ssdm_op_PartSelect.i45.i61.i32.i32(i61 %add_ln700_8, i32 16, i32 60)" [cpp/accel/Accel.cpp:658]   --->   Operation 153 'partselect' 'lshr_ln1503_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 154 [1/1] (0.00ns)   --->   "%zext_ln1503_4 = zext i45 %lshr_ln1503_4 to i61" [cpp/accel/Accel.cpp:658]   --->   Operation 154 'zext' 'zext_ln1503_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 155 [1/1] (1.94ns)   --->   "%add_ln700_9 = add i61 %zext_ln1503_4, %add_ln700_8" [cpp/accel/Accel.cpp:658]   --->   Operation 155 'add' 'add_ln700_9' <Predicate = true> <Delay = 1.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 156 [1/1] (0.00ns)   --->   "%zext_ln1503_1 = zext i4 %add_ln700 to i7" [cpp/accel/Accel.cpp:662]   --->   Operation 156 'zext' 'zext_ln1503_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 157 [1/1] (0.00ns)   --->   "%trunc_ln5 = call i7 @_ssdm_op_BitConcatenate.i7.i3.i4(i3 0, i4 %tmp_76)" [cpp/accel/Accel.cpp:662]   --->   Operation 157 'bitconcatenate' 'trunc_ln5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 158 [1/1] (0.00ns)   --->   "%trunc_ln1503_1 = call i7 @_ssdm_op_PartSelect.i7.i61.i32.i32(i61 %add_ln700_9, i32 32, i32 38)" [cpp/accel/Accel.cpp:662]   --->   Operation 158 'partselect' 'trunc_ln1503_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 159 [1/1] (0.00ns)   --->   "%trunc_ln1503_2 = call i7 @_ssdm_op_PartSelect.i7.i60.i32.i32(i60 %add_ln700_13, i32 16, i32 22)" [cpp/accel/Accel.cpp:662]   --->   Operation 159 'partselect' 'trunc_ln1503_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 160 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln1503 = add i7 %trunc_ln1503_1, %trunc_ln1503_2" [cpp/accel/Accel.cpp:662]   --->   Operation 160 'add' 'add_ln1503' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.17> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 161 [1/1] (1.37ns)   --->   "%add_ln1503_1 = add i7 %zext_ln1503_1, %trunc_ln5" [cpp/accel/Accel.cpp:662]   --->   Operation 161 'add' 'add_ln1503_1' <Predicate = true> <Delay = 1.37> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 162 [1/1] (2.35ns) (root node of TernaryAdder)   --->   "%add_ln1503_2 = add i7 %add_ln1503_1, %add_ln1503" [cpp/accel/Accel.cpp:662]   --->   Operation 162 'add' 'add_ln1503_2' <Predicate = true> <Delay = 2.35> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.17> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 163 [1/1] (0.00ns)   --->   "%shl_ln = call i8 @_ssdm_op_BitConcatenate.i8.i7.i1(i7 %add_ln1503_2, i1 false)" [cpp/accel/Accel.cpp:662]   --->   Operation 163 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 164 [1/1] (0.00ns)   --->   "%zext_ln1503_3 = zext i8 %shl_ln to i9" [cpp/accel/Accel.cpp:662]   --->   Operation 164 'zext' 'zext_ln1503_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 165 [1/1] (1.39ns)   --->   "%sum_m_0_V = sub i9 64, %zext_ln1503_3" [cpp/accel/Accel.cpp:662]   --->   Operation 165 'sub' 'sum_m_0_V' <Predicate = true> <Delay = 1.39> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 166 [1/1] (0.00ns)   --->   "%sext_ln68 = sext i9 %sum_m_0_V to i16" [cpp/accel/Accel.cpp:662]   --->   Operation 166 'sext' 'sext_ln68' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 167 [1/1] (0.54ns)   --->   "%sum_m_1_V_1 = select i1 %trunc_ln180, i16 %sext_ln68, i16 %sum_m_V_1_09" [cpp/accel/Accel.cpp:662]   --->   Operation 167 'select' 'sum_m_1_V_1' <Predicate = true> <Delay = 0.54> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 168 [1/1] (0.54ns)   --->   "%sum_m_1_V_2 = select i1 %trunc_ln180, i16 %sum_m_V_0_08, i16 %sext_ln68" [cpp/accel/Accel.cpp:662]   --->   Operation 168 'select' 'sum_m_1_V_2' <Predicate = true> <Delay = 0.54> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 169 [1/1] (0.00ns)   --->   "br label %0" [cpp/accel/Accel.cpp:645]   --->   Operation 169 'br' <Predicate = true> <Delay = 0.00>

State 6 <SV = 3> <Delay = 2.66>
ST_6 : Operation 170 [1/1] (0.00ns)   --->   "%p_0257_1_0_0 = phi i16 [ %add_ln700_11, %1 ], [ 0, %.preheader.0.0.preheader ]" [cpp/accel/Accel.cpp:666]   --->   Operation 170 'phi' 'p_0257_1_0_0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 171 [1/1] (0.00ns)   --->   "%p_0759_0_0_0 = phi i2 [ %add_ln700_12, %1 ], [ 0, %.preheader.0.0.preheader ]" [cpp/accel/Accel.cpp:665]   --->   Operation 171 'phi' 'p_0759_0_0_0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 172 [1/1] (0.64ns)   --->   "%icmp_ln887_4 = icmp eq i2 %p_0759_0_0_0, -2" [cpp/accel/Accel.cpp:665]   --->   Operation 172 'icmp' 'icmp_ln887_4' <Predicate = true> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 173 [1/1] (0.00ns)   --->   "%empty_39 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2)"   --->   Operation 173 'speclooptripcount' 'empty_39' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 174 [1/1] (1.00ns)   --->   "%add_ln700_12 = add i2 %p_0759_0_0_0, 1" [cpp/accel/Accel.cpp:665]   --->   Operation 174 'add' 'add_ln700_12' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 175 [1/1] (0.00ns)   --->   "br i1 %icmp_ln887_4, label %LOOP_DENSE_I_end, label %1" [cpp/accel/Accel.cpp:665]   --->   Operation 175 'br' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 176 [1/1] (0.00ns) (grouped into LUT with out node add_ln700_11)   --->   "%trunc_ln700 = trunc i2 %p_0759_0_0_0 to i1" [cpp/accel/Accel.cpp:666]   --->   Operation 176 'trunc' 'trunc_ln700' <Predicate = (!icmp_ln887_4)> <Delay = 0.00>
ST_6 : Operation 177 [1/1] (0.00ns) (grouped into LUT with out node add_ln700_11)   --->   "%select_ln700 = select i1 %trunc_ln700, i16 %sum_m_V_1_09, i16 %sum_m_V_0_08" [cpp/accel/Accel.cpp:666]   --->   Operation 177 'select' 'select_ln700' <Predicate = (!icmp_ln887_4)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 178 [1/1] (1.48ns) (out node of the LUT)   --->   "%add_ln700_11 = add i16 %select_ln700, %p_0257_1_0_0" [cpp/accel/Accel.cpp:666]   --->   Operation 178 'add' 'add_ln700_11' <Predicate = (!icmp_ln887_4)> <Delay = 1.48> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 179 [1/1] (0.00ns)   --->   "br label %.preheader.0.0" [cpp/accel/Accel.cpp:665]   --->   Operation 179 'br' <Predicate = (!icmp_ln887_4)> <Delay = 0.00>
ST_6 : Operation 180 [2/2] (2.66ns)   --->   "%kh_mem_V_2_load = load i64* %kh_mem_V_2_addr, align 8" [cpp/accel/Accel.cpp:673]   --->   Operation 180 'load' 'kh_mem_V_2_load' <Predicate = (icmp_ln887_4 & icmp_ln879)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>
ST_6 : Operation 181 [1/1] (0.64ns)   --->   "%icmp_ln879_3 = icmp eq i2 %layer_type_V_read, -1" [cpp/accel/Accel.cpp:714]   --->   Operation 181 'icmp' 'icmp_ln879_3' <Predicate = (icmp_ln887_4)> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 4> <Delay = 7.60>
ST_7 : Operation 182 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str38, i32 %tmp)" [cpp/accel/Accel.cpp:667]   --->   Operation 182 'specregionend' 'empty' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 183 [1/2] (2.66ns)   --->   "%kh_mem_V_2_load = load i64* %kh_mem_V_2_addr, align 8" [cpp/accel/Accel.cpp:673]   --->   Operation 183 'load' 'kh_mem_V_2_load' <Predicate = (icmp_ln879)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>
ST_7 : Operation 184 [1/1] (0.00ns)   --->   "%trunc_ln647 = trunc i64 %kh_mem_V_2_load to i16" [cpp/accel/Accel.cpp:678]   --->   Operation 184 'trunc' 'trunc_ln647' <Predicate = (icmp_ln879)> <Delay = 0.00>
ST_7 : Operation 185 [1/1] (0.00ns)   --->   "%zext_ln555 = zext i6 %o_offset_V to i32" [cpp/accel/Accel.cpp:686]   --->   Operation 185 'zext' 'zext_ln555' <Predicate = (icmp_ln879)> <Delay = 0.00>
ST_7 : Operation 186 [1/1] (1.49ns)   --->   "%icmp_ln816 = icmp slt i16 %p_0257_1_0_0, %trunc_ln647" [cpp/accel/Accel.cpp:686]   --->   Operation 186 'icmp' 'icmp_ln816' <Predicate = (icmp_ln879)> <Delay = 1.49> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 187 [1/1] (0.00ns)   --->   "%zext_ln816 = zext i1 %icmp_ln816 to i32" [cpp/accel/Accel.cpp:686]   --->   Operation 187 'zext' 'zext_ln816' <Predicate = (icmp_ln879)> <Delay = 0.00>
ST_7 : Operation 188 [1/1] (0.00ns)   --->   "%tmp_77 = call i64 @_ssdm_op_BitSet.i64.i64.i32.i32(i64 %dmem_V_1_load, i32 %zext_ln555, i32 %zext_ln816)" [cpp/accel/Accel.cpp:686]   --->   Operation 188 'bitset' 'tmp_77' <Predicate = (icmp_ln879)> <Delay = 0.00>
ST_7 : Operation 189 [1/1] (0.77ns)   --->   "%select_ln879 = select i1 %icmp_ln879, i64 %tmp_77, i64 %dmem_V_1_load" [cpp/accel/Accel.cpp:623]   --->   Operation 189 'select' 'select_ln879' <Predicate = true> <Delay = 0.77> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 190 [1/1] (2.66ns)   --->   "store i64 %select_ln879, i64* %dmem_V_1_addr, align 8" [cpp/accel/Accel.cpp:710]   --->   Operation 190 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>
ST_7 : Operation 191 [1/1] (0.00ns)   --->   "br i1 %icmp_ln879_3, label %2, label %._crit_edge1979" [cpp/accel/Accel.cpp:714]   --->   Operation 191 'br' <Predicate = true> <Delay = 0.00>

State 8 <SV = 5> <Delay = 2.66>
ST_8 : Operation 192 [1/1] (2.66ns)   --->   "store i64 0, i64* %dmem_V_1_addr_2, align 8" [cpp/accel/Accel.cpp:718]   --->   Operation 192 'store' <Predicate = (icmp_ln879_3)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>
ST_8 : Operation 193 [1/1] (0.00ns)   --->   "br label %._crit_edge1979" [cpp/accel/Accel.cpp:719]   --->   Operation 193 'br' <Predicate = (icmp_ln879_3)> <Delay = 0.00>
ST_8 : Operation 194 [1/1] (0.00ns)   --->   "ret void" [cpp/accel/Accel.cpp:720]   --->   Operation 194 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 12ns, clock uncertainty: 1.5ns.

 <State 1>: 2.66ns
The critical path consists of the following:
	wire read on port 'o_index_V_2' (cpp/accel/Accel.cpp:613) [8]  (0 ns)
	'getelementptr' operation ('dmem_V_1_addr', cpp/accel/Accel.cpp:637) [25]  (0 ns)
	'load' operation ('dmem_V_1_load', cpp/accel/Accel.cpp:637) on array 'dmem_V_2' [26]  (2.66 ns)

 <State 2>: 2.66ns
The critical path consists of the following:
	'load' operation ('dmem_V_1_load', cpp/accel/Accel.cpp:637) on array 'dmem_V_2' [26]  (2.66 ns)

 <State 3>: 3.67ns
The critical path consists of the following:
	'phi' operation ('p_0348_0_0_0', cpp/accel/Accel.cpp:645) with incoming values : ('add_ln700_10', cpp/accel/Accel.cpp:645) [32]  (0 ns)
	'add' operation ('add_ln648', cpp/accel/Accel.cpp:648) [43]  (1 ns)
	'getelementptr' operation ('dmem_V_1_addr_1', cpp/accel/Accel.cpp:648) [46]  (0 ns)
	'load' operation ('dmem_V_1_load_1', cpp/accel/Accel.cpp:648) on array 'dmem_V_2' [47]  (2.66 ns)

 <State 4>: 10.5ns
The critical path consists of the following:
	'load' operation ('dmem_V_1_load_1', cpp/accel/Accel.cpp:648) on array 'dmem_V_2' [47]  (2.66 ns)
	'xor' operation ('xor_ln1357', cpp/accel/Accel.cpp:651) [49]  (0.688 ns)
	'sub' operation ('sub_ln701', cpp/accel/Accel.cpp:654) [84]  (1.99 ns)
	'add' operation ('add_ln68', cpp/accel/Accel.cpp:655) [124]  (1.96 ns)
	'add' operation ('add_ln68_2', cpp/accel/Accel.cpp:656) [130]  (3.19 ns)

 <State 5>: 8.18ns
The critical path consists of the following:
	'add' operation ('add_ln700_8', cpp/accel/Accel.cpp:657) [148]  (1.94 ns)
	'add' operation ('add_ln700_9', cpp/accel/Accel.cpp:658) [151]  (1.95 ns)
	'add' operation ('add_ln1503', cpp/accel/Accel.cpp:662) [156]  (0 ns)
	'add' operation ('add_ln1503_2', cpp/accel/Accel.cpp:662) [158]  (2.35 ns)
	'sub' operation ('sum_m[0].V', cpp/accel/Accel.cpp:662) [161]  (1.39 ns)
	'select' operation ('sum_m[1].V', cpp/accel/Accel.cpp:662) [164]  (0.549 ns)

 <State 6>: 2.66ns
The critical path consists of the following:
	'load' operation ('kh_mem_V_2_load', cpp/accel/Accel.cpp:673) on array 'kh_mem_V_2' [183]  (2.66 ns)

 <State 7>: 7.6ns
The critical path consists of the following:
	'load' operation ('kh_mem_V_2_load', cpp/accel/Accel.cpp:673) on array 'kh_mem_V_2' [183]  (2.66 ns)
	'icmp' operation ('icmp_ln816', cpp/accel/Accel.cpp:686) [186]  (1.5 ns)
	'select' operation ('select_ln879', cpp/accel/Accel.cpp:623) [189]  (0.775 ns)
	'store' operation ('store_ln710', cpp/accel/Accel.cpp:710) of variable 'select_ln879', cpp/accel/Accel.cpp:623 on array 'dmem_V_2' [190]  (2.66 ns)

 <State 8>: 2.66ns
The critical path consists of the following:
	'store' operation ('store_ln718', cpp/accel/Accel.cpp:718) of constant 0 on array 'dmem_V_2' [194]  (2.66 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
