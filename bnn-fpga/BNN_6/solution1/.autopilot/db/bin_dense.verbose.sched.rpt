

================================================================
== Vivado HLS Report for 'bin_dense'
================================================================
* Date:           Sun Mar 28 14:40:21 2021

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        BNN_6
* Solution:       solution1
* Product family: kintex7
* Target device:  xc7k70t-fbv676-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  12.00|    10.489|        1.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    5|    5|    5|    5|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.66>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%o_index_V_2_read = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %o_index_V_2)" [cpp/accel/Accel.cpp:644]   --->   Operation 7 'read' 'o_index_V_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%d_o_idx_V_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %d_o_idx_V)" [cpp/accel/Accel.cpp:644]   --->   Operation 8 'read' 'd_o_idx_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%o_offset_V = trunc i16 %o_index_V_2_read to i6" [cpp/accel/Accel.cpp:630]   --->   Operation 9 'trunc' 'o_offset_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%tmp_19 = call i1 @_ssdm_op_BitSelect.i1.i16.i32(i16 %o_index_V_2_read, i32 6)" [cpp/accel/Accel.cpp:629]   --->   Operation 10 'bitselect' 'tmp_19' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%tmp_2 = call i9 @_ssdm_op_PartSelect.i9.i16.i32.i32(i16 %o_index_V_2_read, i32 7, i32 15)" [cpp/accel/Accel.cpp:631]   --->   Operation 11 'partselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%zext_ln1371 = zext i9 %tmp_2 to i10" [cpp/accel/Accel.cpp:631]   --->   Operation 12 'zext' 'zext_ln1371' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%tmp_3 = call i12 @_ssdm_op_BitConcatenate.i12.i1.i1.i10(i1 %d_o_idx_V_read, i1 %tmp_19, i10 %zext_ln1371)" [cpp/accel/Accel.cpp:631]   --->   Operation 13 'bitconcatenate' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%zext_ln631 = zext i12 %tmp_3 to i64" [cpp/accel/Accel.cpp:631]   --->   Operation 14 'zext' 'zext_ln631' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%dmem_V_1_addr = getelementptr [4096 x i64]* %dmem_V_2, i64 0, i64 %zext_ln631" [cpp/accel/Accel.cpp:631]   --->   Operation 15 'getelementptr' 'dmem_V_1_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [2/2] (2.66ns)   --->   "%dmem_V_1_load = load i64* %dmem_V_1_addr, align 8" [cpp/accel/Accel.cpp:631]   --->   Operation 16 'load' 'dmem_V_1_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>

State 2 <SV = 1> <Delay = 2.66>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%d_i_idx_V_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %d_i_idx_V)" [cpp/accel/Accel.cpp:644]   --->   Operation 17 'read' 'd_i_idx_V_read' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%wt_mem_V_2_addr = getelementptr [4682 x i64]* %wt_mem_V_2, i64 0, i64 0" [cpp/accel/Accel.cpp:644]   --->   Operation 18 'getelementptr' 'wt_mem_V_2_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%wt_mem_V_2_addr_1 = getelementptr [4682 x i64]* %wt_mem_V_2, i64 0, i64 2341" [cpp/accel/Accel.cpp:644]   --->   Operation 19 'getelementptr' 'wt_mem_V_2_addr_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%tmp_s = call i12 @_ssdm_op_BitConcatenate.i12.i1.i11(i1 %d_i_idx_V_read, i11 0)" [cpp/accel/Accel.cpp:643]   --->   Operation 20 'bitconcatenate' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%zext_ln643 = zext i12 %tmp_s to i64" [cpp/accel/Accel.cpp:643]   --->   Operation 21 'zext' 'zext_ln643' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%dmem_V_1_addr_1 = getelementptr [4096 x i64]* %dmem_V_2, i64 0, i64 %zext_ln643" [cpp/accel/Accel.cpp:643]   --->   Operation 22 'getelementptr' 'dmem_V_1_addr_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%or_ln643 = or i12 %tmp_s, 1024" [cpp/accel/Accel.cpp:643]   --->   Operation 23 'or' 'or_ln643' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%tmp_1 = call i64 @_ssdm_op_BitConcatenate.i64.i52.i12(i52 0, i12 %or_ln643)" [cpp/accel/Accel.cpp:643]   --->   Operation 24 'bitconcatenate' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%dmem_V_1_addr_2 = getelementptr [4096 x i64]* %dmem_V_2, i64 0, i64 %tmp_1" [cpp/accel/Accel.cpp:643]   --->   Operation 25 'getelementptr' 'dmem_V_1_addr_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/2] (2.66ns)   --->   "%dmem_V_1_load = load i64* %dmem_V_1_addr, align 8" [cpp/accel/Accel.cpp:631]   --->   Operation 26 'load' 'dmem_V_1_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>
ST_2 : Operation 27 [2/2] (2.66ns)   --->   "%dmem_V_1_load_1 = load i64* %dmem_V_1_addr_1, align 8" [cpp/accel/Accel.cpp:643]   --->   Operation 27 'load' 'dmem_V_1_load_1' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>
ST_2 : Operation 28 [2/2] (2.66ns)   --->   "%wt_mem_V_2_load = load i64* %wt_mem_V_2_addr, align 8" [cpp/accel/Accel.cpp:644]   --->   Operation 28 'load' 'wt_mem_V_2_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>
ST_2 : Operation 29 [2/2] (2.66ns)   --->   "%dmem_V_1_load_2 = load i64* %dmem_V_1_addr_2, align 8" [cpp/accel/Accel.cpp:643]   --->   Operation 29 'load' 'dmem_V_1_load_2' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>
ST_2 : Operation 30 [2/2] (2.66ns)   --->   "%wt_mem_V_2_load_1 = load i64* %wt_mem_V_2_addr_1, align 8" [cpp/accel/Accel.cpp:644]   --->   Operation 30 'load' 'wt_mem_V_2_load_1' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>

State 3 <SV = 2> <Delay = 10.4>
ST_3 : Operation 31 [1/2] (2.66ns)   --->   "%dmem_V_1_load_1 = load i64* %dmem_V_1_addr_1, align 8" [cpp/accel/Accel.cpp:643]   --->   Operation 31 'load' 'dmem_V_1_load_1' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>
ST_3 : Operation 32 [1/2] (2.66ns)   --->   "%wt_mem_V_2_load = load i64* %wt_mem_V_2_addr, align 8" [cpp/accel/Accel.cpp:644]   --->   Operation 32 'load' 'wt_mem_V_2_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>
ST_3 : Operation 33 [1/1] (0.68ns)   --->   "%xor_ln1357 = xor i64 %wt_mem_V_2_load, %dmem_V_1_load_1" [cpp/accel/Accel.cpp:646]   --->   Operation 33 'xor' 'xor_ln1357' <Predicate = true> <Delay = 0.68> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%tmp_20 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 63)" [cpp/accel/Accel.cpp:649]   --->   Operation 34 'bitselect' 'tmp_20' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%tmp_21 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 61)" [cpp/accel/Accel.cpp:649]   --->   Operation 35 'bitselect' 'tmp_21' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%tmp_22 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 59)" [cpp/accel/Accel.cpp:649]   --->   Operation 36 'bitselect' 'tmp_22' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%tmp_23 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 57)" [cpp/accel/Accel.cpp:649]   --->   Operation 37 'bitselect' 'tmp_23' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%tmp_24 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 55)" [cpp/accel/Accel.cpp:649]   --->   Operation 38 'bitselect' 'tmp_24' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%tmp_25 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 53)" [cpp/accel/Accel.cpp:649]   --->   Operation 39 'bitselect' 'tmp_25' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%tmp_26 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 51)" [cpp/accel/Accel.cpp:649]   --->   Operation 40 'bitselect' 'tmp_26' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%tmp_27 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 49)" [cpp/accel/Accel.cpp:649]   --->   Operation 41 'bitselect' 'tmp_27' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%tmp_28 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 47)" [cpp/accel/Accel.cpp:649]   --->   Operation 42 'bitselect' 'tmp_28' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%tmp_29 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 45)" [cpp/accel/Accel.cpp:649]   --->   Operation 43 'bitselect' 'tmp_29' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%tmp_30 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 43)" [cpp/accel/Accel.cpp:649]   --->   Operation 44 'bitselect' 'tmp_30' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%tmp_31 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 41)" [cpp/accel/Accel.cpp:649]   --->   Operation 45 'bitselect' 'tmp_31' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%tmp_32 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 39)" [cpp/accel/Accel.cpp:649]   --->   Operation 46 'bitselect' 'tmp_32' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%tmp_33 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 37)" [cpp/accel/Accel.cpp:649]   --->   Operation 47 'bitselect' 'tmp_33' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%tmp_34 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 35)" [cpp/accel/Accel.cpp:649]   --->   Operation 48 'bitselect' 'tmp_34' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_35 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 33)" [cpp/accel/Accel.cpp:649]   --->   Operation 49 'bitselect' 'tmp_35' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%tmp_36 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 31)" [cpp/accel/Accel.cpp:649]   --->   Operation 50 'bitselect' 'tmp_36' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%tmp_37 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 29)" [cpp/accel/Accel.cpp:649]   --->   Operation 51 'bitselect' 'tmp_37' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%tmp_38 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 27)" [cpp/accel/Accel.cpp:649]   --->   Operation 52 'bitselect' 'tmp_38' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%tmp_39 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 25)" [cpp/accel/Accel.cpp:649]   --->   Operation 53 'bitselect' 'tmp_39' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%tmp_40 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 23)" [cpp/accel/Accel.cpp:649]   --->   Operation 54 'bitselect' 'tmp_40' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%tmp_41 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 21)" [cpp/accel/Accel.cpp:649]   --->   Operation 55 'bitselect' 'tmp_41' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%tmp_42 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 19)" [cpp/accel/Accel.cpp:649]   --->   Operation 56 'bitselect' 'tmp_42' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "%tmp_43 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 17)" [cpp/accel/Accel.cpp:649]   --->   Operation 57 'bitselect' 'tmp_43' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%tmp_44 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 15)" [cpp/accel/Accel.cpp:649]   --->   Operation 58 'bitselect' 'tmp_44' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%tmp_45 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 13)" [cpp/accel/Accel.cpp:649]   --->   Operation 59 'bitselect' 'tmp_45' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%tmp_46 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 11)" [cpp/accel/Accel.cpp:649]   --->   Operation 60 'bitselect' 'tmp_46' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%tmp_47 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 9)" [cpp/accel/Accel.cpp:649]   --->   Operation 61 'bitselect' 'tmp_47' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%tmp_48 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 7)" [cpp/accel/Accel.cpp:649]   --->   Operation 62 'bitselect' 'tmp_48' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "%tmp_49 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 5)" [cpp/accel/Accel.cpp:649]   --->   Operation 63 'bitselect' 'tmp_49' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_50 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 3)" [cpp/accel/Accel.cpp:649]   --->   Operation 64 'bitselect' 'tmp_50' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%tmp_51 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357, i32 1)" [cpp/accel/Accel.cpp:649]   --->   Operation 65 'bitselect' 'tmp_51' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%and_ln = call i63 @_ssdm_op_BitConcatenate.i63.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1(i1 %tmp_20, i1 false, i1 %tmp_21, i1 false, i1 %tmp_22, i1 false, i1 %tmp_23, i1 false, i1 %tmp_24, i1 false, i1 %tmp_25, i1 false, i1 %tmp_26, i1 false, i1 %tmp_27, i1 false, i1 %tmp_28, i1 false, i1 %tmp_29, i1 false, i1 %tmp_30, i1 false, i1 %tmp_31, i1 false, i1 %tmp_32, i1 false, i1 %tmp_33, i1 false, i1 %tmp_34, i1 false, i1 %tmp_35, i1 false, i1 %tmp_36, i1 false, i1 %tmp_37, i1 false, i1 %tmp_38, i1 false, i1 %tmp_39, i1 false, i1 %tmp_40, i1 false, i1 %tmp_41, i1 false, i1 %tmp_42, i1 false, i1 %tmp_43, i1 false, i1 %tmp_44, i1 false, i1 %tmp_45, i1 false, i1 %tmp_46, i1 false, i1 %tmp_47, i1 false, i1 %tmp_48, i1 false, i1 %tmp_49, i1 false, i1 %tmp_50, i1 false, i1 %tmp_51)" [cpp/accel/Accel.cpp:649]   --->   Operation 66 'bitconcatenate' 'and_ln' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%zext_ln1355 = zext i63 %and_ln to i64" [cpp/accel/Accel.cpp:649]   --->   Operation 67 'zext' 'zext_ln1355' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 68 [1/1] (1.98ns)   --->   "%sub_ln701 = sub nsw i64 %xor_ln1357, %zext_ln1355" [cpp/accel/Accel.cpp:649]   --->   Operation 68 'sub' 'sub_ln701' <Predicate = true> <Delay = 1.98> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "%tmp_4 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 60, i32 61)" [cpp/accel/Accel.cpp:650]   --->   Operation 69 'partselect' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%tmp_5 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 56, i32 57)" [cpp/accel/Accel.cpp:650]   --->   Operation 70 'partselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%tmp_6 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 52, i32 53)" [cpp/accel/Accel.cpp:650]   --->   Operation 71 'partselect' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%tmp_7 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 48, i32 49)" [cpp/accel/Accel.cpp:650]   --->   Operation 72 'partselect' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%tmp_8 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 44, i32 45)" [cpp/accel/Accel.cpp:650]   --->   Operation 73 'partselect' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (0.00ns)   --->   "%tmp_9 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 40, i32 41)" [cpp/accel/Accel.cpp:650]   --->   Operation 74 'partselect' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%tmp_10 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 36, i32 37)" [cpp/accel/Accel.cpp:650]   --->   Operation 75 'partselect' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (0.00ns)   --->   "%tmp_11 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 32, i32 33)" [cpp/accel/Accel.cpp:650]   --->   Operation 76 'partselect' 'tmp_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%tmp_12 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 28, i32 29)" [cpp/accel/Accel.cpp:650]   --->   Operation 77 'partselect' 'tmp_12' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (0.00ns)   --->   "%tmp_13 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 24, i32 25)" [cpp/accel/Accel.cpp:650]   --->   Operation 78 'partselect' 'tmp_13' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_14 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 20, i32 21)" [cpp/accel/Accel.cpp:650]   --->   Operation 79 'partselect' 'tmp_14' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%tmp_15 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 16, i32 17)" [cpp/accel/Accel.cpp:650]   --->   Operation 80 'partselect' 'tmp_15' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%tmp_16 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 12, i32 13)" [cpp/accel/Accel.cpp:650]   --->   Operation 81 'partselect' 'tmp_16' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%tmp_17 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 8, i32 9)" [cpp/accel/Accel.cpp:650]   --->   Operation 82 'partselect' 'tmp_17' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "%tmp_18 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 4, i32 5)" [cpp/accel/Accel.cpp:650]   --->   Operation 83 'partselect' 'tmp_18' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "%trunc_ln1355 = trunc i64 %sub_ln701 to i2" [cpp/accel/Accel.cpp:650]   --->   Operation 84 'trunc' 'trunc_ln1355' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "%and_ln1355_1 = call i62 @_ssdm_op_BitConcatenate.i62.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2(i2 %tmp_4, i2 0, i2 %tmp_5, i2 0, i2 %tmp_6, i2 0, i2 %tmp_7, i2 0, i2 %tmp_8, i2 0, i2 %tmp_9, i2 0, i2 %tmp_10, i2 0, i2 %tmp_11, i2 0, i2 %tmp_12, i2 0, i2 %tmp_13, i2 0, i2 %tmp_14, i2 0, i2 %tmp_15, i2 0, i2 %tmp_16, i2 0, i2 %tmp_17, i2 0, i2 %tmp_18, i2 0, i2 %trunc_ln1355)" [cpp/accel/Accel.cpp:650]   --->   Operation 85 'bitconcatenate' 'and_ln1355_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "%zext_ln1355_1 = zext i62 %and_ln1355_1 to i63" [cpp/accel/Accel.cpp:650]   --->   Operation 86 'zext' 'zext_ln1355_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 87 [1/1] (0.00ns)   --->   "%tmp_52 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 62, i32 63)" [cpp/accel/Accel.cpp:650]   --->   Operation 87 'partselect' 'tmp_52' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "%tmp_53 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 58, i32 59)" [cpp/accel/Accel.cpp:650]   --->   Operation 88 'partselect' 'tmp_53' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%tmp_54 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 54, i32 55)" [cpp/accel/Accel.cpp:650]   --->   Operation 89 'partselect' 'tmp_54' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "%tmp_55 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 50, i32 51)" [cpp/accel/Accel.cpp:650]   --->   Operation 90 'partselect' 'tmp_55' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (0.00ns)   --->   "%tmp_56 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 46, i32 47)" [cpp/accel/Accel.cpp:650]   --->   Operation 91 'partselect' 'tmp_56' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%tmp_57 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 42, i32 43)" [cpp/accel/Accel.cpp:650]   --->   Operation 92 'partselect' 'tmp_57' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "%tmp_58 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 38, i32 39)" [cpp/accel/Accel.cpp:650]   --->   Operation 93 'partselect' 'tmp_58' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 94 [1/1] (0.00ns)   --->   "%tmp_59 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 34, i32 35)" [cpp/accel/Accel.cpp:650]   --->   Operation 94 'partselect' 'tmp_59' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "%tmp_60 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 30, i32 31)" [cpp/accel/Accel.cpp:650]   --->   Operation 95 'partselect' 'tmp_60' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 96 [1/1] (0.00ns)   --->   "%tmp_61 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 26, i32 27)" [cpp/accel/Accel.cpp:650]   --->   Operation 96 'partselect' 'tmp_61' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 97 [1/1] (0.00ns)   --->   "%tmp_62 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 22, i32 23)" [cpp/accel/Accel.cpp:650]   --->   Operation 97 'partselect' 'tmp_62' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 98 [1/1] (0.00ns)   --->   "%tmp_63 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 18, i32 19)" [cpp/accel/Accel.cpp:650]   --->   Operation 98 'partselect' 'tmp_63' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 99 [1/1] (0.00ns)   --->   "%tmp_64 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 14, i32 15)" [cpp/accel/Accel.cpp:650]   --->   Operation 99 'partselect' 'tmp_64' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 100 [1/1] (0.00ns)   --->   "%tmp_65 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 10, i32 11)" [cpp/accel/Accel.cpp:650]   --->   Operation 100 'partselect' 'tmp_65' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 101 [1/1] (0.00ns)   --->   "%tmp_66 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 6, i32 7)" [cpp/accel/Accel.cpp:650]   --->   Operation 101 'partselect' 'tmp_66' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 102 [1/1] (0.00ns)   --->   "%tmp_67 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701, i32 2, i32 3)" [cpp/accel/Accel.cpp:650]   --->   Operation 102 'partselect' 'tmp_67' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 103 [1/1] (0.00ns)   --->   "%and_ln1355_2 = call i62 @_ssdm_op_BitConcatenate.i62.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2(i2 %tmp_52, i2 0, i2 %tmp_53, i2 0, i2 %tmp_54, i2 0, i2 %tmp_55, i2 0, i2 %tmp_56, i2 0, i2 %tmp_57, i2 0, i2 %tmp_58, i2 0, i2 %tmp_59, i2 0, i2 %tmp_60, i2 0, i2 %tmp_61, i2 0, i2 %tmp_62, i2 0, i2 %tmp_63, i2 0, i2 %tmp_64, i2 0, i2 %tmp_65, i2 0, i2 %tmp_66, i2 0, i2 %tmp_67)" [cpp/accel/Accel.cpp:650]   --->   Operation 103 'bitconcatenate' 'and_ln1355_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 104 [1/1] (0.00ns)   --->   "%zext_ln1355_2 = zext i62 %and_ln1355_2 to i63" [cpp/accel/Accel.cpp:650]   --->   Operation 104 'zext' 'zext_ln1355_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 105 [1/1] (0.00ns)   --->   "%trunc_ln68_3 = call i60 @_ssdm_op_BitConcatenate.i60.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2(i2 0, i2 %tmp_5, i2 0, i2 %tmp_6, i2 0, i2 %tmp_7, i2 0, i2 %tmp_8, i2 0, i2 %tmp_9, i2 0, i2 %tmp_10, i2 0, i2 %tmp_11, i2 0, i2 %tmp_12, i2 0, i2 %tmp_13, i2 0, i2 %tmp_14, i2 0, i2 %tmp_15, i2 0, i2 %tmp_16, i2 0, i2 %tmp_17, i2 0, i2 %tmp_18, i2 0, i2 %trunc_ln1355)" [cpp/accel/Accel.cpp:650]   --->   Operation 105 'bitconcatenate' 'trunc_ln68_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 106 [1/1] (0.00ns)   --->   "%trunc_ln68_4 = call i60 @_ssdm_op_BitConcatenate.i60.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2(i2 0, i2 %tmp_53, i2 0, i2 %tmp_54, i2 0, i2 %tmp_55, i2 0, i2 %tmp_56, i2 0, i2 %tmp_57, i2 0, i2 %tmp_58, i2 0, i2 %tmp_59, i2 0, i2 %tmp_60, i2 0, i2 %tmp_61, i2 0, i2 %tmp_62, i2 0, i2 %tmp_63, i2 0, i2 %tmp_64, i2 0, i2 %tmp_65, i2 0, i2 %tmp_66, i2 0, i2 %tmp_67)" [cpp/accel/Accel.cpp:650]   --->   Operation 106 'bitconcatenate' 'trunc_ln68_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 107 [1/1] (1.96ns)   --->   "%add_ln68_6 = add i62 %and_ln1355_1, %and_ln1355_2" [cpp/accel/Accel.cpp:650]   --->   Operation 107 'add' 'add_ln68_6' <Predicate = true> <Delay = 1.96> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 108 [1/1] (1.96ns)   --->   "%add_ln68 = add i63 %zext_ln1355_2, %zext_ln1355_1" [cpp/accel/Accel.cpp:650]   --->   Operation 108 'add' 'add_ln68' <Predicate = true> <Delay = 1.96> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 109 [1/1] (0.00ns)   --->   "%zext_ln700 = zext i2 %trunc_ln1355 to i4" [cpp/accel/Accel.cpp:652]   --->   Operation 109 'zext' 'zext_ln700' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 110 [1/1] (0.00ns)   --->   "%zext_ln700_1 = zext i2 %tmp_67 to i4" [cpp/accel/Accel.cpp:652]   --->   Operation 110 'zext' 'zext_ln700_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 111 [1/1] (0.00ns)   --->   "%tmp_68 = call i59 @_ssdm_op_PartSelect.i59.i63.i32.i32(i63 %add_ln68, i32 4, i32 62)" [cpp/accel/Accel.cpp:651]   --->   Operation 111 'partselect' 'tmp_68' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 112 [1/1] (0.00ns)   --->   "%zext_ln68_2 = zext i59 %tmp_68 to i60" [cpp/accel/Accel.cpp:651]   --->   Operation 112 'zext' 'zext_ln68_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 113 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln68_1 = add i60 %trunc_ln68_3, %trunc_ln68_4" [cpp/accel/Accel.cpp:651]   --->   Operation 113 'add' 'add_ln68_1' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.17> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 114 [1/1] (3.19ns) (root node of TernaryAdder)   --->   "%add_ln68_2 = add i60 %zext_ln68_2, %add_ln68_1" [cpp/accel/Accel.cpp:651]   --->   Operation 114 'add' 'add_ln68_2' <Predicate = true> <Delay = 3.19> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.17> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 115 [1/1] (0.00ns)   --->   "%trunc_ln4 = call i4 @_ssdm_op_PartSelect.i4.i62.i32.i32(i62 %add_ln68_6, i32 4, i32 7)" [cpp/accel/Accel.cpp:652]   --->   Operation 115 'partselect' 'trunc_ln4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 116 [1/1] (0.00ns)   --->   "%tmp_69 = call i4 @_ssdm_op_PartSelect.i4.i60.i32.i32(i60 %add_ln68_2, i32 56, i32 59)" [cpp/accel/Accel.cpp:651]   --->   Operation 116 'partselect' 'tmp_69' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 117 [1/1] (0.00ns)   --->   "%tmp_70 = call i4 @_ssdm_op_PartSelect.i4.i60.i32.i32(i60 %add_ln68_2, i32 48, i32 51)" [cpp/accel/Accel.cpp:651]   --->   Operation 117 'partselect' 'tmp_70' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 118 [1/1] (0.00ns)   --->   "%tmp_71 = call i4 @_ssdm_op_PartSelect.i4.i60.i32.i32(i60 %add_ln68_2, i32 40, i32 43)" [cpp/accel/Accel.cpp:651]   --->   Operation 118 'partselect' 'tmp_71' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 119 [1/1] (0.00ns)   --->   "%tmp_72 = call i4 @_ssdm_op_PartSelect.i4.i60.i32.i32(i60 %add_ln68_2, i32 32, i32 35)" [cpp/accel/Accel.cpp:651]   --->   Operation 119 'partselect' 'tmp_72' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 120 [1/1] (0.00ns)   --->   "%tmp_73 = call i4 @_ssdm_op_PartSelect.i4.i60.i32.i32(i60 %add_ln68_2, i32 24, i32 27)" [cpp/accel/Accel.cpp:651]   --->   Operation 120 'partselect' 'tmp_73' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 121 [1/1] (0.00ns)   --->   "%tmp_74 = call i4 @_ssdm_op_PartSelect.i4.i60.i32.i32(i60 %add_ln68_2, i32 16, i32 19)" [cpp/accel/Accel.cpp:651]   --->   Operation 121 'partselect' 'tmp_74' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 122 [1/1] (0.00ns)   --->   "%tmp_75 = call i4 @_ssdm_op_PartSelect.i4.i60.i32.i32(i60 %add_ln68_2, i32 8, i32 11)" [cpp/accel/Accel.cpp:651]   --->   Operation 122 'partselect' 'tmp_75' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 123 [1/1] (0.00ns)   --->   "%trunc_ln68 = trunc i60 %add_ln68_2 to i4" [cpp/accel/Accel.cpp:651]   --->   Operation 123 'trunc' 'trunc_ln68' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 124 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln700_7 = add i4 %zext_ln700, %trunc_ln4" [cpp/accel/Accel.cpp:652]   --->   Operation 124 'add' 'add_ln700_7' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.17> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 125 [1/1] (2.12ns) (root node of TernaryAdder)   --->   "%add_ln700 = add i4 %add_ln700_7, %zext_ln700_1" [cpp/accel/Accel.cpp:652]   --->   Operation 125 'add' 'add_ln700' <Predicate = true> <Delay = 2.12> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.17> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 126 [1/2] (2.66ns)   --->   "%dmem_V_1_load_2 = load i64* %dmem_V_1_addr_2, align 8" [cpp/accel/Accel.cpp:643]   --->   Operation 126 'load' 'dmem_V_1_load_2' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>
ST_3 : Operation 127 [1/2] (2.66ns)   --->   "%wt_mem_V_2_load_1 = load i64* %wt_mem_V_2_addr_1, align 8" [cpp/accel/Accel.cpp:644]   --->   Operation 127 'load' 'wt_mem_V_2_load_1' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>
ST_3 : Operation 128 [1/1] (0.68ns)   --->   "%xor_ln1357_1 = xor i64 %wt_mem_V_2_load_1, %dmem_V_1_load_2" [cpp/accel/Accel.cpp:646]   --->   Operation 128 'xor' 'xor_ln1357_1' <Predicate = true> <Delay = 0.68> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.68> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 129 [1/1] (0.00ns)   --->   "%tmp_77 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 63)" [cpp/accel/Accel.cpp:649]   --->   Operation 129 'bitselect' 'tmp_77' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 130 [1/1] (0.00ns)   --->   "%tmp_78 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 61)" [cpp/accel/Accel.cpp:649]   --->   Operation 130 'bitselect' 'tmp_78' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 131 [1/1] (0.00ns)   --->   "%tmp_79 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 59)" [cpp/accel/Accel.cpp:649]   --->   Operation 131 'bitselect' 'tmp_79' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 132 [1/1] (0.00ns)   --->   "%tmp_80 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 57)" [cpp/accel/Accel.cpp:649]   --->   Operation 132 'bitselect' 'tmp_80' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 133 [1/1] (0.00ns)   --->   "%tmp_81 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 55)" [cpp/accel/Accel.cpp:649]   --->   Operation 133 'bitselect' 'tmp_81' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 134 [1/1] (0.00ns)   --->   "%tmp_82 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 53)" [cpp/accel/Accel.cpp:649]   --->   Operation 134 'bitselect' 'tmp_82' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 135 [1/1] (0.00ns)   --->   "%tmp_83 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 51)" [cpp/accel/Accel.cpp:649]   --->   Operation 135 'bitselect' 'tmp_83' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 136 [1/1] (0.00ns)   --->   "%tmp_84 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 49)" [cpp/accel/Accel.cpp:649]   --->   Operation 136 'bitselect' 'tmp_84' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 137 [1/1] (0.00ns)   --->   "%tmp_85 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 47)" [cpp/accel/Accel.cpp:649]   --->   Operation 137 'bitselect' 'tmp_85' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 138 [1/1] (0.00ns)   --->   "%tmp_86 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 45)" [cpp/accel/Accel.cpp:649]   --->   Operation 138 'bitselect' 'tmp_86' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 139 [1/1] (0.00ns)   --->   "%tmp_87 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 43)" [cpp/accel/Accel.cpp:649]   --->   Operation 139 'bitselect' 'tmp_87' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 140 [1/1] (0.00ns)   --->   "%tmp_88 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 41)" [cpp/accel/Accel.cpp:649]   --->   Operation 140 'bitselect' 'tmp_88' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 141 [1/1] (0.00ns)   --->   "%tmp_89 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 39)" [cpp/accel/Accel.cpp:649]   --->   Operation 141 'bitselect' 'tmp_89' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 142 [1/1] (0.00ns)   --->   "%tmp_90 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 37)" [cpp/accel/Accel.cpp:649]   --->   Operation 142 'bitselect' 'tmp_90' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 143 [1/1] (0.00ns)   --->   "%tmp_91 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 35)" [cpp/accel/Accel.cpp:649]   --->   Operation 143 'bitselect' 'tmp_91' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 144 [1/1] (0.00ns)   --->   "%tmp_92 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 33)" [cpp/accel/Accel.cpp:649]   --->   Operation 144 'bitselect' 'tmp_92' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 145 [1/1] (0.00ns)   --->   "%tmp_93 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 31)" [cpp/accel/Accel.cpp:649]   --->   Operation 145 'bitselect' 'tmp_93' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 146 [1/1] (0.00ns)   --->   "%tmp_94 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 29)" [cpp/accel/Accel.cpp:649]   --->   Operation 146 'bitselect' 'tmp_94' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 147 [1/1] (0.00ns)   --->   "%tmp_95 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 27)" [cpp/accel/Accel.cpp:649]   --->   Operation 147 'bitselect' 'tmp_95' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 148 [1/1] (0.00ns)   --->   "%tmp_96 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 25)" [cpp/accel/Accel.cpp:649]   --->   Operation 148 'bitselect' 'tmp_96' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 149 [1/1] (0.00ns)   --->   "%tmp_97 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 23)" [cpp/accel/Accel.cpp:649]   --->   Operation 149 'bitselect' 'tmp_97' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 150 [1/1] (0.00ns)   --->   "%tmp_98 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 21)" [cpp/accel/Accel.cpp:649]   --->   Operation 150 'bitselect' 'tmp_98' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 151 [1/1] (0.00ns)   --->   "%tmp_99 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 19)" [cpp/accel/Accel.cpp:649]   --->   Operation 151 'bitselect' 'tmp_99' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 152 [1/1] (0.00ns)   --->   "%tmp_100 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 17)" [cpp/accel/Accel.cpp:649]   --->   Operation 152 'bitselect' 'tmp_100' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 153 [1/1] (0.00ns)   --->   "%tmp_101 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 15)" [cpp/accel/Accel.cpp:649]   --->   Operation 153 'bitselect' 'tmp_101' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 154 [1/1] (0.00ns)   --->   "%tmp_102 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 13)" [cpp/accel/Accel.cpp:649]   --->   Operation 154 'bitselect' 'tmp_102' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 155 [1/1] (0.00ns)   --->   "%tmp_103 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 11)" [cpp/accel/Accel.cpp:649]   --->   Operation 155 'bitselect' 'tmp_103' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 156 [1/1] (0.00ns)   --->   "%tmp_104 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 9)" [cpp/accel/Accel.cpp:649]   --->   Operation 156 'bitselect' 'tmp_104' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 157 [1/1] (0.00ns)   --->   "%tmp_105 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 7)" [cpp/accel/Accel.cpp:649]   --->   Operation 157 'bitselect' 'tmp_105' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 158 [1/1] (0.00ns)   --->   "%tmp_106 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 5)" [cpp/accel/Accel.cpp:649]   --->   Operation 158 'bitselect' 'tmp_106' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 159 [1/1] (0.00ns)   --->   "%tmp_107 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 3)" [cpp/accel/Accel.cpp:649]   --->   Operation 159 'bitselect' 'tmp_107' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 160 [1/1] (0.00ns)   --->   "%tmp_108 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %xor_ln1357_1, i32 1)" [cpp/accel/Accel.cpp:649]   --->   Operation 160 'bitselect' 'tmp_108' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 161 [1/1] (0.00ns)   --->   "%and_ln1355_3 = call i63 @_ssdm_op_BitConcatenate.i63.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1.i1(i1 %tmp_77, i1 false, i1 %tmp_78, i1 false, i1 %tmp_79, i1 false, i1 %tmp_80, i1 false, i1 %tmp_81, i1 false, i1 %tmp_82, i1 false, i1 %tmp_83, i1 false, i1 %tmp_84, i1 false, i1 %tmp_85, i1 false, i1 %tmp_86, i1 false, i1 %tmp_87, i1 false, i1 %tmp_88, i1 false, i1 %tmp_89, i1 false, i1 %tmp_90, i1 false, i1 %tmp_91, i1 false, i1 %tmp_92, i1 false, i1 %tmp_93, i1 false, i1 %tmp_94, i1 false, i1 %tmp_95, i1 false, i1 %tmp_96, i1 false, i1 %tmp_97, i1 false, i1 %tmp_98, i1 false, i1 %tmp_99, i1 false, i1 %tmp_100, i1 false, i1 %tmp_101, i1 false, i1 %tmp_102, i1 false, i1 %tmp_103, i1 false, i1 %tmp_104, i1 false, i1 %tmp_105, i1 false, i1 %tmp_106, i1 false, i1 %tmp_107, i1 false, i1 %tmp_108)" [cpp/accel/Accel.cpp:649]   --->   Operation 161 'bitconcatenate' 'and_ln1355_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 162 [1/1] (0.00ns)   --->   "%zext_ln1355_3 = zext i63 %and_ln1355_3 to i64" [cpp/accel/Accel.cpp:649]   --->   Operation 162 'zext' 'zext_ln1355_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 163 [1/1] (1.98ns)   --->   "%sub_ln701_1 = sub nsw i64 %xor_ln1357_1, %zext_ln1355_3" [cpp/accel/Accel.cpp:649]   --->   Operation 163 'sub' 'sub_ln701_1' <Predicate = true> <Delay = 1.98> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 164 [1/1] (0.00ns)   --->   "%tmp_109 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 60, i32 61)" [cpp/accel/Accel.cpp:650]   --->   Operation 164 'partselect' 'tmp_109' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 165 [1/1] (0.00ns)   --->   "%tmp_110 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 56, i32 57)" [cpp/accel/Accel.cpp:650]   --->   Operation 165 'partselect' 'tmp_110' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 166 [1/1] (0.00ns)   --->   "%tmp_111 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 52, i32 53)" [cpp/accel/Accel.cpp:650]   --->   Operation 166 'partselect' 'tmp_111' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 167 [1/1] (0.00ns)   --->   "%tmp_112 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 48, i32 49)" [cpp/accel/Accel.cpp:650]   --->   Operation 167 'partselect' 'tmp_112' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 168 [1/1] (0.00ns)   --->   "%tmp_113 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 44, i32 45)" [cpp/accel/Accel.cpp:650]   --->   Operation 168 'partselect' 'tmp_113' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 169 [1/1] (0.00ns)   --->   "%tmp_114 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 40, i32 41)" [cpp/accel/Accel.cpp:650]   --->   Operation 169 'partselect' 'tmp_114' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 170 [1/1] (0.00ns)   --->   "%tmp_115 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 36, i32 37)" [cpp/accel/Accel.cpp:650]   --->   Operation 170 'partselect' 'tmp_115' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 171 [1/1] (0.00ns)   --->   "%tmp_116 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 32, i32 33)" [cpp/accel/Accel.cpp:650]   --->   Operation 171 'partselect' 'tmp_116' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 172 [1/1] (0.00ns)   --->   "%tmp_117 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 28, i32 29)" [cpp/accel/Accel.cpp:650]   --->   Operation 172 'partselect' 'tmp_117' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 173 [1/1] (0.00ns)   --->   "%tmp_118 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 24, i32 25)" [cpp/accel/Accel.cpp:650]   --->   Operation 173 'partselect' 'tmp_118' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 174 [1/1] (0.00ns)   --->   "%tmp_119 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 20, i32 21)" [cpp/accel/Accel.cpp:650]   --->   Operation 174 'partselect' 'tmp_119' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 175 [1/1] (0.00ns)   --->   "%tmp_120 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 16, i32 17)" [cpp/accel/Accel.cpp:650]   --->   Operation 175 'partselect' 'tmp_120' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 176 [1/1] (0.00ns)   --->   "%tmp_121 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 12, i32 13)" [cpp/accel/Accel.cpp:650]   --->   Operation 176 'partselect' 'tmp_121' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 177 [1/1] (0.00ns)   --->   "%tmp_122 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 8, i32 9)" [cpp/accel/Accel.cpp:650]   --->   Operation 177 'partselect' 'tmp_122' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 178 [1/1] (0.00ns)   --->   "%tmp_123 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 4, i32 5)" [cpp/accel/Accel.cpp:650]   --->   Operation 178 'partselect' 'tmp_123' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 179 [1/1] (0.00ns)   --->   "%trunc_ln1355_1 = trunc i64 %sub_ln701_1 to i2" [cpp/accel/Accel.cpp:650]   --->   Operation 179 'trunc' 'trunc_ln1355_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 180 [1/1] (0.00ns)   --->   "%and_ln1355_4 = call i62 @_ssdm_op_BitConcatenate.i62.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2(i2 %tmp_109, i2 0, i2 %tmp_110, i2 0, i2 %tmp_111, i2 0, i2 %tmp_112, i2 0, i2 %tmp_113, i2 0, i2 %tmp_114, i2 0, i2 %tmp_115, i2 0, i2 %tmp_116, i2 0, i2 %tmp_117, i2 0, i2 %tmp_118, i2 0, i2 %tmp_119, i2 0, i2 %tmp_120, i2 0, i2 %tmp_121, i2 0, i2 %tmp_122, i2 0, i2 %tmp_123, i2 0, i2 %trunc_ln1355_1)" [cpp/accel/Accel.cpp:650]   --->   Operation 180 'bitconcatenate' 'and_ln1355_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 181 [1/1] (0.00ns)   --->   "%zext_ln1355_4 = zext i62 %and_ln1355_4 to i63" [cpp/accel/Accel.cpp:650]   --->   Operation 181 'zext' 'zext_ln1355_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 182 [1/1] (0.00ns)   --->   "%tmp_124 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 62, i32 63)" [cpp/accel/Accel.cpp:650]   --->   Operation 182 'partselect' 'tmp_124' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 183 [1/1] (0.00ns)   --->   "%tmp_125 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 58, i32 59)" [cpp/accel/Accel.cpp:650]   --->   Operation 183 'partselect' 'tmp_125' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 184 [1/1] (0.00ns)   --->   "%tmp_126 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 54, i32 55)" [cpp/accel/Accel.cpp:650]   --->   Operation 184 'partselect' 'tmp_126' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 185 [1/1] (0.00ns)   --->   "%tmp_127 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 50, i32 51)" [cpp/accel/Accel.cpp:650]   --->   Operation 185 'partselect' 'tmp_127' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 186 [1/1] (0.00ns)   --->   "%tmp_128 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 46, i32 47)" [cpp/accel/Accel.cpp:650]   --->   Operation 186 'partselect' 'tmp_128' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 187 [1/1] (0.00ns)   --->   "%tmp_129 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 42, i32 43)" [cpp/accel/Accel.cpp:650]   --->   Operation 187 'partselect' 'tmp_129' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 188 [1/1] (0.00ns)   --->   "%tmp_130 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 38, i32 39)" [cpp/accel/Accel.cpp:650]   --->   Operation 188 'partselect' 'tmp_130' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 189 [1/1] (0.00ns)   --->   "%tmp_131 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 34, i32 35)" [cpp/accel/Accel.cpp:650]   --->   Operation 189 'partselect' 'tmp_131' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 190 [1/1] (0.00ns)   --->   "%tmp_132 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 30, i32 31)" [cpp/accel/Accel.cpp:650]   --->   Operation 190 'partselect' 'tmp_132' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 191 [1/1] (0.00ns)   --->   "%tmp_133 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 26, i32 27)" [cpp/accel/Accel.cpp:650]   --->   Operation 191 'partselect' 'tmp_133' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 192 [1/1] (0.00ns)   --->   "%tmp_134 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 22, i32 23)" [cpp/accel/Accel.cpp:650]   --->   Operation 192 'partselect' 'tmp_134' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 193 [1/1] (0.00ns)   --->   "%tmp_135 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 18, i32 19)" [cpp/accel/Accel.cpp:650]   --->   Operation 193 'partselect' 'tmp_135' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 194 [1/1] (0.00ns)   --->   "%tmp_136 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 14, i32 15)" [cpp/accel/Accel.cpp:650]   --->   Operation 194 'partselect' 'tmp_136' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 195 [1/1] (0.00ns)   --->   "%tmp_137 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 10, i32 11)" [cpp/accel/Accel.cpp:650]   --->   Operation 195 'partselect' 'tmp_137' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 196 [1/1] (0.00ns)   --->   "%tmp_138 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 6, i32 7)" [cpp/accel/Accel.cpp:650]   --->   Operation 196 'partselect' 'tmp_138' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 197 [1/1] (0.00ns)   --->   "%tmp_139 = call i2 @_ssdm_op_PartSelect.i2.i64.i32.i32(i64 %sub_ln701_1, i32 2, i32 3)" [cpp/accel/Accel.cpp:650]   --->   Operation 197 'partselect' 'tmp_139' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 198 [1/1] (0.00ns)   --->   "%and_ln1355_5 = call i62 @_ssdm_op_BitConcatenate.i62.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2(i2 %tmp_124, i2 0, i2 %tmp_125, i2 0, i2 %tmp_126, i2 0, i2 %tmp_127, i2 0, i2 %tmp_128, i2 0, i2 %tmp_129, i2 0, i2 %tmp_130, i2 0, i2 %tmp_131, i2 0, i2 %tmp_132, i2 0, i2 %tmp_133, i2 0, i2 %tmp_134, i2 0, i2 %tmp_135, i2 0, i2 %tmp_136, i2 0, i2 %tmp_137, i2 0, i2 %tmp_138, i2 0, i2 %tmp_139)" [cpp/accel/Accel.cpp:650]   --->   Operation 198 'bitconcatenate' 'and_ln1355_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 199 [1/1] (0.00ns)   --->   "%zext_ln1355_5 = zext i62 %and_ln1355_5 to i63" [cpp/accel/Accel.cpp:650]   --->   Operation 199 'zext' 'zext_ln1355_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 200 [1/1] (0.00ns)   --->   "%trunc_ln68_9 = call i60 @_ssdm_op_BitConcatenate.i60.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2(i2 0, i2 %tmp_110, i2 0, i2 %tmp_111, i2 0, i2 %tmp_112, i2 0, i2 %tmp_113, i2 0, i2 %tmp_114, i2 0, i2 %tmp_115, i2 0, i2 %tmp_116, i2 0, i2 %tmp_117, i2 0, i2 %tmp_118, i2 0, i2 %tmp_119, i2 0, i2 %tmp_120, i2 0, i2 %tmp_121, i2 0, i2 %tmp_122, i2 0, i2 %tmp_123, i2 0, i2 %trunc_ln1355_1)" [cpp/accel/Accel.cpp:650]   --->   Operation 200 'bitconcatenate' 'trunc_ln68_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 201 [1/1] (0.00ns)   --->   "%trunc_ln68_s = call i60 @_ssdm_op_BitConcatenate.i60.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2.i2(i2 0, i2 %tmp_125, i2 0, i2 %tmp_126, i2 0, i2 %tmp_127, i2 0, i2 %tmp_128, i2 0, i2 %tmp_129, i2 0, i2 %tmp_130, i2 0, i2 %tmp_131, i2 0, i2 %tmp_132, i2 0, i2 %tmp_133, i2 0, i2 %tmp_134, i2 0, i2 %tmp_135, i2 0, i2 %tmp_136, i2 0, i2 %tmp_137, i2 0, i2 %tmp_138, i2 0, i2 %tmp_139)" [cpp/accel/Accel.cpp:650]   --->   Operation 201 'bitconcatenate' 'trunc_ln68_s' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 202 [1/1] (1.96ns)   --->   "%add_ln68_7 = add i62 %and_ln1355_4, %and_ln1355_5" [cpp/accel/Accel.cpp:650]   --->   Operation 202 'add' 'add_ln68_7' <Predicate = true> <Delay = 1.96> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 203 [1/1] (1.96ns)   --->   "%add_ln68_3 = add i63 %zext_ln1355_5, %zext_ln1355_4" [cpp/accel/Accel.cpp:650]   --->   Operation 203 'add' 'add_ln68_3' <Predicate = true> <Delay = 1.96> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 204 [1/1] (0.00ns)   --->   "%zext_ln700_2 = zext i2 %trunc_ln1355_1 to i4" [cpp/accel/Accel.cpp:652]   --->   Operation 204 'zext' 'zext_ln700_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 205 [1/1] (0.00ns)   --->   "%zext_ln700_3 = zext i2 %tmp_139 to i4" [cpp/accel/Accel.cpp:652]   --->   Operation 205 'zext' 'zext_ln700_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 206 [1/1] (0.00ns)   --->   "%tmp_140 = call i59 @_ssdm_op_PartSelect.i59.i63.i32.i32(i63 %add_ln68_3, i32 4, i32 62)" [cpp/accel/Accel.cpp:651]   --->   Operation 206 'partselect' 'tmp_140' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 207 [1/1] (0.00ns)   --->   "%zext_ln68_3 = zext i59 %tmp_140 to i60" [cpp/accel/Accel.cpp:651]   --->   Operation 207 'zext' 'zext_ln68_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 208 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln68_4 = add i60 %trunc_ln68_9, %trunc_ln68_s" [cpp/accel/Accel.cpp:651]   --->   Operation 208 'add' 'add_ln68_4' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.17> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 209 [1/1] (3.19ns) (root node of TernaryAdder)   --->   "%add_ln68_5 = add i60 %zext_ln68_3, %add_ln68_4" [cpp/accel/Accel.cpp:651]   --->   Operation 209 'add' 'add_ln68_5' <Predicate = true> <Delay = 3.19> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.17> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 210 [1/1] (0.00ns)   --->   "%trunc_ln700_3 = call i4 @_ssdm_op_PartSelect.i4.i62.i32.i32(i62 %add_ln68_7, i32 4, i32 7)" [cpp/accel/Accel.cpp:652]   --->   Operation 210 'partselect' 'trunc_ln700_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 211 [1/1] (0.00ns)   --->   "%tmp_141 = call i4 @_ssdm_op_PartSelect.i4.i60.i32.i32(i60 %add_ln68_5, i32 56, i32 59)" [cpp/accel/Accel.cpp:651]   --->   Operation 211 'partselect' 'tmp_141' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 212 [1/1] (0.00ns)   --->   "%tmp_142 = call i4 @_ssdm_op_PartSelect.i4.i60.i32.i32(i60 %add_ln68_5, i32 48, i32 51)" [cpp/accel/Accel.cpp:651]   --->   Operation 212 'partselect' 'tmp_142' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 213 [1/1] (0.00ns)   --->   "%tmp_143 = call i4 @_ssdm_op_PartSelect.i4.i60.i32.i32(i60 %add_ln68_5, i32 40, i32 43)" [cpp/accel/Accel.cpp:651]   --->   Operation 213 'partselect' 'tmp_143' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 214 [1/1] (0.00ns)   --->   "%tmp_144 = call i4 @_ssdm_op_PartSelect.i4.i60.i32.i32(i60 %add_ln68_5, i32 32, i32 35)" [cpp/accel/Accel.cpp:651]   --->   Operation 214 'partselect' 'tmp_144' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 215 [1/1] (0.00ns)   --->   "%tmp_145 = call i4 @_ssdm_op_PartSelect.i4.i60.i32.i32(i60 %add_ln68_5, i32 24, i32 27)" [cpp/accel/Accel.cpp:651]   --->   Operation 215 'partselect' 'tmp_145' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 216 [1/1] (0.00ns)   --->   "%tmp_146 = call i4 @_ssdm_op_PartSelect.i4.i60.i32.i32(i60 %add_ln68_5, i32 16, i32 19)" [cpp/accel/Accel.cpp:651]   --->   Operation 216 'partselect' 'tmp_146' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 217 [1/1] (0.00ns)   --->   "%tmp_147 = call i4 @_ssdm_op_PartSelect.i4.i60.i32.i32(i60 %add_ln68_5, i32 8, i32 11)" [cpp/accel/Accel.cpp:651]   --->   Operation 217 'partselect' 'tmp_147' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 218 [1/1] (0.00ns)   --->   "%trunc_ln68_1 = trunc i60 %add_ln68_5 to i4" [cpp/accel/Accel.cpp:651]   --->   Operation 218 'trunc' 'trunc_ln68_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 219 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln700_14 = add i4 %zext_ln700_2, %trunc_ln700_3" [cpp/accel/Accel.cpp:652]   --->   Operation 219 'add' 'add_ln700_14' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.17> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 220 [1/1] (2.12ns) (root node of TernaryAdder)   --->   "%add_ln700_11 = add i4 %add_ln700_14, %zext_ln700_3" [cpp/accel/Accel.cpp:652]   --->   Operation 220 'add' 'add_ln700_11' <Predicate = true> <Delay = 2.12> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.17> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 4 <SV = 3> <Delay = 10.0>
ST_4 : Operation 221 [1/1] (0.00ns)   --->   "%kh_mem_V_2_addr = getelementptr [64 x i64]* %kh_mem_V_2, i64 0, i64 0" [cpp/accel/Accel.cpp:607]   --->   Operation 221 'getelementptr' 'kh_mem_V_2_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 222 [1/1] (0.00ns)   --->   "%and_ln1 = call i60 @_ssdm_op_BitConcatenate.i60.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4(i4 %tmp_69, i4 0, i4 %tmp_70, i4 0, i4 %tmp_71, i4 0, i4 %tmp_72, i4 0, i4 %tmp_73, i4 0, i4 %tmp_74, i4 0, i4 %tmp_75, i4 0, i4 %trunc_ln68)" [cpp/accel/Accel.cpp:651]   --->   Operation 222 'bitconcatenate' 'and_ln1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 223 [1/1] (0.00ns)   --->   "%zext_ln68 = zext i60 %and_ln1 to i61" [cpp/accel/Accel.cpp:651]   --->   Operation 223 'zext' 'zext_ln68' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 224 [1/1] (0.00ns)   --->   "%lshr_ln1503_3 = call i52 @_ssdm_op_BitConcatenate.i52.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4(i4 %tmp_69, i4 0, i4 %tmp_70, i4 0, i4 %tmp_71, i4 0, i4 %tmp_72, i4 0, i4 %tmp_73, i4 0, i4 %tmp_74, i4 0, i4 %tmp_75)" [cpp/accel/Accel.cpp:652]   --->   Operation 224 'bitconcatenate' 'lshr_ln1503_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 225 [1/1] (0.00ns)   --->   "%zext_ln1503_2 = zext i52 %lshr_ln1503_3 to i60" [cpp/accel/Accel.cpp:652]   --->   Operation 225 'zext' 'zext_ln1503_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 226 [1/1] (0.00ns)   --->   "%zext_ln1503 = zext i52 %lshr_ln1503_3 to i61" [cpp/accel/Accel.cpp:652]   --->   Operation 226 'zext' 'zext_ln1503' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 227 [1/1] (0.00ns)   --->   "%trunc_ln700_1 = call i47 @_ssdm_op_BitConcatenate.i47.i3.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4(i3 0, i4 %tmp_71, i4 0, i4 %tmp_72, i4 0, i4 %tmp_73, i4 0, i4 %tmp_74, i4 0, i4 %tmp_75, i4 0, i4 %trunc_ln68)" [cpp/accel/Accel.cpp:652]   --->   Operation 227 'bitconcatenate' 'trunc_ln700_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 228 [1/1] (0.00ns)   --->   "%trunc_ln700_2 = call i47 @_ssdm_op_BitConcatenate.i47.i3.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4(i3 0, i4 %tmp_70, i4 0, i4 %tmp_71, i4 0, i4 %tmp_72, i4 0, i4 %tmp_73, i4 0, i4 %tmp_74, i4 0, i4 %tmp_75)" [cpp/accel/Accel.cpp:652]   --->   Operation 228 'bitconcatenate' 'trunc_ln700_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 229 [1/1] (1.93ns)   --->   "%add_ln700_17 = add i60 %and_ln1, %zext_ln1503_2" [cpp/accel/Accel.cpp:652]   --->   Operation 229 'add' 'add_ln700_17' <Predicate = true> <Delay = 1.93> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 230 [1/1] (1.93ns)   --->   "%add_ln700_8 = add i61 %zext_ln1503, %zext_ln68" [cpp/accel/Accel.cpp:652]   --->   Operation 230 'add' 'add_ln700_8' <Predicate = true> <Delay = 1.93> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 231 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln700_10 = add i47 %trunc_ln700_1, %trunc_ln700_2" [cpp/accel/Accel.cpp:652]   --->   Operation 231 'add' 'add_ln700_10' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.17> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 232 [1/1] (0.00ns)   --->   "%tmp_76 = call i45 @_ssdm_op_PartSelect.i45.i61.i32.i32(i61 %add_ln700_8, i32 16, i32 60)" [cpp/accel/Accel.cpp:653]   --->   Operation 232 'partselect' 'tmp_76' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 233 [1/1] (0.00ns)   --->   "%zext_ln1503_6 = zext i45 %tmp_76 to i47" [cpp/accel/Accel.cpp:653]   --->   Operation 233 'zext' 'zext_ln1503_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 234 [1/1] (3.01ns) (root node of TernaryAdder)   --->   "%add_ln700_9 = add i47 %zext_ln1503_6, %add_ln700_10" [cpp/accel/Accel.cpp:653]   --->   Operation 234 'add' 'add_ln700_9' <Predicate = true> <Delay = 3.01> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.17> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 235 [1/1] (0.00ns)   --->   "%zext_ln1503_1 = zext i4 %add_ln700 to i7" [cpp/accel/Accel.cpp:657]   --->   Operation 235 'zext' 'zext_ln1503_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 236 [1/1] (0.00ns)   --->   "%trunc_ln1503_1 = call i7 @_ssdm_op_BitConcatenate.i7.i3.i4(i3 0, i4 %tmp_75)" [cpp/accel/Accel.cpp:657]   --->   Operation 236 'bitconcatenate' 'trunc_ln1503_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 237 [1/1] (0.00ns)   --->   "%trunc_ln1503_2 = call i7 @_ssdm_op_PartSelect.i7.i47.i32.i32(i47 %add_ln700_9, i32 32, i32 38)" [cpp/accel/Accel.cpp:657]   --->   Operation 237 'partselect' 'trunc_ln1503_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 238 [1/1] (0.00ns)   --->   "%trunc_ln1503_3 = call i7 @_ssdm_op_PartSelect.i7.i60.i32.i32(i60 %add_ln700_17, i32 16, i32 22)" [cpp/accel/Accel.cpp:657]   --->   Operation 238 'partselect' 'trunc_ln1503_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 239 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln1503 = add i7 %trunc_ln1503_2, %trunc_ln1503_3" [cpp/accel/Accel.cpp:657]   --->   Operation 239 'add' 'add_ln1503' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.17> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 240 [1/1] (1.37ns)   --->   "%add_ln1503_1 = add i7 %zext_ln1503_1, %trunc_ln1503_1" [cpp/accel/Accel.cpp:657]   --->   Operation 240 'add' 'add_ln1503_1' <Predicate = true> <Delay = 1.37> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 241 [1/1] (2.35ns) (root node of TernaryAdder)   --->   "%add_ln1503_2 = add i7 %add_ln1503_1, %add_ln1503" [cpp/accel/Accel.cpp:657]   --->   Operation 241 'add' 'add_ln1503_2' <Predicate = true> <Delay = 2.35> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.17> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 242 [1/1] (0.00ns)   --->   "%shl_ln = call i8 @_ssdm_op_BitConcatenate.i8.i7.i1(i7 %add_ln1503_2, i1 false)" [cpp/accel/Accel.cpp:657]   --->   Operation 242 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 243 [1/1] (0.00ns)   --->   "%zext_ln1503_3 = zext i8 %shl_ln to i9" [cpp/accel/Accel.cpp:657]   --->   Operation 243 'zext' 'zext_ln1503_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 244 [1/1] (1.39ns)   --->   "%sub_ln68 = sub i9 64, %zext_ln1503_3" [cpp/accel/Accel.cpp:657]   --->   Operation 244 'sub' 'sub_ln68' <Predicate = true> <Delay = 1.39> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 245 [1/1] (0.00ns)   --->   "%sext_ln68 = sext i9 %sub_ln68 to i10" [cpp/accel/Accel.cpp:657]   --->   Operation 245 'sext' 'sext_ln68' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 246 [1/1] (0.00ns)   --->   "%and_ln68_1 = call i60 @_ssdm_op_BitConcatenate.i60.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4(i4 %tmp_141, i4 0, i4 %tmp_142, i4 0, i4 %tmp_143, i4 0, i4 %tmp_144, i4 0, i4 %tmp_145, i4 0, i4 %tmp_146, i4 0, i4 %tmp_147, i4 0, i4 %trunc_ln68_1)" [cpp/accel/Accel.cpp:651]   --->   Operation 246 'bitconcatenate' 'and_ln68_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 247 [1/1] (0.00ns)   --->   "%zext_ln68_1 = zext i60 %and_ln68_1 to i61" [cpp/accel/Accel.cpp:651]   --->   Operation 247 'zext' 'zext_ln68_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 248 [1/1] (0.00ns)   --->   "%lshr_ln1503_9 = call i52 @_ssdm_op_BitConcatenate.i52.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4(i4 %tmp_141, i4 0, i4 %tmp_142, i4 0, i4 %tmp_143, i4 0, i4 %tmp_144, i4 0, i4 %tmp_145, i4 0, i4 %tmp_146, i4 0, i4 %tmp_147)" [cpp/accel/Accel.cpp:652]   --->   Operation 248 'bitconcatenate' 'lshr_ln1503_9' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 249 [1/1] (0.00ns)   --->   "%zext_ln1503_8 = zext i52 %lshr_ln1503_9 to i60" [cpp/accel/Accel.cpp:652]   --->   Operation 249 'zext' 'zext_ln1503_8' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 250 [1/1] (0.00ns)   --->   "%zext_ln1503_4 = zext i52 %lshr_ln1503_9 to i61" [cpp/accel/Accel.cpp:652]   --->   Operation 250 'zext' 'zext_ln1503_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 251 [1/1] (0.00ns)   --->   "%trunc_ln700_4 = call i47 @_ssdm_op_BitConcatenate.i47.i3.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4(i3 0, i4 %tmp_143, i4 0, i4 %tmp_144, i4 0, i4 %tmp_145, i4 0, i4 %tmp_146, i4 0, i4 %tmp_147, i4 0, i4 %trunc_ln68_1)" [cpp/accel/Accel.cpp:652]   --->   Operation 251 'bitconcatenate' 'trunc_ln700_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 252 [1/1] (0.00ns)   --->   "%trunc_ln700_5 = call i47 @_ssdm_op_BitConcatenate.i47.i3.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4.i4(i3 0, i4 %tmp_142, i4 0, i4 %tmp_143, i4 0, i4 %tmp_144, i4 0, i4 %tmp_145, i4 0, i4 %tmp_146, i4 0, i4 %tmp_147)" [cpp/accel/Accel.cpp:652]   --->   Operation 252 'bitconcatenate' 'trunc_ln700_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 253 [1/1] (1.93ns)   --->   "%add_ln700_18 = add i60 %and_ln68_1, %zext_ln1503_8" [cpp/accel/Accel.cpp:652]   --->   Operation 253 'add' 'add_ln700_18' <Predicate = true> <Delay = 1.93> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 254 [1/1] (1.93ns)   --->   "%add_ln700_12 = add i61 %zext_ln1503_4, %zext_ln68_1" [cpp/accel/Accel.cpp:652]   --->   Operation 254 'add' 'add_ln700_12' <Predicate = true> <Delay = 1.93> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 255 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln700_16 = add i47 %trunc_ln700_4, %trunc_ln700_5" [cpp/accel/Accel.cpp:652]   --->   Operation 255 'add' 'add_ln700_16' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.17> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 256 [1/1] (0.00ns)   --->   "%tmp_148 = call i45 @_ssdm_op_PartSelect.i45.i61.i32.i32(i61 %add_ln700_12, i32 16, i32 60)" [cpp/accel/Accel.cpp:653]   --->   Operation 256 'partselect' 'tmp_148' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 257 [1/1] (0.00ns)   --->   "%zext_ln1503_9 = zext i45 %tmp_148 to i47" [cpp/accel/Accel.cpp:653]   --->   Operation 257 'zext' 'zext_ln1503_9' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 258 [1/1] (3.01ns) (root node of TernaryAdder)   --->   "%add_ln700_13 = add i47 %zext_ln1503_9, %add_ln700_16" [cpp/accel/Accel.cpp:653]   --->   Operation 258 'add' 'add_ln700_13' <Predicate = true> <Delay = 3.01> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.17> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 259 [1/1] (0.00ns)   --->   "%zext_ln1503_5 = zext i4 %add_ln700_11 to i7" [cpp/accel/Accel.cpp:657]   --->   Operation 259 'zext' 'zext_ln1503_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 260 [1/1] (0.00ns)   --->   "%trunc_ln1503_5 = call i7 @_ssdm_op_BitConcatenate.i7.i3.i4(i3 0, i4 %tmp_147)" [cpp/accel/Accel.cpp:657]   --->   Operation 260 'bitconcatenate' 'trunc_ln1503_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 261 [1/1] (0.00ns)   --->   "%trunc_ln1503_6 = call i7 @_ssdm_op_PartSelect.i7.i47.i32.i32(i47 %add_ln700_13, i32 32, i32 38)" [cpp/accel/Accel.cpp:657]   --->   Operation 261 'partselect' 'trunc_ln1503_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 262 [1/1] (0.00ns)   --->   "%trunc_ln1503_7 = call i7 @_ssdm_op_PartSelect.i7.i60.i32.i32(i60 %add_ln700_18, i32 16, i32 22)" [cpp/accel/Accel.cpp:657]   --->   Operation 262 'partselect' 'trunc_ln1503_7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 263 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln1503_3 = add i7 %trunc_ln1503_6, %trunc_ln1503_7" [cpp/accel/Accel.cpp:657]   --->   Operation 263 'add' 'add_ln1503_3' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.17> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 264 [1/1] (1.37ns)   --->   "%add_ln1503_4 = add i7 %zext_ln1503_5, %trunc_ln1503_5" [cpp/accel/Accel.cpp:657]   --->   Operation 264 'add' 'add_ln1503_4' <Predicate = true> <Delay = 1.37> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 265 [1/1] (2.35ns) (root node of TernaryAdder)   --->   "%add_ln1503_5 = add i7 %add_ln1503_4, %add_ln1503_3" [cpp/accel/Accel.cpp:657]   --->   Operation 265 'add' 'add_ln1503_5' <Predicate = true> <Delay = 2.35> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.17> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 266 [1/1] (0.00ns)   --->   "%shl_ln1503_1 = call i8 @_ssdm_op_BitConcatenate.i8.i7.i1(i7 %add_ln1503_5, i1 false)" [cpp/accel/Accel.cpp:657]   --->   Operation 266 'bitconcatenate' 'shl_ln1503_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 267 [1/1] (0.00ns)   --->   "%zext_ln1503_7 = zext i8 %shl_ln1503_1 to i9" [cpp/accel/Accel.cpp:657]   --->   Operation 267 'zext' 'zext_ln1503_7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 268 [1/1] (1.39ns)   --->   "%sub_ln68_1 = sub i9 64, %zext_ln1503_7" [cpp/accel/Accel.cpp:657]   --->   Operation 268 'sub' 'sub_ln68_1' <Predicate = true> <Delay = 1.39> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 269 [1/1] (0.00ns)   --->   "%sext_ln68_1 = sext i9 %sub_ln68_1 to i10" [cpp/accel/Accel.cpp:657]   --->   Operation 269 'sext' 'sext_ln68_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 270 [1/1] (1.40ns)   --->   "%add_ln700_15 = add i10 %sext_ln68_1, %sext_ln68" [cpp/accel/Accel.cpp:662]   --->   Operation 270 'add' 'add_ln700_15' <Predicate = true> <Delay = 1.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.40> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 271 [2/2] (2.66ns)   --->   "%kh_mem_V_2_load = load i64* %kh_mem_V_2_addr, align 8" [cpp/accel/Accel.cpp:669]   --->   Operation 271 'load' 'kh_mem_V_2_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>

State 5 <SV = 4> <Delay = 7.60>
ST_5 : Operation 272 [1/1] (0.00ns)   --->   "%layer_type_V_read = call i2 @_ssdm_op_Read.ap_auto.i2(i2 %layer_type_V)" [cpp/accel/Accel.cpp:644]   --->   Operation 272 'read' 'layer_type_V_read' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 273 [1/1] (0.64ns)   --->   "%icmp_ln879 = icmp eq i2 %layer_type_V_read, -2" [cpp/accel/Accel.cpp:617]   --->   Operation 273 'icmp' 'icmp_ln879' <Predicate = true> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 274 [1/1] (0.00ns)   --->   "%tmp = call i12 @_ssdm_op_BitConcatenate.i12.i1.i11(i1 %d_o_idx_V_read, i11 0)" [cpp/accel/Accel.cpp:714]   --->   Operation 274 'bitconcatenate' 'tmp' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 275 [1/1] (0.00ns)   --->   "%zext_ln180 = zext i12 %tmp to i64" [cpp/accel/Accel.cpp:714]   --->   Operation 275 'zext' 'zext_ln180' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 276 [1/1] (0.00ns)   --->   "%dmem_V_1_addr_3 = getelementptr [4096 x i64]* %dmem_V_2, i64 0, i64 %zext_ln180" [cpp/accel/Accel.cpp:714]   --->   Operation 276 'getelementptr' 'dmem_V_1_addr_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 277 [1/1] (0.00ns)   --->   "%sext_ln700 = sext i10 %add_ln700_15 to i16" [cpp/accel/Accel.cpp:662]   --->   Operation 277 'sext' 'sext_ln700' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 278 [1/2] (2.66ns)   --->   "%kh_mem_V_2_load = load i64* %kh_mem_V_2_addr, align 8" [cpp/accel/Accel.cpp:669]   --->   Operation 278 'load' 'kh_mem_V_2_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>
ST_5 : Operation 279 [1/1] (0.00ns)   --->   "%trunc_ln647 = trunc i64 %kh_mem_V_2_load to i16" [cpp/accel/Accel.cpp:674]   --->   Operation 279 'trunc' 'trunc_ln647' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 280 [1/1] (0.00ns)   --->   "%zext_ln555 = zext i6 %o_offset_V to i32" [cpp/accel/Accel.cpp:682]   --->   Operation 280 'zext' 'zext_ln555' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 281 [1/1] (1.49ns)   --->   "%icmp_ln816 = icmp slt i16 %sext_ln700, %trunc_ln647" [cpp/accel/Accel.cpp:682]   --->   Operation 281 'icmp' 'icmp_ln816' <Predicate = true> <Delay = 1.49> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 282 [1/1] (0.00ns)   --->   "%zext_ln816 = zext i1 %icmp_ln816 to i32" [cpp/accel/Accel.cpp:682]   --->   Operation 282 'zext' 'zext_ln816' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 283 [1/1] (0.00ns)   --->   "%tmp_149 = call i64 @_ssdm_op_BitSet.i64.i64.i32.i32(i64 %dmem_V_1_load, i32 %zext_ln555, i32 %zext_ln816)" [cpp/accel/Accel.cpp:682]   --->   Operation 283 'bitset' 'tmp_149' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 284 [1/1] (0.77ns)   --->   "%select_ln879 = select i1 %icmp_ln879, i64 %tmp_149, i64 %dmem_V_1_load" [cpp/accel/Accel.cpp:617]   --->   Operation 284 'select' 'select_ln879' <Predicate = true> <Delay = 0.77> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 285 [1/1] (2.66ns)   --->   "store i64 %select_ln879, i64* %dmem_V_1_addr, align 8" [cpp/accel/Accel.cpp:706]   --->   Operation 285 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>
ST_5 : Operation 286 [1/1] (0.64ns)   --->   "%icmp_ln879_3 = icmp eq i2 %layer_type_V_read, -1" [cpp/accel/Accel.cpp:710]   --->   Operation 286 'icmp' 'icmp_ln879_3' <Predicate = true> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 287 [1/1] (0.00ns)   --->   "br i1 %icmp_ln879_3, label %0, label %._crit_edge1979" [cpp/accel/Accel.cpp:710]   --->   Operation 287 'br' <Predicate = true> <Delay = 0.00>

State 6 <SV = 5> <Delay = 2.66>
ST_6 : Operation 288 [1/1] (2.66ns)   --->   "store i64 0, i64* %dmem_V_1_addr_3, align 8" [cpp/accel/Accel.cpp:714]   --->   Operation 288 'store' <Predicate = (icmp_ln879_3)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 4096> <RAM>
ST_6 : Operation 289 [1/1] (0.00ns)   --->   "br label %._crit_edge1979" [cpp/accel/Accel.cpp:715]   --->   Operation 289 'br' <Predicate = (icmp_ln879_3)> <Delay = 0.00>
ST_6 : Operation 290 [1/1] (0.00ns)   --->   "ret void" [cpp/accel/Accel.cpp:716]   --->   Operation 290 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 12ns, clock uncertainty: 1.5ns.

 <State 1>: 2.66ns
The critical path consists of the following:
	wire read on port 'o_index_V_2' (cpp/accel/Accel.cpp:644) [8]  (0 ns)
	'getelementptr' operation ('dmem_V_1_addr', cpp/accel/Accel.cpp:631) [31]  (0 ns)
	'load' operation ('dmem_V_1_load', cpp/accel/Accel.cpp:631) on array 'dmem_V_2' [32]  (2.66 ns)

 <State 2>: 2.66ns
The critical path consists of the following:
	wire read on port 'd_i_idx_V' (cpp/accel/Accel.cpp:644) [10]  (0 ns)
	'getelementptr' operation ('dmem_V_1_addr_1', cpp/accel/Accel.cpp:643) [22]  (0 ns)
	'load' operation ('dmem_V_1_load_1', cpp/accel/Accel.cpp:643) on array 'dmem_V_2' [33]  (2.66 ns)

 <State 3>: 10.5ns
The critical path consists of the following:
	'load' operation ('dmem_V_1_load_1', cpp/accel/Accel.cpp:643) on array 'dmem_V_2' [33]  (2.66 ns)
	'xor' operation ('xor_ln1357', cpp/accel/Accel.cpp:646) [35]  (0.688 ns)
	'sub' operation ('sub_ln701', cpp/accel/Accel.cpp:649) [70]  (1.99 ns)
	'add' operation ('add_ln68', cpp/accel/Accel.cpp:650) [110]  (1.96 ns)
	'add' operation ('add_ln68_2', cpp/accel/Accel.cpp:651) [116]  (3.19 ns)

 <State 4>: 10.1ns
The critical path consists of the following:
	'add' operation ('add_ln700_8', cpp/accel/Accel.cpp:652) [136]  (1.94 ns)
	'add' operation ('add_ln700_9', cpp/accel/Accel.cpp:653) [140]  (3.01 ns)
	'add' operation ('add_ln1503', cpp/accel/Accel.cpp:657) [145]  (0 ns)
	'add' operation ('add_ln1503_2', cpp/accel/Accel.cpp:657) [147]  (2.35 ns)
	'sub' operation ('sub_ln68', cpp/accel/Accel.cpp:657) [150]  (1.39 ns)
	'add' operation ('add_ln700_15', cpp/accel/Accel.cpp:662) [271]  (1.4 ns)

 <State 5>: 7.6ns
The critical path consists of the following:
	'load' operation ('kh_mem_V_2_load', cpp/accel/Accel.cpp:669) on array 'kh_mem_V_2' [273]  (2.66 ns)
	'icmp' operation ('icmp_ln816', cpp/accel/Accel.cpp:682) [276]  (1.5 ns)
	'select' operation ('select_ln879', cpp/accel/Accel.cpp:617) [279]  (0.775 ns)
	'store' operation ('store_ln706', cpp/accel/Accel.cpp:706) of variable 'select_ln879', cpp/accel/Accel.cpp:617 on array 'dmem_V_2' [280]  (2.66 ns)

 <State 6>: 2.66ns
The critical path consists of the following:
	'store' operation ('store_ln714', cpp/accel/Accel.cpp:714) of constant 0 on array 'dmem_V_2' [284]  (2.66 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
