

================================================================
== Vivado HLS Report for 'conv3x3b'
================================================================
* Date:           Fri Apr  2 19:21:09 2021

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        BNN_6
* Solution:       solution1
* Product family: kintex7
* Target device:  xc7k70t-fbv676-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  12.00|     6.614|        1.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    5|    5|    5|    5| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 5, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 1
  Pipeline-0 : II = 5, D = 6, States = { 1 2 3 4 5 6 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.77>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%cc_V_read = call i4 @_ssdm_op_Read.ap_auto.i4(i4 %cc_V)" [cpp/accel/Accel.cpp:74]   --->   Operation 7 'read' 'cc_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%bank_V_read = call i4 @_ssdm_op_Read.ap_auto.i4(i4 %bank_V)" [cpp/accel/Accel.cpp:74]   --->   Operation 8 'read' 'bank_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%line_buffer_m_V_offs = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %line_buffer_m_V_offset)" [cpp/accel/Accel.cpp:74]   --->   Operation 9 'read' 'line_buffer_m_V_offs' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%tmp = call i4 @_ssdm_op_BitConcatenate.i4.i1.i3(i1 %line_buffer_m_V_offs, i3 0)" [cpp/accel/Accel.cpp:74]   --->   Operation 10 'bitconcatenate' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%zext_ln74_cast = zext i4 %tmp to i5" [cpp/accel/Accel.cpp:74]   --->   Operation 11 'zext' 'zext_ln74_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%zext_ln74 = zext i4 %bank_V_read to i5" [cpp/accel/Accel.cpp:74]   --->   Operation 12 'zext' 'zext_ln74' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (1.32ns)   --->   "%add_ln74 = add i5 %zext_ln74, %zext_ln74_cast" [cpp/accel/Accel.cpp:74]   --->   Operation 13 'add' 'add_ln74' <Predicate = true> <Delay = 1.32> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%p_shl_cast = call i10 @_ssdm_op_BitConcatenate.i10.i5.i5(i5 %add_ln74, i5 0)" [cpp/accel/Accel.cpp:74]   --->   Operation 14 'bitconcatenate' 'p_shl_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%tmp_54 = call i6 @_ssdm_op_BitConcatenate.i6.i5.i1(i5 %add_ln74, i1 false)" [cpp/accel/Accel.cpp:74]   --->   Operation 15 'bitconcatenate' 'tmp_54' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%zext_ln74_1 = zext i6 %tmp_54 to i10" [cpp/accel/Accel.cpp:74]   --->   Operation 16 'zext' 'zext_ln74_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (1.41ns)   --->   "%sub_ln74 = sub i10 %p_shl_cast, %zext_ln74_1" [cpp/accel/Accel.cpp:74]   --->   Operation 17 'sub' 'sub_ln74' <Predicate = true> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%zext_ln74_2 = zext i4 %cc_V_read to i10" [cpp/accel/Accel.cpp:74]   --->   Operation 18 'zext' 'zext_ln74_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (1.41ns)   --->   "%add_ln74_3 = add i10 %zext_ln74_2, %sub_ln74" [cpp/accel/Accel.cpp:74]   --->   Operation 19 'add' 'add_ln74_3' <Predicate = true> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln74_3 = zext i10 %add_ln74_3 to i64" [cpp/accel/Accel.cpp:74]   --->   Operation 20 'zext' 'zext_ln74_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%line_buffer_m_V_addr = getelementptr [480 x i2]* %line_buffer_m_V, i64 0, i64 %zext_ln74_3" [cpp/accel/Accel.cpp:74]   --->   Operation 21 'getelementptr' 'line_buffer_m_V_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [2/2] (1.62ns)   --->   "%line_buffer_m_V_load = load i2* %line_buffer_m_V_addr, align 1" [cpp/accel/Accel.cpp:74]   --->   Operation 22 'load' 'line_buffer_m_V_load' <Predicate = true> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_1 : Operation 23 [1/1] (1.32ns)   --->   "%add_ln1353 = add i4 1, %cc_V_read" [cpp/accel/Accel.cpp:74]   --->   Operation 23 'add' 'add_ln1353' <Predicate = true> <Delay = 1.32> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%zext_ln74_6 = zext i4 %add_ln1353 to i10" [cpp/accel/Accel.cpp:74]   --->   Operation 24 'zext' 'zext_ln74_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (1.41ns)   --->   "%add_ln74_6 = add i10 %zext_ln74_6, %sub_ln74" [cpp/accel/Accel.cpp:74]   --->   Operation 25 'add' 'add_ln74_6' <Predicate = true> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%zext_ln74_7 = zext i10 %add_ln74_6 to i64" [cpp/accel/Accel.cpp:74]   --->   Operation 26 'zext' 'zext_ln74_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%line_buffer_m_V_addr_242 = getelementptr [480 x i2]* %line_buffer_m_V, i64 0, i64 %zext_ln74_7" [cpp/accel/Accel.cpp:74]   --->   Operation 27 'getelementptr' 'line_buffer_m_V_addr_242' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [2/2] (1.62ns)   --->   "%line_buffer_m_V_load_1 = load i2* %line_buffer_m_V_addr_242, align 1" [cpp/accel/Accel.cpp:74]   --->   Operation 28 'load' 'line_buffer_m_V_load_1' <Predicate = true> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>

State 2 <SV = 1> <Delay = 4.45>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%conv_params_m_V_offs = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_V_offset)" [cpp/accel/Accel.cpp:74]   --->   Operation 29 'read' 'conv_params_m_V_offs' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%conv_params_m_2_2_11 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_2_2_10)" [cpp/accel/Accel.cpp:74]   --->   Operation 30 'read' 'conv_params_m_2_2_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%conv_params_m_2_2_12 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_2_2_s)" [cpp/accel/Accel.cpp:74]   --->   Operation 31 'read' 'conv_params_m_2_2_12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%conv_params_m_2_1_11 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_2_1_10)" [cpp/accel/Accel.cpp:74]   --->   Operation 32 'read' 'conv_params_m_2_1_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%conv_params_m_2_1_12 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_2_1_s)" [cpp/accel/Accel.cpp:74]   --->   Operation 33 'read' 'conv_params_m_2_1_12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (1.41ns)   --->   "%add_ln74_1 = add i10 10, %sub_ln74" [cpp/accel/Accel.cpp:74]   --->   Operation 34 'add' 'add_ln74_1' <Predicate = true> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (1.41ns)   --->   "%add_ln74_4 = add i10 %zext_ln74_2, %add_ln74_1" [cpp/accel/Accel.cpp:74]   --->   Operation 35 'add' 'add_ln74_4' <Predicate = true> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%zext_ln74_4 = zext i10 %add_ln74_4 to i64" [cpp/accel/Accel.cpp:74]   --->   Operation 36 'zext' 'zext_ln74_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%line_buffer_m_V_addr_240 = getelementptr [480 x i2]* %line_buffer_m_V, i64 0, i64 %zext_ln74_4" [cpp/accel/Accel.cpp:74]   --->   Operation 37 'getelementptr' 'line_buffer_m_V_addr_240' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/2] (1.62ns)   --->   "%line_buffer_m_V_load = load i2* %line_buffer_m_V_addr, align 1" [cpp/accel/Accel.cpp:74]   --->   Operation 38 'load' 'line_buffer_m_V_load' <Predicate = true> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_2 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node tmp_56)   --->   "%trunc_ln215 = trunc i2 %line_buffer_m_V_load to i1" [cpp/accel/Accel.cpp:76]   --->   Operation 39 'trunc' 'trunc_ln215' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node tmp_56)   --->   "%select_ln215 = select i1 %conv_params_m_V_offs, i1 %conv_params_m_2_2_11, i1 %conv_params_m_2_2_12" [cpp/accel/Accel.cpp:76]   --->   Operation 40 'select' 'select_ln215' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node tmp_56)   --->   "%and_ln1355 = and i1 %trunc_ln215, %select_ln215" [cpp/accel/Accel.cpp:76]   --->   Operation 41 'and' 'and_ln1355' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node tmp_56)   --->   "%tmp_55 = call i1 @_ssdm_op_BitSelect.i1.i2.i32(i2 %line_buffer_m_V_load, i32 1)" [cpp/accel/Accel.cpp:76]   --->   Operation 42 'bitselect' 'tmp_55' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node tmp_56)   --->   "%xor_ln841 = xor i1 %and_ln1355, %tmp_55" [cpp/accel/Accel.cpp:76]   --->   Operation 43 'xor' 'xor_ln841' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.62ns) (out node of the LUT)   --->   "%tmp_56 = call i2 @_ssdm_op_BitSet.i2.i2.i32.i1(i2 %line_buffer_m_V_load, i32 1, i1 %xor_ln841)" [cpp/accel/Accel.cpp:76]   --->   Operation 44 'bitset' 'tmp_56' <Predicate = true> <Delay = 0.62>
ST_2 : Operation 45 [1/1] (0.00ns) (grouped into LUT with out node add_ln700)   --->   "%sext_ln1353 = sext i2 %tmp_56 to i3" [cpp/accel/Accel.cpp:74]   --->   Operation 45 'sext' 'sext_ln1353' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 46 [1/2] (1.62ns)   --->   "%line_buffer_m_V_load_1 = load i2* %line_buffer_m_V_addr_242, align 1" [cpp/accel/Accel.cpp:74]   --->   Operation 46 'load' 'line_buffer_m_V_load_1' <Predicate = true> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_2 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node tmp_58)   --->   "%trunc_ln215_1 = trunc i2 %line_buffer_m_V_load_1 to i1" [cpp/accel/Accel.cpp:76]   --->   Operation 47 'trunc' 'trunc_ln215_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node tmp_58)   --->   "%select_ln215_1 = select i1 %conv_params_m_V_offs, i1 %conv_params_m_2_1_11, i1 %conv_params_m_2_1_12" [cpp/accel/Accel.cpp:76]   --->   Operation 48 'select' 'select_ln215_1' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node tmp_58)   --->   "%and_ln1355_1 = and i1 %trunc_ln215_1, %select_ln215_1" [cpp/accel/Accel.cpp:76]   --->   Operation 49 'and' 'and_ln1355_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node tmp_58)   --->   "%tmp_57 = call i1 @_ssdm_op_BitSelect.i1.i2.i32(i2 %line_buffer_m_V_load_1, i32 1)" [cpp/accel/Accel.cpp:76]   --->   Operation 50 'bitselect' 'tmp_57' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns) (grouped into LUT with out node tmp_58)   --->   "%xor_ln841_1 = xor i1 %and_ln1355_1, %tmp_57" [cpp/accel/Accel.cpp:76]   --->   Operation 51 'xor' 'xor_ln841_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.62ns) (out node of the LUT)   --->   "%tmp_58 = call i2 @_ssdm_op_BitSet.i2.i2.i32.i1(i2 %line_buffer_m_V_load_1, i32 1, i1 %xor_ln841_1)" [cpp/accel/Accel.cpp:76]   --->   Operation 52 'bitset' 'tmp_58' <Predicate = true> <Delay = 0.62>
ST_2 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node add_ln700)   --->   "%sext_ln1353_1 = sext i2 %tmp_58 to i3" [cpp/accel/Accel.cpp:74]   --->   Operation 53 'sext' 'sext_ln1353_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (1.32ns)   --->   "%add_ln1353_14 = add i4 2, %cc_V_read" [cpp/accel/Accel.cpp:74]   --->   Operation 54 'add' 'add_ln1353_14' <Predicate = true> <Delay = 1.32> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln74_10 = zext i4 %add_ln1353_14 to i10" [cpp/accel/Accel.cpp:74]   --->   Operation 55 'zext' 'zext_ln74_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (1.41ns)   --->   "%add_ln74_9 = add i10 %zext_ln74_10, %sub_ln74" [cpp/accel/Accel.cpp:74]   --->   Operation 56 'add' 'add_ln74_9' <Predicate = true> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%zext_ln74_11 = zext i10 %add_ln74_9 to i64" [cpp/accel/Accel.cpp:74]   --->   Operation 57 'zext' 'zext_ln74_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%line_buffer_m_V_addr_245 = getelementptr [480 x i2]* %line_buffer_m_V, i64 0, i64 %zext_ln74_11" [cpp/accel/Accel.cpp:74]   --->   Operation 58 'getelementptr' 'line_buffer_m_V_addr_245' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 59 [2/2] (1.62ns)   --->   "%line_buffer_m_V_load_2 = load i2* %line_buffer_m_V_addr_245, align 1" [cpp/accel/Accel.cpp:74]   --->   Operation 59 'load' 'line_buffer_m_V_load_2' <Predicate = true> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_2 : Operation 60 [2/2] (1.62ns)   --->   "%line_buffer_m_V_load_3 = load i2* %line_buffer_m_V_addr_240, align 1" [cpp/accel/Accel.cpp:74]   --->   Operation 60 'load' 'line_buffer_m_V_load_3' <Predicate = true> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_2 : Operation 61 [1/1] (1.00ns) (out node of the LUT)   --->   "%add_ln700 = add i3 %sext_ln1353, %sext_ln1353_1" [cpp/accel/Accel.cpp:77]   --->   Operation 61 'add' 'add_ln700' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 4.41>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%conv_params_m_2_0_11 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_2_0_10)" [cpp/accel/Accel.cpp:74]   --->   Operation 62 'read' 'conv_params_m_2_0_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "%conv_params_m_2_0_12 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_2_0_s)" [cpp/accel/Accel.cpp:74]   --->   Operation 63 'read' 'conv_params_m_2_0_12' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%conv_params_m_1_2_11 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_1_2_10)" [cpp/accel/Accel.cpp:74]   --->   Operation 64 'read' 'conv_params_m_1_2_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%conv_params_m_1_2_12 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_1_2_s)" [cpp/accel/Accel.cpp:74]   --->   Operation 65 'read' 'conv_params_m_1_2_12' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (1.41ns)   --->   "%add_ln74_2 = add i10 20, %sub_ln74" [cpp/accel/Accel.cpp:74]   --->   Operation 66 'add' 'add_ln74_2' <Predicate = true> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 67 [1/1] (1.41ns)   --->   "%add_ln74_5 = add i10 %zext_ln74_2, %add_ln74_2" [cpp/accel/Accel.cpp:74]   --->   Operation 67 'add' 'add_ln74_5' <Predicate = true> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 68 [1/1] (1.41ns)   --->   "%add_ln74_7 = add i10 %zext_ln74_6, %add_ln74_1" [cpp/accel/Accel.cpp:74]   --->   Operation 68 'add' 'add_ln74_7' <Predicate = true> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "%zext_ln74_8 = zext i10 %add_ln74_7 to i64" [cpp/accel/Accel.cpp:74]   --->   Operation 69 'zext' 'zext_ln74_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%line_buffer_m_V_addr_243 = getelementptr [480 x i2]* %line_buffer_m_V, i64 0, i64 %zext_ln74_8" [cpp/accel/Accel.cpp:74]   --->   Operation 70 'getelementptr' 'line_buffer_m_V_addr_243' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (1.41ns)   --->   "%add_ln74_8 = add i10 %zext_ln74_6, %add_ln74_2" [cpp/accel/Accel.cpp:74]   --->   Operation 71 'add' 'add_ln74_8' <Predicate = true> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 72 [1/1] (1.41ns)   --->   "%add_ln74_10 = add i10 %zext_ln74_10, %add_ln74_1" [cpp/accel/Accel.cpp:74]   --->   Operation 72 'add' 'add_ln74_10' <Predicate = true> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%zext_ln74_12 = zext i10 %add_ln74_10 to i64" [cpp/accel/Accel.cpp:74]   --->   Operation 73 'zext' 'zext_ln74_12' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (0.00ns)   --->   "%line_buffer_m_V_addr_246 = getelementptr [480 x i2]* %line_buffer_m_V, i64 0, i64 %zext_ln74_12" [cpp/accel/Accel.cpp:74]   --->   Operation 74 'getelementptr' 'line_buffer_m_V_addr_246' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 75 [1/1] (1.41ns)   --->   "%add_ln74_11 = add i10 %zext_ln74_10, %add_ln74_2" [cpp/accel/Accel.cpp:74]   --->   Operation 75 'add' 'add_ln74_11' <Predicate = true> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 76 [1/2] (1.62ns)   --->   "%line_buffer_m_V_load_2 = load i2* %line_buffer_m_V_addr_245, align 1" [cpp/accel/Accel.cpp:74]   --->   Operation 76 'load' 'line_buffer_m_V_load_2' <Predicate = true> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_3 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node tmp_60)   --->   "%trunc_ln215_2 = trunc i2 %line_buffer_m_V_load_2 to i1" [cpp/accel/Accel.cpp:76]   --->   Operation 77 'trunc' 'trunc_ln215_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node tmp_60)   --->   "%select_ln215_2 = select i1 %conv_params_m_V_offs, i1 %conv_params_m_2_0_11, i1 %conv_params_m_2_0_12" [cpp/accel/Accel.cpp:76]   --->   Operation 78 'select' 'select_ln215_2' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node tmp_60)   --->   "%and_ln1355_2 = and i1 %trunc_ln215_2, %select_ln215_2" [cpp/accel/Accel.cpp:76]   --->   Operation 79 'and' 'and_ln1355_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node tmp_60)   --->   "%tmp_59 = call i1 @_ssdm_op_BitSelect.i1.i2.i32(i2 %line_buffer_m_V_load_2, i32 1)" [cpp/accel/Accel.cpp:76]   --->   Operation 80 'bitselect' 'tmp_59' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node tmp_60)   --->   "%xor_ln841_2 = xor i1 %and_ln1355_2, %tmp_59" [cpp/accel/Accel.cpp:76]   --->   Operation 81 'xor' 'xor_ln841_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 82 [1/1] (0.62ns) (out node of the LUT)   --->   "%tmp_60 = call i2 @_ssdm_op_BitSet.i2.i2.i32.i1(i2 %line_buffer_m_V_load_2, i32 1, i1 %xor_ln841_2)" [cpp/accel/Accel.cpp:76]   --->   Operation 82 'bitset' 'tmp_60' <Predicate = true> <Delay = 0.62>
ST_3 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node add_ln700_3)   --->   "%sext_ln74 = sext i2 %tmp_60 to i3" [cpp/accel/Accel.cpp:74]   --->   Operation 83 'sext' 'sext_ln74' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 84 [1/2] (1.62ns)   --->   "%line_buffer_m_V_load_3 = load i2* %line_buffer_m_V_addr_240, align 1" [cpp/accel/Accel.cpp:74]   --->   Operation 84 'load' 'line_buffer_m_V_load_3' <Predicate = true> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_3 : Operation 85 [1/1] (0.00ns) (grouped into LUT with out node tmp_62)   --->   "%trunc_ln215_3 = trunc i2 %line_buffer_m_V_load_3 to i1" [cpp/accel/Accel.cpp:76]   --->   Operation 85 'trunc' 'trunc_ln215_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 86 [1/1] (0.00ns) (grouped into LUT with out node tmp_62)   --->   "%select_ln215_3 = select i1 %conv_params_m_V_offs, i1 %conv_params_m_1_2_11, i1 %conv_params_m_1_2_12" [cpp/accel/Accel.cpp:76]   --->   Operation 86 'select' 'select_ln215_3' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node tmp_62)   --->   "%and_ln1355_3 = and i1 %trunc_ln215_3, %select_ln215_3" [cpp/accel/Accel.cpp:76]   --->   Operation 87 'and' 'and_ln1355_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node tmp_62)   --->   "%tmp_61 = call i1 @_ssdm_op_BitSelect.i1.i2.i32(i2 %line_buffer_m_V_load_3, i32 1)" [cpp/accel/Accel.cpp:76]   --->   Operation 88 'bitselect' 'tmp_61' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node tmp_62)   --->   "%xor_ln841_3 = xor i1 %and_ln1355_3, %tmp_61" [cpp/accel/Accel.cpp:76]   --->   Operation 89 'xor' 'xor_ln841_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 90 [1/1] (0.62ns) (out node of the LUT)   --->   "%tmp_62 = call i2 @_ssdm_op_BitSet.i2.i2.i32.i1(i2 %line_buffer_m_V_load_3, i32 1, i1 %xor_ln841_3)" [cpp/accel/Accel.cpp:76]   --->   Operation 90 'bitset' 'tmp_62' <Predicate = true> <Delay = 0.62>
ST_3 : Operation 91 [1/1] (0.00ns) (grouped into LUT with out node add_ln700_3)   --->   "%sext_ln74_1 = sext i2 %tmp_62 to i3" [cpp/accel/Accel.cpp:74]   --->   Operation 91 'sext' 'sext_ln74_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 92 [2/2] (1.62ns)   --->   "%line_buffer_m_V_load_4 = load i2* %line_buffer_m_V_addr_243, align 1" [cpp/accel/Accel.cpp:74]   --->   Operation 92 'load' 'line_buffer_m_V_load_4' <Predicate = true> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_3 : Operation 93 [2/2] (1.62ns)   --->   "%line_buffer_m_V_load_5 = load i2* %line_buffer_m_V_addr_246, align 1" [cpp/accel/Accel.cpp:74]   --->   Operation 93 'load' 'line_buffer_m_V_load_5' <Predicate = true> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_3 : Operation 94 [1/1] (0.00ns)   --->   "%sext_ln700_1 = sext i3 %add_ln700 to i4" [cpp/accel/Accel.cpp:77]   --->   Operation 94 'sext' 'sext_ln700_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 95 [1/1] (1.00ns) (out node of the LUT)   --->   "%add_ln700_3 = add i3 %sext_ln74, %sext_ln74_1" [cpp/accel/Accel.cpp:77]   --->   Operation 95 'add' 'add_ln700_3' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 96 [1/1] (0.00ns)   --->   "%sext_ln700_2 = sext i3 %add_ln700_3 to i4" [cpp/accel/Accel.cpp:77]   --->   Operation 96 'sext' 'sext_ln700_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 97 [1/1] (1.16ns)   --->   "%add_ln700_4 = add i4 %sext_ln700_2, %sext_ln700_1" [cpp/accel/Accel.cpp:77]   --->   Operation 97 'add' 'add_ln700_4' <Predicate = true> <Delay = 1.16> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 3.25>
ST_4 : Operation 98 [1/1] (0.00ns)   --->   "%conv_params_m_1_1_11 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_1_1_10)" [cpp/accel/Accel.cpp:74]   --->   Operation 98 'read' 'conv_params_m_1_1_11' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 99 [1/1] (0.00ns)   --->   "%conv_params_m_1_1_12 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_1_1_s)" [cpp/accel/Accel.cpp:74]   --->   Operation 99 'read' 'conv_params_m_1_1_12' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 100 [1/1] (0.00ns)   --->   "%conv_params_m_1_0_11 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_1_0_10)" [cpp/accel/Accel.cpp:74]   --->   Operation 100 'read' 'conv_params_m_1_0_11' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 101 [1/1] (0.00ns)   --->   "%conv_params_m_1_0_12 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_1_0_s)" [cpp/accel/Accel.cpp:74]   --->   Operation 101 'read' 'conv_params_m_1_0_12' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 102 [1/1] (0.00ns)   --->   "%zext_ln74_5 = zext i10 %add_ln74_5 to i64" [cpp/accel/Accel.cpp:74]   --->   Operation 102 'zext' 'zext_ln74_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 103 [1/1] (0.00ns)   --->   "%line_buffer_m_V_addr_241 = getelementptr [480 x i2]* %line_buffer_m_V, i64 0, i64 %zext_ln74_5" [cpp/accel/Accel.cpp:74]   --->   Operation 103 'getelementptr' 'line_buffer_m_V_addr_241' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 104 [1/1] (0.00ns)   --->   "%zext_ln74_9 = zext i10 %add_ln74_8 to i64" [cpp/accel/Accel.cpp:74]   --->   Operation 104 'zext' 'zext_ln74_9' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 105 [1/1] (0.00ns)   --->   "%line_buffer_m_V_addr_244 = getelementptr [480 x i2]* %line_buffer_m_V, i64 0, i64 %zext_ln74_9" [cpp/accel/Accel.cpp:74]   --->   Operation 105 'getelementptr' 'line_buffer_m_V_addr_244' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 106 [1/2] (1.62ns)   --->   "%line_buffer_m_V_load_4 = load i2* %line_buffer_m_V_addr_243, align 1" [cpp/accel/Accel.cpp:74]   --->   Operation 106 'load' 'line_buffer_m_V_load_4' <Predicate = true> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_4 : Operation 107 [1/1] (0.00ns) (grouped into LUT with out node tmp_64)   --->   "%trunc_ln215_4 = trunc i2 %line_buffer_m_V_load_4 to i1" [cpp/accel/Accel.cpp:76]   --->   Operation 107 'trunc' 'trunc_ln215_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node tmp_64)   --->   "%select_ln215_4 = select i1 %conv_params_m_V_offs, i1 %conv_params_m_1_1_11, i1 %conv_params_m_1_1_12" [cpp/accel/Accel.cpp:76]   --->   Operation 108 'select' 'select_ln215_4' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 109 [1/1] (0.00ns) (grouped into LUT with out node tmp_64)   --->   "%and_ln1355_4 = and i1 %trunc_ln215_4, %select_ln215_4" [cpp/accel/Accel.cpp:76]   --->   Operation 109 'and' 'and_ln1355_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 110 [1/1] (0.00ns) (grouped into LUT with out node tmp_64)   --->   "%tmp_63 = call i1 @_ssdm_op_BitSelect.i1.i2.i32(i2 %line_buffer_m_V_load_4, i32 1)" [cpp/accel/Accel.cpp:76]   --->   Operation 110 'bitselect' 'tmp_63' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 111 [1/1] (0.00ns) (grouped into LUT with out node tmp_64)   --->   "%xor_ln841_4 = xor i1 %and_ln1355_4, %tmp_63" [cpp/accel/Accel.cpp:76]   --->   Operation 111 'xor' 'xor_ln841_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 112 [1/1] (0.62ns) (out node of the LUT)   --->   "%tmp_64 = call i2 @_ssdm_op_BitSet.i2.i2.i32.i1(i2 %line_buffer_m_V_load_4, i32 1, i1 %xor_ln841_4)" [cpp/accel/Accel.cpp:76]   --->   Operation 112 'bitset' 'tmp_64' <Predicate = true> <Delay = 0.62>
ST_4 : Operation 113 [1/1] (0.00ns) (grouped into LUT with out node add_ln700_5)   --->   "%sext_ln74_2 = sext i2 %tmp_64 to i3" [cpp/accel/Accel.cpp:74]   --->   Operation 113 'sext' 'sext_ln74_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 114 [1/2] (1.62ns)   --->   "%line_buffer_m_V_load_5 = load i2* %line_buffer_m_V_addr_246, align 1" [cpp/accel/Accel.cpp:74]   --->   Operation 114 'load' 'line_buffer_m_V_load_5' <Predicate = true> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_4 : Operation 115 [1/1] (0.00ns) (grouped into LUT with out node tmp_66)   --->   "%trunc_ln215_5 = trunc i2 %line_buffer_m_V_load_5 to i1" [cpp/accel/Accel.cpp:76]   --->   Operation 115 'trunc' 'trunc_ln215_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 116 [1/1] (0.00ns) (grouped into LUT with out node tmp_66)   --->   "%select_ln215_5 = select i1 %conv_params_m_V_offs, i1 %conv_params_m_1_0_11, i1 %conv_params_m_1_0_12" [cpp/accel/Accel.cpp:76]   --->   Operation 116 'select' 'select_ln215_5' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node tmp_66)   --->   "%and_ln1355_5 = and i1 %trunc_ln215_5, %select_ln215_5" [cpp/accel/Accel.cpp:76]   --->   Operation 117 'and' 'and_ln1355_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node tmp_66)   --->   "%tmp_65 = call i1 @_ssdm_op_BitSelect.i1.i2.i32(i2 %line_buffer_m_V_load_5, i32 1)" [cpp/accel/Accel.cpp:76]   --->   Operation 118 'bitselect' 'tmp_65' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node tmp_66)   --->   "%xor_ln841_5 = xor i1 %and_ln1355_5, %tmp_65" [cpp/accel/Accel.cpp:76]   --->   Operation 119 'xor' 'xor_ln841_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 120 [1/1] (0.62ns) (out node of the LUT)   --->   "%tmp_66 = call i2 @_ssdm_op_BitSet.i2.i2.i32.i1(i2 %line_buffer_m_V_load_5, i32 1, i1 %xor_ln841_5)" [cpp/accel/Accel.cpp:76]   --->   Operation 120 'bitset' 'tmp_66' <Predicate = true> <Delay = 0.62>
ST_4 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node add_ln700_5)   --->   "%sext_ln74_3 = sext i2 %tmp_66 to i3" [cpp/accel/Accel.cpp:74]   --->   Operation 121 'sext' 'sext_ln74_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 122 [2/2] (1.62ns)   --->   "%line_buffer_m_V_load_6 = load i2* %line_buffer_m_V_addr_241, align 1" [cpp/accel/Accel.cpp:74]   --->   Operation 122 'load' 'line_buffer_m_V_load_6' <Predicate = true> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_4 : Operation 123 [2/2] (1.62ns)   --->   "%line_buffer_m_V_load_7 = load i2* %line_buffer_m_V_addr_244, align 1" [cpp/accel/Accel.cpp:74]   --->   Operation 123 'load' 'line_buffer_m_V_load_7' <Predicate = true> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_4 : Operation 124 [1/1] (1.00ns) (out node of the LUT)   --->   "%add_ln700_5 = add i3 %sext_ln74_2, %sext_ln74_3" [cpp/accel/Accel.cpp:77]   --->   Operation 124 'add' 'add_ln700_5' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 2.24>
ST_5 : Operation 125 [1/1] (0.00ns)   --->   "%conv_params_m_0_2_11 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_0_2_10)" [cpp/accel/Accel.cpp:74]   --->   Operation 125 'read' 'conv_params_m_0_2_11' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 126 [1/1] (0.00ns)   --->   "%conv_params_m_0_2_12 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_0_2_s)" [cpp/accel/Accel.cpp:74]   --->   Operation 126 'read' 'conv_params_m_0_2_12' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 127 [1/1] (0.00ns)   --->   "%conv_params_m_0_1_11 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_0_1_10)" [cpp/accel/Accel.cpp:74]   --->   Operation 127 'read' 'conv_params_m_0_1_11' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 128 [1/1] (0.00ns)   --->   "%conv_params_m_0_1_12 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_0_1_s)" [cpp/accel/Accel.cpp:74]   --->   Operation 128 'read' 'conv_params_m_0_1_12' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 129 [1/1] (0.00ns)   --->   "%conv_params_m_0_0_11 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_0_0_10)" [cpp/accel/Accel.cpp:74]   --->   Operation 129 'read' 'conv_params_m_0_0_11' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 130 [1/1] (0.00ns)   --->   "%conv_params_m_0_0_12 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_0_0_s)" [cpp/accel/Accel.cpp:74]   --->   Operation 130 'read' 'conv_params_m_0_0_12' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 131 [1/1] (0.00ns)   --->   "%zext_ln74_13 = zext i10 %add_ln74_11 to i64" [cpp/accel/Accel.cpp:74]   --->   Operation 131 'zext' 'zext_ln74_13' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 132 [1/1] (0.00ns)   --->   "%line_buffer_m_V_addr_247 = getelementptr [480 x i2]* %line_buffer_m_V, i64 0, i64 %zext_ln74_13" [cpp/accel/Accel.cpp:74]   --->   Operation 132 'getelementptr' 'line_buffer_m_V_addr_247' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 133 [1/2] (1.62ns)   --->   "%line_buffer_m_V_load_6 = load i2* %line_buffer_m_V_addr_241, align 1" [cpp/accel/Accel.cpp:74]   --->   Operation 133 'load' 'line_buffer_m_V_load_6' <Predicate = true> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_5 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node tmp_68)   --->   "%trunc_ln215_6 = trunc i2 %line_buffer_m_V_load_6 to i1" [cpp/accel/Accel.cpp:76]   --->   Operation 134 'trunc' 'trunc_ln215_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 135 [1/1] (0.00ns) (grouped into LUT with out node tmp_68)   --->   "%select_ln215_6 = select i1 %conv_params_m_V_offs, i1 %conv_params_m_0_2_11, i1 %conv_params_m_0_2_12" [cpp/accel/Accel.cpp:76]   --->   Operation 135 'select' 'select_ln215_6' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 136 [1/1] (0.00ns) (grouped into LUT with out node tmp_68)   --->   "%and_ln1355_6 = and i1 %trunc_ln215_6, %select_ln215_6" [cpp/accel/Accel.cpp:76]   --->   Operation 136 'and' 'and_ln1355_6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 137 [1/1] (0.00ns) (grouped into LUT with out node tmp_68)   --->   "%tmp_67 = call i1 @_ssdm_op_BitSelect.i1.i2.i32(i2 %line_buffer_m_V_load_6, i32 1)" [cpp/accel/Accel.cpp:76]   --->   Operation 137 'bitselect' 'tmp_67' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 138 [1/1] (0.00ns) (grouped into LUT with out node tmp_68)   --->   "%xor_ln841_6 = xor i1 %and_ln1355_6, %tmp_67" [cpp/accel/Accel.cpp:76]   --->   Operation 138 'xor' 'xor_ln841_6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 139 [1/1] (0.62ns) (out node of the LUT)   --->   "%tmp_68 = call i2 @_ssdm_op_BitSet.i2.i2.i32.i1(i2 %line_buffer_m_V_load_6, i32 1, i1 %xor_ln841_6)" [cpp/accel/Accel.cpp:76]   --->   Operation 139 'bitset' 'tmp_68' <Predicate = true> <Delay = 0.62>
ST_5 : Operation 140 [1/2] (1.62ns)   --->   "%line_buffer_m_V_load_7 = load i2* %line_buffer_m_V_addr_244, align 1" [cpp/accel/Accel.cpp:74]   --->   Operation 140 'load' 'line_buffer_m_V_load_7' <Predicate = true> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_5 : Operation 141 [1/1] (0.00ns) (grouped into LUT with out node tmp_70)   --->   "%trunc_ln215_7 = trunc i2 %line_buffer_m_V_load_7 to i1" [cpp/accel/Accel.cpp:76]   --->   Operation 141 'trunc' 'trunc_ln215_7' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node tmp_70)   --->   "%select_ln215_7 = select i1 %conv_params_m_V_offs, i1 %conv_params_m_0_1_11, i1 %conv_params_m_0_1_12" [cpp/accel/Accel.cpp:76]   --->   Operation 142 'select' 'select_ln215_7' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 143 [1/1] (0.00ns) (grouped into LUT with out node tmp_70)   --->   "%and_ln1355_7 = and i1 %trunc_ln215_7, %select_ln215_7" [cpp/accel/Accel.cpp:76]   --->   Operation 143 'and' 'and_ln1355_7' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node tmp_70)   --->   "%tmp_69 = call i1 @_ssdm_op_BitSelect.i1.i2.i32(i2 %line_buffer_m_V_load_7, i32 1)" [cpp/accel/Accel.cpp:76]   --->   Operation 144 'bitselect' 'tmp_69' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node tmp_70)   --->   "%xor_ln841_7 = xor i1 %and_ln1355_7, %tmp_69" [cpp/accel/Accel.cpp:76]   --->   Operation 145 'xor' 'xor_ln841_7' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 146 [1/1] (0.62ns) (out node of the LUT)   --->   "%tmp_70 = call i2 @_ssdm_op_BitSet.i2.i2.i32.i1(i2 %line_buffer_m_V_load_7, i32 1, i1 %xor_ln841_7)" [cpp/accel/Accel.cpp:76]   --->   Operation 146 'bitset' 'tmp_70' <Predicate = true> <Delay = 0.62>
ST_5 : Operation 147 [2/2] (1.62ns)   --->   "%line_buffer_m_V_load_8 = load i2* %line_buffer_m_V_addr_247, align 1" [cpp/accel/Accel.cpp:74]   --->   Operation 147 'load' 'line_buffer_m_V_load_8' <Predicate = true> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>

State 6 <SV = 5> <Delay = 6.61>
ST_6 : Operation 148 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str9) nounwind" [cpp/accel/Accel.cpp:69]   --->   Operation 148 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node add_ln700_7)   --->   "%sext_ln74_4 = sext i2 %tmp_68 to i4" [cpp/accel/Accel.cpp:74]   --->   Operation 149 'sext' 'sext_ln74_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 150 [1/1] (0.00ns) (grouped into LUT with out node add_ln700_6)   --->   "%sext_ln74_5 = sext i2 %tmp_70 to i3" [cpp/accel/Accel.cpp:74]   --->   Operation 150 'sext' 'sext_ln74_5' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 151 [1/2] (1.62ns)   --->   "%line_buffer_m_V_load_8 = load i2* %line_buffer_m_V_addr_247, align 1" [cpp/accel/Accel.cpp:74]   --->   Operation 151 'load' 'line_buffer_m_V_load_8' <Predicate = true> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_6 : Operation 152 [1/1] (0.00ns) (grouped into LUT with out node tmp_72)   --->   "%trunc_ln215_8 = trunc i2 %line_buffer_m_V_load_8 to i1" [cpp/accel/Accel.cpp:76]   --->   Operation 152 'trunc' 'trunc_ln215_8' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 153 [1/1] (0.00ns) (grouped into LUT with out node tmp_72)   --->   "%select_ln215_8 = select i1 %conv_params_m_V_offs, i1 %conv_params_m_0_0_11, i1 %conv_params_m_0_0_12" [cpp/accel/Accel.cpp:76]   --->   Operation 153 'select' 'select_ln215_8' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 154 [1/1] (0.00ns) (grouped into LUT with out node tmp_72)   --->   "%and_ln1355_8 = and i1 %trunc_ln215_8, %select_ln215_8" [cpp/accel/Accel.cpp:76]   --->   Operation 154 'and' 'and_ln1355_8' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 155 [1/1] (0.00ns) (grouped into LUT with out node tmp_72)   --->   "%tmp_71 = call i1 @_ssdm_op_BitSelect.i1.i2.i32(i2 %line_buffer_m_V_load_8, i32 1)" [cpp/accel/Accel.cpp:76]   --->   Operation 155 'bitselect' 'tmp_71' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 156 [1/1] (0.00ns) (grouped into LUT with out node tmp_72)   --->   "%xor_ln841_8 = xor i1 %and_ln1355_8, %tmp_71" [cpp/accel/Accel.cpp:76]   --->   Operation 156 'xor' 'xor_ln841_8' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 157 [1/1] (0.62ns) (out node of the LUT)   --->   "%tmp_72 = call i2 @_ssdm_op_BitSet.i2.i2.i32.i1(i2 %line_buffer_m_V_load_8, i32 1, i1 %xor_ln841_8)" [cpp/accel/Accel.cpp:76]   --->   Operation 157 'bitset' 'tmp_72' <Predicate = true> <Delay = 0.62>
ST_6 : Operation 158 [1/1] (0.00ns) (grouped into LUT with out node add_ln700_6)   --->   "%sext_ln700 = sext i2 %tmp_72 to i3" [cpp/accel/Accel.cpp:77]   --->   Operation 158 'sext' 'sext_ln700' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 159 [1/1] (0.00ns)   --->   "%sext_ln700_3 = sext i4 %add_ln700_4 to i5" [cpp/accel/Accel.cpp:77]   --->   Operation 159 'sext' 'sext_ln700_3' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 160 [1/1] (0.00ns)   --->   "%sext_ln700_4 = sext i3 %add_ln700_5 to i5" [cpp/accel/Accel.cpp:77]   --->   Operation 160 'sext' 'sext_ln700_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 161 [1/1] (1.00ns) (out node of the LUT)   --->   "%add_ln700_6 = add i3 %sext_ln74_5, %sext_ln700" [cpp/accel/Accel.cpp:77]   --->   Operation 161 'add' 'add_ln700_6' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 162 [1/1] (0.00ns) (grouped into LUT with out node add_ln700_7)   --->   "%sext_ln700_5 = sext i3 %add_ln700_6 to i4" [cpp/accel/Accel.cpp:77]   --->   Operation 162 'sext' 'sext_ln700_5' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 163 [1/1] (1.16ns) (out node of the LUT)   --->   "%add_ln700_7 = add i4 %sext_ln700_5, %sext_ln74_4" [cpp/accel/Accel.cpp:77]   --->   Operation 163 'add' 'add_ln700_7' <Predicate = true> <Delay = 1.16> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 164 [1/1] (0.00ns)   --->   "%sext_ln700_6 = sext i4 %add_ln700_7 to i5" [cpp/accel/Accel.cpp:77]   --->   Operation 164 'sext' 'sext_ln700_6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 165 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln700_8 = add i5 %sext_ln700_6, %sext_ln700_4" [cpp/accel/Accel.cpp:77]   --->   Operation 165 'add' 'add_ln700_8' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.10> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 166 [1/1] (2.20ns) (root node of TernaryAdder)   --->   "%add_ln700_9 = add i5 %add_ln700_8, %sext_ln700_3" [cpp/accel/Accel.cpp:77]   --->   Operation 166 'add' 'add_ln700_9' <Predicate = true> <Delay = 2.20> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.10> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 167 [1/1] (0.00ns)   --->   "ret i5 %add_ln700_9" [cpp/accel/Accel.cpp:80]   --->   Operation 167 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 12ns, clock uncertainty: 1.5ns.

 <State 1>: 5.78ns
The critical path consists of the following:
	wire read on port 'bank_V' (cpp/accel/Accel.cpp:74) [25]  (0 ns)
	'add' operation ('add_ln74', cpp/accel/Accel.cpp:74) [50]  (1.32 ns)
	'sub' operation ('sub_ln74', cpp/accel/Accel.cpp:74) [54]  (1.42 ns)
	'add' operation ('add_ln74_3', cpp/accel/Accel.cpp:74) [58]  (1.42 ns)
	'getelementptr' operation ('line_buffer_m_V_addr', cpp/accel/Accel.cpp:74) [60]  (0 ns)
	'load' operation ('line_buffer_m_V_load', cpp/accel/Accel.cpp:74) on array 'line_buffer_m_V' [67]  (1.63 ns)

 <State 2>: 4.46ns
The critical path consists of the following:
	'add' operation ('add_ln74_1', cpp/accel/Accel.cpp:74) [55]  (1.42 ns)
	'add' operation ('add_ln74_4', cpp/accel/Accel.cpp:74) [61]  (1.42 ns)
	'getelementptr' operation ('line_buffer_m_V_addr_240', cpp/accel/Accel.cpp:74) [63]  (0 ns)
	'load' operation ('line_buffer_m_V_load_3', cpp/accel/Accel.cpp:74) on array 'line_buffer_m_V' [113]  (1.63 ns)

 <State 3>: 4.41ns
The critical path consists of the following:
	'load' operation ('line_buffer_m_V_load_2', cpp/accel/Accel.cpp:74) on array 'line_buffer_m_V' [105]  (1.63 ns)
	'add' operation ('add_ln700_3', cpp/accel/Accel.cpp:77) [163]  (1 ns)
	'add' operation ('add_ln700_4', cpp/accel/Accel.cpp:77) [165]  (1.16 ns)
	blocking operation 0.62 ns on control path)

 <State 4>: 3.25ns
The critical path consists of the following:
	'load' operation ('line_buffer_m_V_load_4', cpp/accel/Accel.cpp:74) on array 'line_buffer_m_V' [121]  (1.63 ns)
	'add' operation ('add_ln700_5', cpp/accel/Accel.cpp:77) [167]  (1 ns)
	blocking operation 0.62 ns on control path)

 <State 5>: 2.25ns
The critical path consists of the following:
	'load' operation ('line_buffer_m_V_load_6', cpp/accel/Accel.cpp:74) on array 'line_buffer_m_V' [137]  (1.63 ns)
	blocking operation 0.62 ns on control path)

 <State 6>: 6.61ns
The critical path consists of the following:
	'load' operation ('line_buffer_m_V_load_8', cpp/accel/Accel.cpp:74) on array 'line_buffer_m_V' [153]  (1.63 ns)
	'add' operation ('add_ln700_6', cpp/accel/Accel.cpp:77) [169]  (1 ns)
	'add' operation ('add_ln700_7', cpp/accel/Accel.cpp:77) [171]  (1.16 ns)
	'add' operation ('add_ln700_8', cpp/accel/Accel.cpp:77) [173]  (0 ns)
	'add' operation ('add_ln700_9', cpp/accel/Accel.cpp:77) [174]  (2.2 ns)
	blocking operation 0.62 ns on control path)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
