

================================================================
== Vivado HLS Report for 'conv3x3b'
================================================================
* Date:           Tue Apr  6 18:10:19 2021

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        BNN_6
* Solution:       solution1
* Product family: kintex7
* Target device:  xc7k70t-fbv676-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  25.00|     7.652|        3.12|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    5|    5|    5|    5| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 5, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 1
  Pipeline-0 : II = 5, D = 6, States = { 1 2 3 4 5 6 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 6.82>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%cc_V_read = call i4 @_ssdm_op_Read.ap_auto.i4(i4 %cc_V)" [cpp/accel/Accel.cpp:79]   --->   Operation 7 'read' 'cc_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%bank_V_read = call i4 @_ssdm_op_Read.ap_auto.i4(i4 %bank_V)" [cpp/accel/Accel.cpp:79]   --->   Operation 8 'read' 'bank_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%line_buffer_m_V_offs = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %line_buffer_m_V_offset)" [cpp/accel/Accel.cpp:79]   --->   Operation 9 'read' 'line_buffer_m_V_offs' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%tmp = call i4 @_ssdm_op_BitConcatenate.i4.i1.i3(i1 %line_buffer_m_V_offs, i3 0)" [cpp/accel/Accel.cpp:79]   --->   Operation 10 'bitconcatenate' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%zext_ln79_cast = zext i4 %tmp to i5" [cpp/accel/Accel.cpp:79]   --->   Operation 11 'zext' 'zext_ln79_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%zext_ln79 = zext i4 %bank_V_read to i5" [cpp/accel/Accel.cpp:79]   --->   Operation 12 'zext' 'zext_ln79' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (1.32ns)   --->   "%add_ln79 = add i5 %zext_ln79, %zext_ln79_cast" [cpp/accel/Accel.cpp:79]   --->   Operation 13 'add' 'add_ln79' <Predicate = true> <Delay = 1.32> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%tmp_94 = call i10 @_ssdm_op_BitConcatenate.i10.i5.i5(i5 %add_ln79, i5 0)" [cpp/accel/Accel.cpp:79]   --->   Operation 14 'bitconcatenate' 'tmp_94' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%zext_ln79_1 = zext i10 %tmp_94 to i11" [cpp/accel/Accel.cpp:79]   --->   Operation 15 'zext' 'zext_ln79_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%tmp_95 = call i6 @_ssdm_op_BitConcatenate.i6.i5.i1(i5 %add_ln79, i1 false)" [cpp/accel/Accel.cpp:79]   --->   Operation 16 'bitconcatenate' 'tmp_95' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%zext_ln79_2 = zext i6 %tmp_95 to i11" [cpp/accel/Accel.cpp:79]   --->   Operation 17 'zext' 'zext_ln79_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (1.41ns)   --->   "%sub_ln79 = sub i11 %zext_ln79_1, %zext_ln79_2" [cpp/accel/Accel.cpp:79]   --->   Operation 18 'sub' 'sub_ln79' <Predicate = true> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%zext_ln79_3 = zext i4 %cc_V_read to i11" [cpp/accel/Accel.cpp:79]   --->   Operation 19 'zext' 'zext_ln79_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (1.42ns)   --->   "%add_ln79_3 = add i11 %zext_ln79_3, %sub_ln79" [cpp/accel/Accel.cpp:79]   --->   Operation 20 'add' 'add_ln79_3' <Predicate = true> <Delay = 1.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%zext_ln79_4 = zext i11 %add_ln79_3 to i64" [cpp/accel/Accel.cpp:79]   --->   Operation 21 'zext' 'zext_ln79_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%line_buffer_m_V_addr = getelementptr [800 x i2]* %line_buffer_m_V, i64 0, i64 %zext_ln79_4" [cpp/accel/Accel.cpp:79]   --->   Operation 22 'getelementptr' 'line_buffer_m_V_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [2/2] (2.66ns)   --->   "%line_buffer_m_V_load = load i2* %line_buffer_m_V_addr, align 1" [cpp/accel/Accel.cpp:79]   --->   Operation 23 'load' 'line_buffer_m_V_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 800> <RAM>
ST_1 : Operation 24 [1/1] (1.32ns)   --->   "%add_ln1353 = add i4 1, %cc_V_read" [cpp/accel/Accel.cpp:79]   --->   Operation 24 'add' 'add_ln1353' <Predicate = true> <Delay = 1.32> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln79_7 = zext i4 %add_ln1353 to i11" [cpp/accel/Accel.cpp:79]   --->   Operation 25 'zext' 'zext_ln79_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (1.42ns)   --->   "%add_ln79_6 = add i11 %zext_ln79_7, %sub_ln79" [cpp/accel/Accel.cpp:79]   --->   Operation 26 'add' 'add_ln79_6' <Predicate = true> <Delay = 1.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln79_8 = zext i11 %add_ln79_6 to i64" [cpp/accel/Accel.cpp:79]   --->   Operation 27 'zext' 'zext_ln79_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%line_buffer_m_V_addr_3 = getelementptr [800 x i2]* %line_buffer_m_V, i64 0, i64 %zext_ln79_8" [cpp/accel/Accel.cpp:79]   --->   Operation 28 'getelementptr' 'line_buffer_m_V_addr_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [2/2] (2.66ns)   --->   "%line_buffer_m_V_load_1 = load i2* %line_buffer_m_V_addr_3, align 1" [cpp/accel/Accel.cpp:79]   --->   Operation 29 'load' 'line_buffer_m_V_load_1' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 800> <RAM>

State 2 <SV = 1> <Delay = 5.52>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%conv_params_m_V_offs = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_V_offset)" [cpp/accel/Accel.cpp:79]   --->   Operation 30 'read' 'conv_params_m_V_offs' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%conv_params_m_2_2_11 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_2_2_10)" [cpp/accel/Accel.cpp:79]   --->   Operation 31 'read' 'conv_params_m_2_2_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%conv_params_m_2_2_12 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_2_2_s)" [cpp/accel/Accel.cpp:79]   --->   Operation 32 'read' 'conv_params_m_2_2_12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%conv_params_m_2_1_11 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_2_1_10)" [cpp/accel/Accel.cpp:79]   --->   Operation 33 'read' 'conv_params_m_2_1_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%conv_params_m_2_1_12 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_2_1_s)" [cpp/accel/Accel.cpp:79]   --->   Operation 34 'read' 'conv_params_m_2_1_12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (1.42ns)   --->   "%add_ln79_1 = add i11 10, %sub_ln79" [cpp/accel/Accel.cpp:79]   --->   Operation 35 'add' 'add_ln79_1' <Predicate = true> <Delay = 1.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (1.42ns)   --->   "%add_ln79_4 = add i11 %zext_ln79_3, %add_ln79_1" [cpp/accel/Accel.cpp:79]   --->   Operation 36 'add' 'add_ln79_4' <Predicate = true> <Delay = 1.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%zext_ln79_5 = zext i11 %add_ln79_4 to i64" [cpp/accel/Accel.cpp:79]   --->   Operation 37 'zext' 'zext_ln79_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%line_buffer_m_V_addr_1 = getelementptr [800 x i2]* %line_buffer_m_V, i64 0, i64 %zext_ln79_5" [cpp/accel/Accel.cpp:79]   --->   Operation 38 'getelementptr' 'line_buffer_m_V_addr_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/2] (2.66ns)   --->   "%line_buffer_m_V_load = load i2* %line_buffer_m_V_addr, align 1" [cpp/accel/Accel.cpp:79]   --->   Operation 39 'load' 'line_buffer_m_V_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 800> <RAM>
ST_2 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node tmp_97)   --->   "%trunc_ln215 = trunc i2 %line_buffer_m_V_load to i1" [cpp/accel/Accel.cpp:81]   --->   Operation 40 'trunc' 'trunc_ln215' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node tmp_97)   --->   "%select_ln215 = select i1 %conv_params_m_V_offs, i1 %conv_params_m_2_2_11, i1 %conv_params_m_2_2_12" [cpp/accel/Accel.cpp:81]   --->   Operation 41 'select' 'select_ln215' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node tmp_97)   --->   "%and_ln1355 = and i1 %trunc_ln215, %select_ln215" [cpp/accel/Accel.cpp:81]   --->   Operation 42 'and' 'and_ln1355' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node tmp_97)   --->   "%tmp_96 = call i1 @_ssdm_op_BitSelect.i1.i2.i32(i2 %line_buffer_m_V_load, i32 1)" [cpp/accel/Accel.cpp:81]   --->   Operation 43 'bitselect' 'tmp_96' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node tmp_97)   --->   "%xor_ln841 = xor i1 %and_ln1355, %tmp_96" [cpp/accel/Accel.cpp:81]   --->   Operation 44 'xor' 'xor_ln841' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.62ns) (out node of the LUT)   --->   "%tmp_97 = call i2 @_ssdm_op_BitSet.i2.i2.i32.i1(i2 %line_buffer_m_V_load, i32 1, i1 %xor_ln841)" [cpp/accel/Accel.cpp:81]   --->   Operation 45 'bitset' 'tmp_97' <Predicate = true> <Delay = 0.62>
ST_2 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node add_ln700)   --->   "%sext_ln1353 = sext i2 %tmp_97 to i3" [cpp/accel/Accel.cpp:79]   --->   Operation 46 'sext' 'sext_ln1353' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/2] (2.66ns)   --->   "%line_buffer_m_V_load_1 = load i2* %line_buffer_m_V_addr_3, align 1" [cpp/accel/Accel.cpp:79]   --->   Operation 47 'load' 'line_buffer_m_V_load_1' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 800> <RAM>
ST_2 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node tmp_99)   --->   "%trunc_ln215_1 = trunc i2 %line_buffer_m_V_load_1 to i1" [cpp/accel/Accel.cpp:81]   --->   Operation 48 'trunc' 'trunc_ln215_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node tmp_99)   --->   "%select_ln215_1 = select i1 %conv_params_m_V_offs, i1 %conv_params_m_2_1_11, i1 %conv_params_m_2_1_12" [cpp/accel/Accel.cpp:81]   --->   Operation 49 'select' 'select_ln215_1' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node tmp_99)   --->   "%and_ln1355_1 = and i1 %trunc_ln215_1, %select_ln215_1" [cpp/accel/Accel.cpp:81]   --->   Operation 50 'and' 'and_ln1355_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.00ns) (grouped into LUT with out node tmp_99)   --->   "%tmp_98 = call i1 @_ssdm_op_BitSelect.i1.i2.i32(i2 %line_buffer_m_V_load_1, i32 1)" [cpp/accel/Accel.cpp:81]   --->   Operation 51 'bitselect' 'tmp_98' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node tmp_99)   --->   "%xor_ln841_1 = xor i1 %and_ln1355_1, %tmp_98" [cpp/accel/Accel.cpp:81]   --->   Operation 52 'xor' 'xor_ln841_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.62ns) (out node of the LUT)   --->   "%tmp_99 = call i2 @_ssdm_op_BitSet.i2.i2.i32.i1(i2 %line_buffer_m_V_load_1, i32 1, i1 %xor_ln841_1)" [cpp/accel/Accel.cpp:81]   --->   Operation 53 'bitset' 'tmp_99' <Predicate = true> <Delay = 0.62>
ST_2 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node add_ln700)   --->   "%sext_ln1353_1 = sext i2 %tmp_99 to i3" [cpp/accel/Accel.cpp:79]   --->   Operation 54 'sext' 'sext_ln1353_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (1.32ns)   --->   "%add_ln1353_14 = add i4 2, %cc_V_read" [cpp/accel/Accel.cpp:79]   --->   Operation 55 'add' 'add_ln1353_14' <Predicate = true> <Delay = 1.32> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%zext_ln79_11 = zext i4 %add_ln1353_14 to i11" [cpp/accel/Accel.cpp:79]   --->   Operation 56 'zext' 'zext_ln79_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (1.42ns)   --->   "%add_ln79_9 = add i11 %zext_ln79_11, %sub_ln79" [cpp/accel/Accel.cpp:79]   --->   Operation 57 'add' 'add_ln79_9' <Predicate = true> <Delay = 1.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln79_12 = zext i11 %add_ln79_9 to i64" [cpp/accel/Accel.cpp:79]   --->   Operation 58 'zext' 'zext_ln79_12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%line_buffer_m_V_addr_6 = getelementptr [800 x i2]* %line_buffer_m_V, i64 0, i64 %zext_ln79_12" [cpp/accel/Accel.cpp:79]   --->   Operation 59 'getelementptr' 'line_buffer_m_V_addr_6' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 60 [2/2] (2.66ns)   --->   "%line_buffer_m_V_load_2 = load i2* %line_buffer_m_V_addr_6, align 1" [cpp/accel/Accel.cpp:79]   --->   Operation 60 'load' 'line_buffer_m_V_load_2' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 800> <RAM>
ST_2 : Operation 61 [2/2] (2.66ns)   --->   "%line_buffer_m_V_load_3 = load i2* %line_buffer_m_V_addr_1, align 1" [cpp/accel/Accel.cpp:79]   --->   Operation 61 'load' 'line_buffer_m_V_load_3' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 800> <RAM>
ST_2 : Operation 62 [1/1] (1.00ns) (out node of the LUT)   --->   "%add_ln700 = add i3 %sext_ln1353, %sext_ln1353_1" [cpp/accel/Accel.cpp:82]   --->   Operation 62 'add' 'add_ln700' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 5.45>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "%conv_params_m_2_0_11 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_2_0_10)" [cpp/accel/Accel.cpp:79]   --->   Operation 63 'read' 'conv_params_m_2_0_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%conv_params_m_2_0_12 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_2_0_s)" [cpp/accel/Accel.cpp:79]   --->   Operation 64 'read' 'conv_params_m_2_0_12' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%conv_params_m_1_2_11 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_1_2_10)" [cpp/accel/Accel.cpp:79]   --->   Operation 65 'read' 'conv_params_m_1_2_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%conv_params_m_1_2_12 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_1_2_s)" [cpp/accel/Accel.cpp:79]   --->   Operation 66 'read' 'conv_params_m_1_2_12' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 67 [1/1] (1.42ns)   --->   "%add_ln79_2 = add i11 20, %sub_ln79" [cpp/accel/Accel.cpp:79]   --->   Operation 67 'add' 'add_ln79_2' <Predicate = true> <Delay = 1.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 68 [1/1] (1.42ns)   --->   "%add_ln79_5 = add i11 %zext_ln79_3, %add_ln79_2" [cpp/accel/Accel.cpp:79]   --->   Operation 68 'add' 'add_ln79_5' <Predicate = true> <Delay = 1.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 69 [1/1] (1.42ns)   --->   "%add_ln79_7 = add i11 %zext_ln79_7, %add_ln79_1" [cpp/accel/Accel.cpp:79]   --->   Operation 69 'add' 'add_ln79_7' <Predicate = true> <Delay = 1.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%zext_ln79_9 = zext i11 %add_ln79_7 to i64" [cpp/accel/Accel.cpp:79]   --->   Operation 70 'zext' 'zext_ln79_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%line_buffer_m_V_addr_4 = getelementptr [800 x i2]* %line_buffer_m_V, i64 0, i64 %zext_ln79_9" [cpp/accel/Accel.cpp:79]   --->   Operation 71 'getelementptr' 'line_buffer_m_V_addr_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (1.42ns)   --->   "%add_ln79_8 = add i11 %zext_ln79_7, %add_ln79_2" [cpp/accel/Accel.cpp:79]   --->   Operation 72 'add' 'add_ln79_8' <Predicate = true> <Delay = 1.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 73 [1/1] (1.42ns)   --->   "%add_ln79_10 = add i11 %zext_ln79_11, %add_ln79_1" [cpp/accel/Accel.cpp:79]   --->   Operation 73 'add' 'add_ln79_10' <Predicate = true> <Delay = 1.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 74 [1/1] (0.00ns)   --->   "%zext_ln79_13 = zext i11 %add_ln79_10 to i64" [cpp/accel/Accel.cpp:79]   --->   Operation 74 'zext' 'zext_ln79_13' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%line_buffer_m_V_addr_7 = getelementptr [800 x i2]* %line_buffer_m_V, i64 0, i64 %zext_ln79_13" [cpp/accel/Accel.cpp:79]   --->   Operation 75 'getelementptr' 'line_buffer_m_V_addr_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (1.42ns)   --->   "%add_ln79_11 = add i11 %zext_ln79_11, %add_ln79_2" [cpp/accel/Accel.cpp:79]   --->   Operation 76 'add' 'add_ln79_11' <Predicate = true> <Delay = 1.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 77 [1/2] (2.66ns)   --->   "%line_buffer_m_V_load_2 = load i2* %line_buffer_m_V_addr_6, align 1" [cpp/accel/Accel.cpp:79]   --->   Operation 77 'load' 'line_buffer_m_V_load_2' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 800> <RAM>
ST_3 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node tmp_101)   --->   "%trunc_ln215_2 = trunc i2 %line_buffer_m_V_load_2 to i1" [cpp/accel/Accel.cpp:81]   --->   Operation 78 'trunc' 'trunc_ln215_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node tmp_101)   --->   "%select_ln215_2 = select i1 %conv_params_m_V_offs, i1 %conv_params_m_2_0_11, i1 %conv_params_m_2_0_12" [cpp/accel/Accel.cpp:81]   --->   Operation 79 'select' 'select_ln215_2' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node tmp_101)   --->   "%and_ln1355_2 = and i1 %trunc_ln215_2, %select_ln215_2" [cpp/accel/Accel.cpp:81]   --->   Operation 80 'and' 'and_ln1355_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node tmp_101)   --->   "%tmp_100 = call i1 @_ssdm_op_BitSelect.i1.i2.i32(i2 %line_buffer_m_V_load_2, i32 1)" [cpp/accel/Accel.cpp:81]   --->   Operation 81 'bitselect' 'tmp_100' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node tmp_101)   --->   "%xor_ln841_2 = xor i1 %and_ln1355_2, %tmp_100" [cpp/accel/Accel.cpp:81]   --->   Operation 82 'xor' 'xor_ln841_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 83 [1/1] (0.62ns) (out node of the LUT)   --->   "%tmp_101 = call i2 @_ssdm_op_BitSet.i2.i2.i32.i1(i2 %line_buffer_m_V_load_2, i32 1, i1 %xor_ln841_2)" [cpp/accel/Accel.cpp:81]   --->   Operation 83 'bitset' 'tmp_101' <Predicate = true> <Delay = 0.62>
ST_3 : Operation 84 [1/1] (0.00ns) (grouped into LUT with out node add_ln700_3)   --->   "%sext_ln79 = sext i2 %tmp_101 to i3" [cpp/accel/Accel.cpp:79]   --->   Operation 84 'sext' 'sext_ln79' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 85 [1/2] (2.66ns)   --->   "%line_buffer_m_V_load_3 = load i2* %line_buffer_m_V_addr_1, align 1" [cpp/accel/Accel.cpp:79]   --->   Operation 85 'load' 'line_buffer_m_V_load_3' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 800> <RAM>
ST_3 : Operation 86 [1/1] (0.00ns) (grouped into LUT with out node tmp_103)   --->   "%trunc_ln215_3 = trunc i2 %line_buffer_m_V_load_3 to i1" [cpp/accel/Accel.cpp:81]   --->   Operation 86 'trunc' 'trunc_ln215_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node tmp_103)   --->   "%select_ln215_3 = select i1 %conv_params_m_V_offs, i1 %conv_params_m_1_2_11, i1 %conv_params_m_1_2_12" [cpp/accel/Accel.cpp:81]   --->   Operation 87 'select' 'select_ln215_3' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node tmp_103)   --->   "%and_ln1355_3 = and i1 %trunc_ln215_3, %select_ln215_3" [cpp/accel/Accel.cpp:81]   --->   Operation 88 'and' 'and_ln1355_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node tmp_103)   --->   "%tmp_102 = call i1 @_ssdm_op_BitSelect.i1.i2.i32(i2 %line_buffer_m_V_load_3, i32 1)" [cpp/accel/Accel.cpp:81]   --->   Operation 89 'bitselect' 'tmp_102' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node tmp_103)   --->   "%xor_ln841_3 = xor i1 %and_ln1355_3, %tmp_102" [cpp/accel/Accel.cpp:81]   --->   Operation 90 'xor' 'xor_ln841_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 91 [1/1] (0.62ns) (out node of the LUT)   --->   "%tmp_103 = call i2 @_ssdm_op_BitSet.i2.i2.i32.i1(i2 %line_buffer_m_V_load_3, i32 1, i1 %xor_ln841_3)" [cpp/accel/Accel.cpp:81]   --->   Operation 91 'bitset' 'tmp_103' <Predicate = true> <Delay = 0.62>
ST_3 : Operation 92 [1/1] (0.00ns) (grouped into LUT with out node add_ln700_3)   --->   "%sext_ln79_1 = sext i2 %tmp_103 to i3" [cpp/accel/Accel.cpp:79]   --->   Operation 92 'sext' 'sext_ln79_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 93 [2/2] (2.66ns)   --->   "%line_buffer_m_V_load_4 = load i2* %line_buffer_m_V_addr_4, align 1" [cpp/accel/Accel.cpp:79]   --->   Operation 93 'load' 'line_buffer_m_V_load_4' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 800> <RAM>
ST_3 : Operation 94 [2/2] (2.66ns)   --->   "%line_buffer_m_V_load_5 = load i2* %line_buffer_m_V_addr_7, align 1" [cpp/accel/Accel.cpp:79]   --->   Operation 94 'load' 'line_buffer_m_V_load_5' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 800> <RAM>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "%sext_ln700_1 = sext i3 %add_ln700 to i4" [cpp/accel/Accel.cpp:82]   --->   Operation 95 'sext' 'sext_ln700_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 96 [1/1] (1.00ns) (out node of the LUT)   --->   "%add_ln700_3 = add i3 %sext_ln79, %sext_ln79_1" [cpp/accel/Accel.cpp:82]   --->   Operation 96 'add' 'add_ln700_3' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 97 [1/1] (0.00ns)   --->   "%sext_ln700_2 = sext i3 %add_ln700_3 to i4" [cpp/accel/Accel.cpp:82]   --->   Operation 97 'sext' 'sext_ln700_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 98 [1/1] (1.16ns)   --->   "%add_ln700_4 = add i4 %sext_ln700_2, %sext_ln700_1" [cpp/accel/Accel.cpp:82]   --->   Operation 98 'add' 'add_ln700_4' <Predicate = true> <Delay = 1.16> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 4.28>
ST_4 : Operation 99 [1/1] (0.00ns)   --->   "%conv_params_m_1_1_11 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_1_1_10)" [cpp/accel/Accel.cpp:79]   --->   Operation 99 'read' 'conv_params_m_1_1_11' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 100 [1/1] (0.00ns)   --->   "%conv_params_m_1_1_12 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_1_1_s)" [cpp/accel/Accel.cpp:79]   --->   Operation 100 'read' 'conv_params_m_1_1_12' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 101 [1/1] (0.00ns)   --->   "%conv_params_m_1_0_11 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_1_0_10)" [cpp/accel/Accel.cpp:79]   --->   Operation 101 'read' 'conv_params_m_1_0_11' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 102 [1/1] (0.00ns)   --->   "%conv_params_m_1_0_12 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_1_0_s)" [cpp/accel/Accel.cpp:79]   --->   Operation 102 'read' 'conv_params_m_1_0_12' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 103 [1/1] (0.00ns)   --->   "%zext_ln79_6 = zext i11 %add_ln79_5 to i64" [cpp/accel/Accel.cpp:79]   --->   Operation 103 'zext' 'zext_ln79_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 104 [1/1] (0.00ns)   --->   "%line_buffer_m_V_addr_2 = getelementptr [800 x i2]* %line_buffer_m_V, i64 0, i64 %zext_ln79_6" [cpp/accel/Accel.cpp:79]   --->   Operation 104 'getelementptr' 'line_buffer_m_V_addr_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 105 [1/1] (0.00ns)   --->   "%zext_ln79_10 = zext i11 %add_ln79_8 to i64" [cpp/accel/Accel.cpp:79]   --->   Operation 105 'zext' 'zext_ln79_10' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 106 [1/1] (0.00ns)   --->   "%line_buffer_m_V_addr_5 = getelementptr [800 x i2]* %line_buffer_m_V, i64 0, i64 %zext_ln79_10" [cpp/accel/Accel.cpp:79]   --->   Operation 106 'getelementptr' 'line_buffer_m_V_addr_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 107 [1/2] (2.66ns)   --->   "%line_buffer_m_V_load_4 = load i2* %line_buffer_m_V_addr_4, align 1" [cpp/accel/Accel.cpp:79]   --->   Operation 107 'load' 'line_buffer_m_V_load_4' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 800> <RAM>
ST_4 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node tmp_105)   --->   "%trunc_ln215_4 = trunc i2 %line_buffer_m_V_load_4 to i1" [cpp/accel/Accel.cpp:81]   --->   Operation 108 'trunc' 'trunc_ln215_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 109 [1/1] (0.00ns) (grouped into LUT with out node tmp_105)   --->   "%select_ln215_4 = select i1 %conv_params_m_V_offs, i1 %conv_params_m_1_1_11, i1 %conv_params_m_1_1_12" [cpp/accel/Accel.cpp:81]   --->   Operation 109 'select' 'select_ln215_4' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 110 [1/1] (0.00ns) (grouped into LUT with out node tmp_105)   --->   "%and_ln1355_4 = and i1 %trunc_ln215_4, %select_ln215_4" [cpp/accel/Accel.cpp:81]   --->   Operation 110 'and' 'and_ln1355_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 111 [1/1] (0.00ns) (grouped into LUT with out node tmp_105)   --->   "%tmp_104 = call i1 @_ssdm_op_BitSelect.i1.i2.i32(i2 %line_buffer_m_V_load_4, i32 1)" [cpp/accel/Accel.cpp:81]   --->   Operation 111 'bitselect' 'tmp_104' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 112 [1/1] (0.00ns) (grouped into LUT with out node tmp_105)   --->   "%xor_ln841_4 = xor i1 %and_ln1355_4, %tmp_104" [cpp/accel/Accel.cpp:81]   --->   Operation 112 'xor' 'xor_ln841_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 113 [1/1] (0.62ns) (out node of the LUT)   --->   "%tmp_105 = call i2 @_ssdm_op_BitSet.i2.i2.i32.i1(i2 %line_buffer_m_V_load_4, i32 1, i1 %xor_ln841_4)" [cpp/accel/Accel.cpp:81]   --->   Operation 113 'bitset' 'tmp_105' <Predicate = true> <Delay = 0.62>
ST_4 : Operation 114 [1/1] (0.00ns) (grouped into LUT with out node add_ln700_5)   --->   "%sext_ln79_2 = sext i2 %tmp_105 to i3" [cpp/accel/Accel.cpp:79]   --->   Operation 114 'sext' 'sext_ln79_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 115 [1/2] (2.66ns)   --->   "%line_buffer_m_V_load_5 = load i2* %line_buffer_m_V_addr_7, align 1" [cpp/accel/Accel.cpp:79]   --->   Operation 115 'load' 'line_buffer_m_V_load_5' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 800> <RAM>
ST_4 : Operation 116 [1/1] (0.00ns) (grouped into LUT with out node tmp_107)   --->   "%trunc_ln215_5 = trunc i2 %line_buffer_m_V_load_5 to i1" [cpp/accel/Accel.cpp:81]   --->   Operation 116 'trunc' 'trunc_ln215_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node tmp_107)   --->   "%select_ln215_5 = select i1 %conv_params_m_V_offs, i1 %conv_params_m_1_0_11, i1 %conv_params_m_1_0_12" [cpp/accel/Accel.cpp:81]   --->   Operation 117 'select' 'select_ln215_5' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node tmp_107)   --->   "%and_ln1355_5 = and i1 %trunc_ln215_5, %select_ln215_5" [cpp/accel/Accel.cpp:81]   --->   Operation 118 'and' 'and_ln1355_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node tmp_107)   --->   "%tmp_106 = call i1 @_ssdm_op_BitSelect.i1.i2.i32(i2 %line_buffer_m_V_load_5, i32 1)" [cpp/accel/Accel.cpp:81]   --->   Operation 119 'bitselect' 'tmp_106' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 120 [1/1] (0.00ns) (grouped into LUT with out node tmp_107)   --->   "%xor_ln841_5 = xor i1 %and_ln1355_5, %tmp_106" [cpp/accel/Accel.cpp:81]   --->   Operation 120 'xor' 'xor_ln841_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 121 [1/1] (0.62ns) (out node of the LUT)   --->   "%tmp_107 = call i2 @_ssdm_op_BitSet.i2.i2.i32.i1(i2 %line_buffer_m_V_load_5, i32 1, i1 %xor_ln841_5)" [cpp/accel/Accel.cpp:81]   --->   Operation 121 'bitset' 'tmp_107' <Predicate = true> <Delay = 0.62>
ST_4 : Operation 122 [1/1] (0.00ns) (grouped into LUT with out node add_ln700_5)   --->   "%sext_ln79_3 = sext i2 %tmp_107 to i3" [cpp/accel/Accel.cpp:79]   --->   Operation 122 'sext' 'sext_ln79_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 123 [2/2] (2.66ns)   --->   "%line_buffer_m_V_load_6 = load i2* %line_buffer_m_V_addr_2, align 1" [cpp/accel/Accel.cpp:79]   --->   Operation 123 'load' 'line_buffer_m_V_load_6' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 800> <RAM>
ST_4 : Operation 124 [2/2] (2.66ns)   --->   "%line_buffer_m_V_load_7 = load i2* %line_buffer_m_V_addr_5, align 1" [cpp/accel/Accel.cpp:79]   --->   Operation 124 'load' 'line_buffer_m_V_load_7' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 800> <RAM>
ST_4 : Operation 125 [1/1] (1.00ns) (out node of the LUT)   --->   "%add_ln700_5 = add i3 %sext_ln79_2, %sext_ln79_3" [cpp/accel/Accel.cpp:82]   --->   Operation 125 'add' 'add_ln700_5' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 3.28>
ST_5 : Operation 126 [1/1] (0.00ns)   --->   "%conv_params_m_0_2_11 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_0_2_10)" [cpp/accel/Accel.cpp:79]   --->   Operation 126 'read' 'conv_params_m_0_2_11' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 127 [1/1] (0.00ns)   --->   "%conv_params_m_0_2_12 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_0_2_s)" [cpp/accel/Accel.cpp:79]   --->   Operation 127 'read' 'conv_params_m_0_2_12' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 128 [1/1] (0.00ns)   --->   "%conv_params_m_0_1_11 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_0_1_10)" [cpp/accel/Accel.cpp:79]   --->   Operation 128 'read' 'conv_params_m_0_1_11' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 129 [1/1] (0.00ns)   --->   "%conv_params_m_0_1_12 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_0_1_s)" [cpp/accel/Accel.cpp:79]   --->   Operation 129 'read' 'conv_params_m_0_1_12' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 130 [1/1] (0.00ns)   --->   "%conv_params_m_0_0_11 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_0_0_10)" [cpp/accel/Accel.cpp:79]   --->   Operation 130 'read' 'conv_params_m_0_0_11' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 131 [1/1] (0.00ns)   --->   "%conv_params_m_0_0_12 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %conv_params_m_0_0_s)" [cpp/accel/Accel.cpp:79]   --->   Operation 131 'read' 'conv_params_m_0_0_12' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 132 [1/1] (0.00ns)   --->   "%zext_ln79_14 = zext i11 %add_ln79_11 to i64" [cpp/accel/Accel.cpp:79]   --->   Operation 132 'zext' 'zext_ln79_14' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 133 [1/1] (0.00ns)   --->   "%line_buffer_m_V_addr_8 = getelementptr [800 x i2]* %line_buffer_m_V, i64 0, i64 %zext_ln79_14" [cpp/accel/Accel.cpp:79]   --->   Operation 133 'getelementptr' 'line_buffer_m_V_addr_8' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 134 [1/2] (2.66ns)   --->   "%line_buffer_m_V_load_6 = load i2* %line_buffer_m_V_addr_2, align 1" [cpp/accel/Accel.cpp:79]   --->   Operation 134 'load' 'line_buffer_m_V_load_6' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 800> <RAM>
ST_5 : Operation 135 [1/1] (0.00ns) (grouped into LUT with out node tmp_109)   --->   "%trunc_ln215_6 = trunc i2 %line_buffer_m_V_load_6 to i1" [cpp/accel/Accel.cpp:81]   --->   Operation 135 'trunc' 'trunc_ln215_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 136 [1/1] (0.00ns) (grouped into LUT with out node tmp_109)   --->   "%select_ln215_6 = select i1 %conv_params_m_V_offs, i1 %conv_params_m_0_2_11, i1 %conv_params_m_0_2_12" [cpp/accel/Accel.cpp:81]   --->   Operation 136 'select' 'select_ln215_6' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 137 [1/1] (0.00ns) (grouped into LUT with out node tmp_109)   --->   "%and_ln1355_6 = and i1 %trunc_ln215_6, %select_ln215_6" [cpp/accel/Accel.cpp:81]   --->   Operation 137 'and' 'and_ln1355_6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 138 [1/1] (0.00ns) (grouped into LUT with out node tmp_109)   --->   "%tmp_108 = call i1 @_ssdm_op_BitSelect.i1.i2.i32(i2 %line_buffer_m_V_load_6, i32 1)" [cpp/accel/Accel.cpp:81]   --->   Operation 138 'bitselect' 'tmp_108' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 139 [1/1] (0.00ns) (grouped into LUT with out node tmp_109)   --->   "%xor_ln841_6 = xor i1 %and_ln1355_6, %tmp_108" [cpp/accel/Accel.cpp:81]   --->   Operation 139 'xor' 'xor_ln841_6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 140 [1/1] (0.62ns) (out node of the LUT)   --->   "%tmp_109 = call i2 @_ssdm_op_BitSet.i2.i2.i32.i1(i2 %line_buffer_m_V_load_6, i32 1, i1 %xor_ln841_6)" [cpp/accel/Accel.cpp:81]   --->   Operation 140 'bitset' 'tmp_109' <Predicate = true> <Delay = 0.62>
ST_5 : Operation 141 [1/2] (2.66ns)   --->   "%line_buffer_m_V_load_7 = load i2* %line_buffer_m_V_addr_5, align 1" [cpp/accel/Accel.cpp:79]   --->   Operation 141 'load' 'line_buffer_m_V_load_7' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 800> <RAM>
ST_5 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node tmp_111)   --->   "%trunc_ln215_7 = trunc i2 %line_buffer_m_V_load_7 to i1" [cpp/accel/Accel.cpp:81]   --->   Operation 142 'trunc' 'trunc_ln215_7' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 143 [1/1] (0.00ns) (grouped into LUT with out node tmp_111)   --->   "%select_ln215_7 = select i1 %conv_params_m_V_offs, i1 %conv_params_m_0_1_11, i1 %conv_params_m_0_1_12" [cpp/accel/Accel.cpp:81]   --->   Operation 143 'select' 'select_ln215_7' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node tmp_111)   --->   "%and_ln1355_7 = and i1 %trunc_ln215_7, %select_ln215_7" [cpp/accel/Accel.cpp:81]   --->   Operation 144 'and' 'and_ln1355_7' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node tmp_111)   --->   "%tmp_110 = call i1 @_ssdm_op_BitSelect.i1.i2.i32(i2 %line_buffer_m_V_load_7, i32 1)" [cpp/accel/Accel.cpp:81]   --->   Operation 145 'bitselect' 'tmp_110' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 146 [1/1] (0.00ns) (grouped into LUT with out node tmp_111)   --->   "%xor_ln841_7 = xor i1 %and_ln1355_7, %tmp_110" [cpp/accel/Accel.cpp:81]   --->   Operation 146 'xor' 'xor_ln841_7' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 147 [1/1] (0.62ns) (out node of the LUT)   --->   "%tmp_111 = call i2 @_ssdm_op_BitSet.i2.i2.i32.i1(i2 %line_buffer_m_V_load_7, i32 1, i1 %xor_ln841_7)" [cpp/accel/Accel.cpp:81]   --->   Operation 147 'bitset' 'tmp_111' <Predicate = true> <Delay = 0.62>
ST_5 : Operation 148 [2/2] (2.66ns)   --->   "%line_buffer_m_V_load_8 = load i2* %line_buffer_m_V_addr_8, align 1" [cpp/accel/Accel.cpp:79]   --->   Operation 148 'load' 'line_buffer_m_V_load_8' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 800> <RAM>

State 6 <SV = 5> <Delay = 7.65>
ST_6 : Operation 149 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str9140) nounwind" [cpp/accel/Accel.cpp:74]   --->   Operation 149 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 150 [1/1] (0.00ns) (grouped into LUT with out node add_ln700_7)   --->   "%sext_ln79_4 = sext i2 %tmp_109 to i4" [cpp/accel/Accel.cpp:79]   --->   Operation 150 'sext' 'sext_ln79_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 151 [1/1] (0.00ns) (grouped into LUT with out node add_ln700_6)   --->   "%sext_ln79_5 = sext i2 %tmp_111 to i3" [cpp/accel/Accel.cpp:79]   --->   Operation 151 'sext' 'sext_ln79_5' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 152 [1/2] (2.66ns)   --->   "%line_buffer_m_V_load_8 = load i2* %line_buffer_m_V_addr_8, align 1" [cpp/accel/Accel.cpp:79]   --->   Operation 152 'load' 'line_buffer_m_V_load_8' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 800> <RAM>
ST_6 : Operation 153 [1/1] (0.00ns) (grouped into LUT with out node tmp_113)   --->   "%trunc_ln215_8 = trunc i2 %line_buffer_m_V_load_8 to i1" [cpp/accel/Accel.cpp:81]   --->   Operation 153 'trunc' 'trunc_ln215_8' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 154 [1/1] (0.00ns) (grouped into LUT with out node tmp_113)   --->   "%select_ln215_8 = select i1 %conv_params_m_V_offs, i1 %conv_params_m_0_0_11, i1 %conv_params_m_0_0_12" [cpp/accel/Accel.cpp:81]   --->   Operation 154 'select' 'select_ln215_8' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 155 [1/1] (0.00ns) (grouped into LUT with out node tmp_113)   --->   "%and_ln1355_8 = and i1 %trunc_ln215_8, %select_ln215_8" [cpp/accel/Accel.cpp:81]   --->   Operation 155 'and' 'and_ln1355_8' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 156 [1/1] (0.00ns) (grouped into LUT with out node tmp_113)   --->   "%tmp_112 = call i1 @_ssdm_op_BitSelect.i1.i2.i32(i2 %line_buffer_m_V_load_8, i32 1)" [cpp/accel/Accel.cpp:81]   --->   Operation 156 'bitselect' 'tmp_112' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node tmp_113)   --->   "%xor_ln841_8 = xor i1 %and_ln1355_8, %tmp_112" [cpp/accel/Accel.cpp:81]   --->   Operation 157 'xor' 'xor_ln841_8' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 158 [1/1] (0.62ns) (out node of the LUT)   --->   "%tmp_113 = call i2 @_ssdm_op_BitSet.i2.i2.i32.i1(i2 %line_buffer_m_V_load_8, i32 1, i1 %xor_ln841_8)" [cpp/accel/Accel.cpp:81]   --->   Operation 158 'bitset' 'tmp_113' <Predicate = true> <Delay = 0.62>
ST_6 : Operation 159 [1/1] (0.00ns) (grouped into LUT with out node add_ln700_6)   --->   "%sext_ln700 = sext i2 %tmp_113 to i3" [cpp/accel/Accel.cpp:82]   --->   Operation 159 'sext' 'sext_ln700' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 160 [1/1] (0.00ns)   --->   "%sext_ln700_3 = sext i4 %add_ln700_4 to i5" [cpp/accel/Accel.cpp:82]   --->   Operation 160 'sext' 'sext_ln700_3' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 161 [1/1] (0.00ns)   --->   "%sext_ln700_4 = sext i3 %add_ln700_5 to i5" [cpp/accel/Accel.cpp:82]   --->   Operation 161 'sext' 'sext_ln700_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 162 [1/1] (1.00ns) (out node of the LUT)   --->   "%add_ln700_6 = add i3 %sext_ln79_5, %sext_ln700" [cpp/accel/Accel.cpp:82]   --->   Operation 162 'add' 'add_ln700_6' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 163 [1/1] (0.00ns) (grouped into LUT with out node add_ln700_7)   --->   "%sext_ln700_5 = sext i3 %add_ln700_6 to i4" [cpp/accel/Accel.cpp:82]   --->   Operation 163 'sext' 'sext_ln700_5' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 164 [1/1] (1.16ns) (out node of the LUT)   --->   "%add_ln700_7 = add i4 %sext_ln700_5, %sext_ln79_4" [cpp/accel/Accel.cpp:82]   --->   Operation 164 'add' 'add_ln700_7' <Predicate = true> <Delay = 1.16> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 165 [1/1] (0.00ns)   --->   "%sext_ln700_6 = sext i4 %add_ln700_7 to i5" [cpp/accel/Accel.cpp:82]   --->   Operation 165 'sext' 'sext_ln700_6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 166 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln700_8 = add i5 %sext_ln700_6, %sext_ln700_4" [cpp/accel/Accel.cpp:82]   --->   Operation 166 'add' 'add_ln700_8' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.10> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 167 [1/1] (2.20ns) (root node of TernaryAdder)   --->   "%add_ln700_9 = add i5 %add_ln700_8, %sext_ln700_3" [cpp/accel/Accel.cpp:82]   --->   Operation 167 'add' 'add_ln700_9' <Predicate = true> <Delay = 2.20> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.10> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 168 [1/1] (0.00ns)   --->   "ret i5 %add_ln700_9" [cpp/accel/Accel.cpp:85]   --->   Operation 168 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 25ns, clock uncertainty: 3.12ns.

 <State 1>: 6.83ns
The critical path consists of the following:
	wire read on port 'bank_V' (cpp/accel/Accel.cpp:79) [25]  (0 ns)
	'add' operation ('add_ln79', cpp/accel/Accel.cpp:79) [50]  (1.32 ns)
	'sub' operation ('sub_ln79', cpp/accel/Accel.cpp:79) [55]  (1.42 ns)
	'add' operation ('add_ln79_3', cpp/accel/Accel.cpp:79) [59]  (1.43 ns)
	'getelementptr' operation ('line_buffer_m_V_addr', cpp/accel/Accel.cpp:79) [61]  (0 ns)
	'load' operation ('line_buffer_m_V_load', cpp/accel/Accel.cpp:79) on array 'line_buffer_m_V' [68]  (2.66 ns)

 <State 2>: 5.52ns
The critical path consists of the following:
	'add' operation ('add_ln79_1', cpp/accel/Accel.cpp:79) [56]  (1.43 ns)
	'add' operation ('add_ln79_4', cpp/accel/Accel.cpp:79) [62]  (1.43 ns)
	'getelementptr' operation ('line_buffer_m_V_addr_1', cpp/accel/Accel.cpp:79) [64]  (0 ns)
	'load' operation ('line_buffer_m_V_load_3', cpp/accel/Accel.cpp:79) on array 'line_buffer_m_V' [114]  (2.66 ns)

 <State 3>: 5.45ns
The critical path consists of the following:
	'load' operation ('line_buffer_m_V_load_2', cpp/accel/Accel.cpp:79) on array 'line_buffer_m_V' [106]  (2.66 ns)
	'add' operation ('add_ln700_3', cpp/accel/Accel.cpp:82) [164]  (1 ns)
	'add' operation ('add_ln700_4', cpp/accel/Accel.cpp:82) [166]  (1.16 ns)
	blocking operation 0.62 ns on control path)

 <State 4>: 4.29ns
The critical path consists of the following:
	'load' operation ('line_buffer_m_V_load_4', cpp/accel/Accel.cpp:79) on array 'line_buffer_m_V' [122]  (2.66 ns)
	'add' operation ('add_ln700_5', cpp/accel/Accel.cpp:82) [168]  (1 ns)
	blocking operation 0.62 ns on control path)

 <State 5>: 3.28ns
The critical path consists of the following:
	'load' operation ('line_buffer_m_V_load_6', cpp/accel/Accel.cpp:79) on array 'line_buffer_m_V' [138]  (2.66 ns)
	blocking operation 0.62 ns on control path)

 <State 6>: 7.65ns
The critical path consists of the following:
	'load' operation ('line_buffer_m_V_load_8', cpp/accel/Accel.cpp:79) on array 'line_buffer_m_V' [154]  (2.66 ns)
	'add' operation ('add_ln700_6', cpp/accel/Accel.cpp:82) [170]  (1 ns)
	'add' operation ('add_ln700_7', cpp/accel/Accel.cpp:82) [172]  (1.16 ns)
	'add' operation ('add_ln700_8', cpp/accel/Accel.cpp:82) [174]  (0 ns)
	'add' operation ('add_ln700_9', cpp/accel/Accel.cpp:82) [175]  (2.2 ns)
	blocking operation 0.62 ns on control path)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
