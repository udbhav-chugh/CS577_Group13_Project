

================================================================
== Vivado HLS Report for 'conv_word'
================================================================
* Date:           Sun Mar 28 12:14:23 2021

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        BNN_6
* Solution:       solution1
* Product family: kintex7
* Target device:  xc7k70t-fbv676-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  12.00|     4.361|        1.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  1681|  1681|  1681|  1681|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+------+------+----------+-----------+-----------+------+----------+
        |                     |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name      |  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------+------+------+----------+-----------+-----------+------+----------+
        |- Loop 1             |  1680|  1680|       210|          -|          -|     8|    no    |
        | + Loop 1.1          |   208|   208|        26|          -|          -|     8|    no    |
        |  ++ Loop 1.1.1      |    24|    24|         8|          -|          -|     3|    no    |
        |   +++ Loop 1.1.1.1  |     6|     6|         2|          -|          -|     3|    no    |
        +---------------------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 2 
4 --> 5 3 
5 --> 6 4 
6 --> 5 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.06>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%line_buffer_m_V_offs = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %line_buffer_m_V_offset)" [cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89]   --->   Operation 7 'read' 'line_buffer_m_V_offs' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%tmp = call i4 @_ssdm_op_BitConcatenate.i4.i1.i3(i1 %line_buffer_m_V_offs, i3 0)" [cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89]   --->   Operation 8 'bitconcatenate' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%zext_ln215_3 = zext i4 %tmp to i5" [cpp/accel/Accel.cpp:71->cpp/accel/Accel.cpp:89]   --->   Operation 9 'zext' 'zext_ln215_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.65ns)   --->   "%select_ln215 = select i1 %line_buffer_m_V_offs, i4 3, i4 0" [cpp/accel/Accel.cpp:71->cpp/accel/Accel.cpp:89]   --->   Operation 10 'select' 'select_ln215' <Predicate = true> <Delay = 0.65> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 11 [1/1] (1.06ns)   --->   "br label %.loopexit7" [cpp/accel/Accel.cpp:86]   --->   Operation 11 'br' <Predicate = true> <Delay = 1.06>

State 2 <SV = 1> <Delay = 2.69>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%p_0 = phi i4 [ 0, %0 ], [ %bank_V, %.loopexit7.loopexit ]"   --->   Operation 12 'phi' 'p_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (1.08ns)   --->   "%icmp_ln86 = icmp eq i4 %p_0, -8" [cpp/accel/Accel.cpp:86]   --->   Operation 13 'icmp' 'icmp_ln86' <Predicate = true> <Delay = 1.08> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 14 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (1.32ns)   --->   "%bank_V = add i4 %p_0, 1" [cpp/accel/Accel.cpp:86]   --->   Operation 15 'add' 'bank_V' <Predicate = true> <Delay = 1.32> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "br i1 %icmp_ln86, label %3, label %.preheader.preheader" [cpp/accel/Accel.cpp:86]   --->   Operation 16 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%trunc_ln1352 = trunc i4 %p_0 to i3" [cpp/accel/Accel.cpp:89]   --->   Operation 17 'trunc' 'trunc_ln1352' <Predicate = (!icmp_ln86)> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%ret_V = call i6 @_ssdm_op_BitConcatenate.i6.i3.i3(i3 %trunc_ln1352, i3 0)" [cpp/accel/Accel.cpp:89]   --->   Operation 18 'bitconcatenate' 'ret_V' <Predicate = (!icmp_ln86)> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%zext_ln69 = zext i4 %p_0 to i5" [cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89]   --->   Operation 19 'zext' 'zext_ln69' <Predicate = (!icmp_ln86)> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (1.32ns)   --->   "%add_ln69 = add i5 %zext_ln69, %zext_ln215_3" [cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89]   --->   Operation 20 'add' 'add_ln69' <Predicate = (!icmp_ln86)> <Delay = 1.32> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%zext_ln69_1 = zext i5 %add_ln69 to i64" [cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89]   --->   Operation 21 'zext' 'zext_ln69_1' <Predicate = (!icmp_ln86)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%tmp_16 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %add_ln69, i2 0)" [cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89]   --->   Operation 22 'bitconcatenate' 'tmp_16' <Predicate = (!icmp_ln86)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%zext_ln69_2 = zext i7 %tmp_16 to i64" [cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89]   --->   Operation 23 'zext' 'zext_ln69_2' <Predicate = (!icmp_ln86)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (1.37ns)   --->   "%sub_ln69 = sub i64 %zext_ln69_2, %zext_ln69_1" [cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89]   --->   Operation 24 'sub' 'sub_ln69' <Predicate = (!icmp_ln86)> <Delay = 1.37> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (1.06ns)   --->   "br label %.preheader" [cpp/accel/Accel.cpp:87]   --->   Operation 25 'br' <Predicate = (!icmp_ln86)> <Delay = 1.06>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "ret void" [cpp/accel/Accel.cpp:92]   --->   Operation 26 'ret' <Predicate = (icmp_ln86)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.35>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%p_084_0 = phi i4 [ %cc_V, %conv3x3b.exit ], [ 0, %.preheader.preheader ]"   --->   Operation 27 'phi' 'p_084_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (1.08ns)   --->   "%icmp_ln87 = icmp eq i4 %p_084_0, -8" [cpp/accel/Accel.cpp:87]   --->   Operation 28 'icmp' 'icmp_ln87' <Predicate = true> <Delay = 1.08> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%empty_37 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 29 'speclooptripcount' 'empty_37' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (1.32ns)   --->   "%cc_V = add i4 %p_084_0, 1" [cpp/accel/Accel.cpp:87]   --->   Operation 30 'add' 'cc_V' <Predicate = true> <Delay = 1.32> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "br i1 %icmp_ln87, label %.loopexit7.loopexit, label %1" [cpp/accel/Accel.cpp:87]   --->   Operation 31 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%zext_ln215 = zext i4 %p_084_0 to i6" [cpp/accel/Accel.cpp:89]   --->   Operation 32 'zext' 'zext_ln215' <Predicate = (!icmp_ln87)> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (1.35ns)   --->   "%ret_V_11 = add i6 %ret_V, %zext_ln215" [cpp/accel/Accel.cpp:89]   --->   Operation 33 'add' 'ret_V_11' <Predicate = (!icmp_ln87)> <Delay = 1.35> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%tmp_s = call i7 @_ssdm_op_BitConcatenate.i7.i1.i6(i1 %line_buffer_m_V_offs, i6 %ret_V_11)" [cpp/accel/Accel.cpp:89]   --->   Operation 34 'bitconcatenate' 'tmp_s' <Predicate = (!icmp_ln87)> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln180 = zext i7 %tmp_s to i64" [cpp/accel/Accel.cpp:89]   --->   Operation 35 'zext' 'zext_ln180' <Predicate = (!icmp_ln87)> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%conv_out_buffer_m_V_s = getelementptr [128 x i5]* %conv_out_buffer_m_V, i64 0, i64 %zext_ln180" [cpp/accel/Accel.cpp:89]   --->   Operation 36 'getelementptr' 'conv_out_buffer_m_V_s' <Predicate = (!icmp_ln87)> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (1.06ns)   --->   "br label %.loopexit" [cpp/accel/Accel.cpp:66->cpp/accel/Accel.cpp:89]   --->   Operation 37 'br' <Predicate = (!icmp_ln87)> <Delay = 1.06>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "br label %.loopexit7"   --->   Operation 38 'br' <Predicate = (icmp_ln87)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 3.68>
ST_4 : Operation 39 [1/1] (0.00ns)   --->   "%agg_result_V_0_i = phi i5 [ 0, %1 ], [ %agg_result_V_1_i, %.loopexit.loopexit ]" [cpp/accel/Accel.cpp:72->cpp/accel/Accel.cpp:89]   --->   Operation 39 'phi' 'agg_result_V_0_i' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 40 [1/1] (0.00ns)   --->   "%agg_result_V_load1_i = phi i5 [ 0, %1 ], [ %agg_result_V_load_i, %.loopexit.loopexit ]" [cpp/accel/Accel.cpp:72->cpp/accel/Accel.cpp:89]   --->   Operation 40 'phi' 'agg_result_V_load1_i' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 41 [1/1] (0.00ns)   --->   "%p_097_0_i = phi i2 [ 0, %1 ], [ %kr_V, %.loopexit.loopexit ]"   --->   Operation 41 'phi' 'p_097_0_i' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 42 [1/1] (0.64ns)   --->   "%icmp_ln887 = icmp eq i2 %p_097_0_i, -1" [cpp/accel/Accel.cpp:66->cpp/accel/Accel.cpp:89]   --->   Operation 42 'icmp' 'icmp_ln887' <Predicate = true> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 43 [1/1] (0.00ns)   --->   "%empty_38 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)"   --->   Operation 43 'speclooptripcount' 'empty_38' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 44 [1/1] (1.00ns)   --->   "%kr_V = add i2 %p_097_0_i, 1" [cpp/accel/Accel.cpp:66->cpp/accel/Accel.cpp:89]   --->   Operation 44 'add' 'kr_V' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "br i1 %icmp_ln887, label %conv3x3b.exit, label %.preheader.preheader.i" [cpp/accel/Accel.cpp:66->cpp/accel/Accel.cpp:89]   --->   Operation 45 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "%zext_ln544 = zext i2 %p_097_0_i to i64" [cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89]   --->   Operation 46 'zext' 'zext_ln544' <Predicate = (!icmp_ln887)> <Delay = 0.00>
ST_4 : Operation 47 [1/1] (1.39ns)   --->   "%add_ln69_1 = add i64 %zext_ln544, %sub_ln69" [cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89]   --->   Operation 47 'add' 'add_ln69_1' <Predicate = (!icmp_ln887)> <Delay = 1.39> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "%trunc_ln69 = trunc i64 %add_ln69_1 to i7" [cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89]   --->   Operation 48 'trunc' 'trunc_ln69' <Predicate = (!icmp_ln887)> <Delay = 0.00>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%p_shl2_cast = call i10 @_ssdm_op_BitConcatenate.i10.i7.i3(i7 %trunc_ln69, i3 0)" [cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89]   --->   Operation 49 'bitconcatenate' 'p_shl2_cast' <Predicate = (!icmp_ln887)> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%trunc_ln69_1 = trunc i64 %add_ln69_1 to i9" [cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89]   --->   Operation 50 'trunc' 'trunc_ln69_1' <Predicate = (!icmp_ln887)> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%p_shl3_cast = call i10 @_ssdm_op_BitConcatenate.i10.i9.i1(i9 %trunc_ln69_1, i1 false)" [cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89]   --->   Operation 51 'bitconcatenate' 'p_shl3_cast' <Predicate = (!icmp_ln887)> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (1.41ns)   --->   "%add_ln69_2 = add i10 %p_shl2_cast, %p_shl3_cast" [cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89]   --->   Operation 52 'add' 'add_ln69_2' <Predicate = (!icmp_ln887)> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln1354 = zext i2 %p_097_0_i to i3" [cpp/accel/Accel.cpp:70->cpp/accel/Accel.cpp:89]   --->   Operation 53 'zext' 'zext_ln1354' <Predicate = (!icmp_ln887)> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (1.16ns)   --->   "%ret_V_14 = sub i3 2, %zext_ln1354" [cpp/accel/Accel.cpp:70->cpp/accel/Accel.cpp:89]   --->   Operation 54 'sub' 'ret_V_14' <Predicate = (!icmp_ln887)> <Delay = 1.16> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%sext_ln215 = sext i3 %ret_V_14 to i4" [cpp/accel/Accel.cpp:71->cpp/accel/Accel.cpp:89]   --->   Operation 55 'sext' 'sext_ln215' <Predicate = (!icmp_ln887)> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (1.16ns)   --->   "%add_ln215 = add i4 %sext_ln215, %select_ln215" [cpp/accel/Accel.cpp:71->cpp/accel/Accel.cpp:89]   --->   Operation 56 'add' 'add_ln215' <Predicate = (!icmp_ln887)> <Delay = 1.16> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%sext_ln215_1 = sext i4 %add_ln215 to i6" [cpp/accel/Accel.cpp:71->cpp/accel/Accel.cpp:89]   --->   Operation 57 'sext' 'sext_ln215_1' <Predicate = (!icmp_ln887)> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%p_shl1_cast = call i6 @_ssdm_op_BitConcatenate.i6.i4.i2(i4 %add_ln215, i2 0)" [cpp/accel/Accel.cpp:71->cpp/accel/Accel.cpp:89]   --->   Operation 58 'bitconcatenate' 'p_shl1_cast' <Predicate = (!icmp_ln887)> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (1.35ns)   --->   "%sub_ln215 = sub i6 %p_shl1_cast, %sext_ln215_1" [cpp/accel/Accel.cpp:71->cpp/accel/Accel.cpp:89]   --->   Operation 59 'sub' 'sub_ln215' <Predicate = (!icmp_ln887)> <Delay = 1.35> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 60 [1/1] (1.06ns)   --->   "br label %.preheader.i" [cpp/accel/Accel.cpp:67->cpp/accel/Accel.cpp:89]   --->   Operation 60 'br' <Predicate = (!icmp_ln887)> <Delay = 1.06>
ST_4 : Operation 61 [1/1] (1.47ns)   --->   "store i5 %agg_result_V_0_i, i5* %conv_out_buffer_m_V_s, align 1" [cpp/accel/Accel.cpp:89]   --->   Operation 61 'store' <Predicate = (icmp_ln887)> <Delay = 1.47> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.47> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 5> <Depth = 128> <RAM>
ST_4 : Operation 62 [1/1] (0.00ns)   --->   "br label %.preheader" [cpp/accel/Accel.cpp:87]   --->   Operation 62 'br' <Predicate = (icmp_ln887)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 4.36>
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "%agg_result_V_1_i = phi i5 [ %agg_result_V_0_i, %.preheader.preheader.i ], [ %sum_V, %2 ]"   --->   Operation 63 'phi' 'agg_result_V_1_i' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "%agg_result_V_load_i = phi i5 [ %agg_result_V_load1_i, %.preheader.preheader.i ], [ %sum_V, %2 ]"   --->   Operation 64 'phi' 'agg_result_V_load_i' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 65 [1/1] (0.00ns)   --->   "%p_087_0_i = phi i2 [ 0, %.preheader.preheader.i ], [ %kc_V, %2 ]"   --->   Operation 65 'phi' 'p_087_0_i' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 66 [1/1] (0.64ns)   --->   "%icmp_ln887_3 = icmp eq i2 %p_087_0_i, -1" [cpp/accel/Accel.cpp:67->cpp/accel/Accel.cpp:89]   --->   Operation 66 'icmp' 'icmp_ln887_3' <Predicate = true> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 67 [1/1] (0.00ns)   --->   "%empty_39 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)"   --->   Operation 67 'speclooptripcount' 'empty_39' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 68 [1/1] (1.00ns)   --->   "%kc_V = add i2 %p_087_0_i, 1" [cpp/accel/Accel.cpp:67->cpp/accel/Accel.cpp:89]   --->   Operation 68 'add' 'kc_V' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 69 [1/1] (0.00ns)   --->   "br i1 %icmp_ln887_3, label %.loopexit.loopexit, label %2" [cpp/accel/Accel.cpp:67->cpp/accel/Accel.cpp:89]   --->   Operation 69 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 70 [1/1] (0.00ns)   --->   "%zext_ln215_1 = zext i2 %p_087_0_i to i4" [cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89]   --->   Operation 70 'zext' 'zext_ln215_1' <Predicate = (!icmp_ln887_3)> <Delay = 0.00>
ST_5 : Operation 71 [1/1] (1.32ns)   --->   "%ret_V_12 = add i4 %p_084_0, %zext_ln215_1" [cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89]   --->   Operation 71 'add' 'ret_V_12' <Predicate = (!icmp_ln887_3)> <Delay = 1.32> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 72 [1/1] (0.00ns)   --->   "%zext_ln69_3 = zext i4 %ret_V_12 to i10" [cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89]   --->   Operation 72 'zext' 'zext_ln69_3' <Predicate = (!icmp_ln887_3)> <Delay = 0.00>
ST_5 : Operation 73 [1/1] (1.41ns)   --->   "%add_ln69_3 = add i10 %zext_ln69_3, %add_ln69_2" [cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89]   --->   Operation 73 'add' 'add_ln69_3' <Predicate = (!icmp_ln887_3)> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 74 [1/1] (0.00ns)   --->   "%zext_ln69_4 = zext i10 %add_ln69_3 to i64" [cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89]   --->   Operation 74 'zext' 'zext_ln69_4' <Predicate = (!icmp_ln887_3)> <Delay = 0.00>
ST_5 : Operation 75 [1/1] (0.00ns)   --->   "%line_buffer_m_V_addr = getelementptr [480 x i2]* %line_buffer_m_V, i64 0, i64 %zext_ln69_4" [cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89]   --->   Operation 75 'getelementptr' 'line_buffer_m_V_addr' <Predicate = (!icmp_ln887_3)> <Delay = 0.00>
ST_5 : Operation 76 [2/2] (1.62ns)   --->   "%data_V_1 = load i2* %line_buffer_m_V_addr, align 1" [cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89]   --->   Operation 76 'load' 'data_V_1' <Predicate = (!icmp_ln887_3)> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.47> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 5> <Depth = 128> <RAM>
ST_5 : Operation 77 [1/1] (0.00ns)   --->   "%zext_ln215_2 = zext i2 %p_087_0_i to i3" [cpp/accel/Accel.cpp:70->cpp/accel/Accel.cpp:89]   --->   Operation 77 'zext' 'zext_ln215_2' <Predicate = (!icmp_ln887_3)> <Delay = 0.00>
ST_5 : Operation 78 [1/1] (1.16ns)   --->   "%ret_V_13 = sub i3 2, %zext_ln215_2" [cpp/accel/Accel.cpp:70->cpp/accel/Accel.cpp:89]   --->   Operation 78 'sub' 'ret_V_13' <Predicate = (!icmp_ln887_3)> <Delay = 1.16> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 79 [1/1] (0.00ns)   --->   "%sext_ln215_2 = sext i3 %ret_V_13 to i6" [cpp/accel/Accel.cpp:71->cpp/accel/Accel.cpp:89]   --->   Operation 79 'sext' 'sext_ln215_2' <Predicate = (!icmp_ln887_3)> <Delay = 0.00>
ST_5 : Operation 80 [1/1] (1.35ns)   --->   "%add_ln215_1 = add i6 %sext_ln215_2, %sub_ln215" [cpp/accel/Accel.cpp:71->cpp/accel/Accel.cpp:89]   --->   Operation 80 'add' 'add_ln215_1' <Predicate = (!icmp_ln887_3)> <Delay = 1.35> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 81 [1/1] (0.00ns)   --->   "%zext_ln215_4 = zext i6 %add_ln215_1 to i64" [cpp/accel/Accel.cpp:71->cpp/accel/Accel.cpp:89]   --->   Operation 81 'zext' 'zext_ln215_4' <Predicate = (!icmp_ln887_3)> <Delay = 0.00>
ST_5 : Operation 82 [1/1] (0.00ns)   --->   "%conv_params_m_V_addr = getelementptr [18 x i1]* %conv_params_m_V, i64 0, i64 %zext_ln215_4" [cpp/accel/Accel.cpp:71->cpp/accel/Accel.cpp:89]   --->   Operation 82 'getelementptr' 'conv_params_m_V_addr' <Predicate = (!icmp_ln887_3)> <Delay = 0.00>
ST_5 : Operation 83 [2/2] (1.42ns)   --->   "%conv_params_m_V_load = load i1* %conv_params_m_V_addr, align 1" [cpp/accel/Accel.cpp:71->cpp/accel/Accel.cpp:89]   --->   Operation 83 'load' 'conv_params_m_V_load' <Predicate = (!icmp_ln887_3)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.47> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 5> <Depth = 128> <RAM>
ST_5 : Operation 84 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 84 'br' <Predicate = (icmp_ln887_3)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 2.96>
ST_6 : Operation 85 [1/2] (1.62ns)   --->   "%data_V_1 = load i2* %line_buffer_m_V_addr, align 1" [cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89]   --->   Operation 85 'load' 'data_V_1' <Predicate = true> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.47> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 5> <Depth = 128> <RAM>
ST_6 : Operation 86 [1/1] (0.00ns) (grouped into LUT with out node sum_V)   --->   "%trunc_ln69_2 = trunc i2 %data_V_1 to i1" [cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89]   --->   Operation 86 'trunc' 'trunc_ln69_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 87 [1/2] (1.42ns)   --->   "%conv_params_m_V_load = load i1* %conv_params_m_V_addr, align 1" [cpp/accel/Accel.cpp:71->cpp/accel/Accel.cpp:89]   --->   Operation 87 'load' 'conv_params_m_V_load' <Predicate = true> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.47> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 5> <Depth = 128> <RAM>
ST_6 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node sum_V)   --->   "%ret_V_16 = and i1 %trunc_ln69_2, %conv_params_m_V_load" [cpp/accel/Accel.cpp:71->cpp/accel/Accel.cpp:89]   --->   Operation 88 'and' 'ret_V_16' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node sum_V)   --->   "%tmp_17 = call i1 @_ssdm_op_BitSelect.i1.i2.i32(i2 %data_V_1, i32 1)" [cpp/accel/Accel.cpp:71->cpp/accel/Accel.cpp:89]   --->   Operation 89 'bitselect' 'tmp_17' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node sum_V)   --->   "%xor_ln841 = xor i1 %ret_V_16, %tmp_17" [cpp/accel/Accel.cpp:71->cpp/accel/Accel.cpp:89]   --->   Operation 90 'xor' 'xor_ln841' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 91 [1/1] (0.00ns) (grouped into LUT with out node sum_V)   --->   "%p_Result_s = call i2 @_ssdm_op_BitSet.i2.i2.i32.i1(i2 %data_V_1, i32 1, i1 %xor_ln841)" [cpp/accel/Accel.cpp:71->cpp/accel/Accel.cpp:89]   --->   Operation 91 'bitset' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 92 [1/1] (0.00ns) (grouped into LUT with out node sum_V)   --->   "%sext_ln700 = sext i2 %p_Result_s to i5" [cpp/accel/Accel.cpp:72->cpp/accel/Accel.cpp:89]   --->   Operation 92 'sext' 'sext_ln700' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 93 [1/1] (1.33ns) (out node of the LUT)   --->   "%sum_V = add i5 %sext_ln700, %agg_result_V_load_i" [cpp/accel/Accel.cpp:72->cpp/accel/Accel.cpp:89]   --->   Operation 93 'add' 'sum_V' <Predicate = true> <Delay = 1.33> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.33> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 94 [1/1] (0.00ns)   --->   "br label %.preheader.i" [cpp/accel/Accel.cpp:67->cpp/accel/Accel.cpp:89]   --->   Operation 94 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 12ns, clock uncertainty: 1.5ns.

 <State 1>: 1.06ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('bank.V') with incoming values : ('bank.V', cpp/accel/Accel.cpp:86) [11]  (1.06 ns)

 <State 2>: 2.69ns
The critical path consists of the following:
	'phi' operation ('bank.V') with incoming values : ('bank.V', cpp/accel/Accel.cpp:86) [11]  (0 ns)
	'add' operation ('add_ln69', cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89) [20]  (1.32 ns)
	'sub' operation ('sub_ln69', cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89) [24]  (1.37 ns)

 <State 3>: 1.36ns
The critical path consists of the following:
	'phi' operation ('cc.V') with incoming values : ('cc.V', cpp/accel/Accel.cpp:87) [27]  (0 ns)
	'add' operation ('ret.V', cpp/accel/Accel.cpp:89) [34]  (1.36 ns)

 <State 4>: 3.68ns
The critical path consists of the following:
	'phi' operation ('kr.V') with incoming values : ('kr.V', cpp/accel/Accel.cpp:66->cpp/accel/Accel.cpp:89) [42]  (0 ns)
	'sub' operation ('ret.V', cpp/accel/Accel.cpp:70->cpp/accel/Accel.cpp:89) [56]  (1.16 ns)
	'add' operation ('add_ln215', cpp/accel/Accel.cpp:71->cpp/accel/Accel.cpp:89) [58]  (1.16 ns)
	'sub' operation ('sub_ln215', cpp/accel/Accel.cpp:71->cpp/accel/Accel.cpp:89) [61]  (1.36 ns)

 <State 5>: 4.36ns
The critical path consists of the following:
	'phi' operation ('kc.V') with incoming values : ('kc.V', cpp/accel/Accel.cpp:67->cpp/accel/Accel.cpp:89) [66]  (0 ns)
	'add' operation ('ret.V', cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89) [73]  (1.32 ns)
	'add' operation ('add_ln69_3', cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89) [75]  (1.42 ns)
	'getelementptr' operation ('line_buffer_m_V_addr', cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89) [77]  (0 ns)
	'load' operation ('data.V', cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89) on array 'line_buffer_m_V' [78]  (1.63 ns)

 <State 6>: 2.96ns
The critical path consists of the following:
	'load' operation ('data.V', cpp/accel/Accel.cpp:69->cpp/accel/Accel.cpp:89) on array 'line_buffer_m_V' [78]  (1.63 ns)
	'add' operation ('sum.V', cpp/accel/Accel.cpp:72->cpp/accel/Accel.cpp:89) [92]  (1.34 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
