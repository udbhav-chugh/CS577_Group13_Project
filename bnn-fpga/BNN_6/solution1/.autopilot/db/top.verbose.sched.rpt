

================================================================
== Vivado HLS Report for 'top'
================================================================
* Date:           Wed Mar 24 20:06:19 2021

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        BNN_6
* Solution:       solution1
* Product family: kintex7
* Target device:  xc7k70t-fbv676-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     9.918|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------+------+------+----------+-----------+-----------+-----------+----------+
        |                  |   Latency   | Iteration|  Initiation Interval  |    Trip   |          |
        |     Loop Name    |  min |  max |  Latency |  achieved |   target  |   Count   | Pipelined|
        +------------------+------+------+----------+-----------+-----------+-----------+----------+
        |- LOOP_DMEM_I     |     ?|     ?|         2|          -|          -|          ?|    no    |
        |- LOOP_WT_I       |  9364|  9364|         2|          -|          -|       4682|    no    |
        |- LOOP_KH_I       |   128|   128|         2|          -|          -|         64|    no    |
        |- LOOP_IMG_BATCH  |     ?|     ?|         ?|          -|          -| 0 ~ 65535 |    no    |
        |- LOOP_DMEM_O     |     ?|     ?|         2|          -|          -|          ?|    no    |
        +------------------+------+------+----------+-----------+-----------+-----------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 13
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 4 
3 --> 2 
4 --> 5 6 
5 --> 4 
6 --> 7 8 
7 --> 6 
8 --> 9 12 
9 --> 10 
10 --> 11 
11 --> 8 
12 --> 13 
13 --> 12 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.50>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([4682 x i64]* %wt_i_V), !map !884"   --->   Operation 14 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([64 x i64]* %kh_i_V), !map !890"   --->   Operation 15 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([2048 x i64]* %dmem_i_V), !map !896"   --->   Operation 16 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([128 x i64]* %dmem_o_V), !map !902"   --->   Operation 17 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16 %n_inputs_V), !map !908"   --->   Operation 18 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16 %n_outputs_V), !map !914"   --->   Operation 19 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16 %input_words_V), !map !918"   --->   Operation 20 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16 %output_words_V), !map !922"   --->   Operation 21 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i3 %layer_mode_V), !map !926"   --->   Operation 22 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1 %dmem_mode_V), !map !930"   --->   Operation 23 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i2 %width_mode_V), !map !934"   --->   Operation 24 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i2 %norm_mode_V), !map !938"   --->   Operation 25 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @top_str) nounwind"   --->   Operation 26 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%norm_mode_V_read = call i2 @_ssdm_op_Read.ap_auto.i2(i2 %norm_mode_V)" [cpp/accel/Accel.cpp:697]   --->   Operation 27 'read' 'norm_mode_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%width_mode_V_read = call i2 @_ssdm_op_Read.ap_auto.i2(i2 %width_mode_V)" [cpp/accel/Accel.cpp:697]   --->   Operation 28 'read' 'width_mode_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%dmem_mode_V_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %dmem_mode_V)" [cpp/accel/Accel.cpp:697]   --->   Operation 29 'read' 'dmem_mode_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%layer_mode_V_read = call i3 @_ssdm_op_Read.ap_auto.i3(i3 %layer_mode_V)" [cpp/accel/Accel.cpp:697]   --->   Operation 30 'read' 'layer_mode_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%output_words_V_read = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %output_words_V)" [cpp/accel/Accel.cpp:697]   --->   Operation 31 'read' 'output_words_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%input_words_V_read = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %input_words_V)" [cpp/accel/Accel.cpp:697]   --->   Operation 32 'read' 'input_words_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%n_outputs_V_read = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %n_outputs_V)" [cpp/accel/Accel.cpp:697]   --->   Operation 33 'read' 'n_outputs_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%n_inputs_V_read = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %n_inputs_V)" [cpp/accel/Accel.cpp:697]   --->   Operation 34 'read' 'n_inputs_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%layer_type_V = call i2 @_ssdm_op_PartSelect.i2.i3.i32.i32(i3 %layer_mode_V_read, i32 1, i32 2)" [cpp/accel/Accel.cpp:711]   --->   Operation 35 'partselect' 'layer_type_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%trunc_ln792 = trunc i3 %layer_mode_V_read to i1" [cpp/accel/Accel.cpp:735]   --->   Operation 36 'trunc' 'trunc_ln792' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "br i1 %trunc_ln792, label %0, label %1" [cpp/accel/Accel.cpp:735]   --->   Operation 37 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%p_Val2_s = load i16* @kh_index_V, align 2" [cpp/accel/Accel.cpp:739]   --->   Operation 38 'load' 'p_Val2_s' <Predicate = (!trunc_ln792)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%trunc_ln791 = trunc i16 %p_Val2_s to i1" [cpp/accel/Accel.cpp:739]   --->   Operation 39 'trunc' 'trunc_ln791' <Predicate = (!trunc_ln792)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%zext_ln791 = zext i1 %trunc_ln791 to i16" [cpp/accel/Accel.cpp:739]   --->   Operation 40 'zext' 'zext_ln791' <Predicate = (!trunc_ln792)> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (1.19ns)   --->   "store i16 %zext_ln791, i16* @kh_index_V, align 2" [cpp/accel/Accel.cpp:739]   --->   Operation 41 'store' <Predicate = (!trunc_ln792)> <Delay = 1.19>
ST_1 : Operation 42 [1/1] (1.06ns)   --->   "br label %2"   --->   Operation 42 'br' <Predicate = (!trunc_ln792)> <Delay = 1.06>
ST_1 : Operation 43 [1/1] (1.19ns)   --->   "store i16 0, i16* @kh_index_V, align 2" [cpp/accel/Accel.cpp:736]   --->   Operation 43 'store' <Predicate = (trunc_ln792)> <Delay = 1.19>
ST_1 : Operation 44 [1/1] (1.19ns)   --->   "store i16 0, i16* @o_index_V, align 2" [cpp/accel/Accel.cpp:737]   --->   Operation 44 'store' <Predicate = (trunc_ln792)> <Delay = 1.19>
ST_1 : Operation 45 [1/1] (1.06ns)   --->   "br label %2" [cpp/accel/Accel.cpp:738]   --->   Operation 45 'br' <Predicate = (trunc_ln792)> <Delay = 1.06>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%p_013 = phi i1 [ %trunc_ln791, %1 ], [ false, %0 ]" [cpp/accel/Accel.cpp:739]   --->   Operation 46 'phi' 'p_013' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.61ns)   --->   "%r_V_2 = xor i1 %dmem_mode_V_read, true" [cpp/accel/Accel.cpp:743]   --->   Operation 47 'xor' 'r_V_2' <Predicate = true> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%shl_ln = call i3 @_ssdm_op_BitConcatenate.i3.i2.i1(i2 %width_mode_V_read, i1 false)" [cpp/accel/Accel.cpp:746]   --->   Operation 48 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln746 = zext i3 %shl_ln to i16" [cpp/accel/Accel.cpp:746]   --->   Operation 49 'zext' 'zext_ln746' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%zext_ln746_1 = zext i3 %shl_ln to i7" [cpp/accel/Accel.cpp:746]   --->   Operation 50 'zext' 'zext_ln746_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (1.50ns)   --->   "%shl_ln746 = shl i7 1, %zext_ln746_1" [cpp/accel/Accel.cpp:746]   --->   Operation 51 'shl' 'shl_ln746' <Predicate = true> <Delay = 1.50> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.54> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%words_per_image_V = trunc i7 %shl_ln746 to i5" [cpp/accel/Accel.cpp:746]   --->   Operation 52 'trunc' 'words_per_image_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.64ns)   --->   "%icmp_ln879 = icmp eq i2 %layer_type_V, 1" [cpp/accel/Accel.cpp:750]   --->   Operation 53 'icmp' 'icmp_ln879' <Predicate = true> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%tmp = call i2 @_ssdm_op_BitConcatenate.i2.i1.i1(i1 %dmem_mode_V_read, i1 false)" [cpp/accel/Accel.cpp:753]   --->   Operation 54 'bitconcatenate' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln879_1 = zext i2 %tmp to i7" [cpp/accel/Accel.cpp:755]   --->   Operation 55 'zext' 'zext_ln879_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%zext_ln879 = zext i5 %words_per_image_V to i10" [cpp/accel/Accel.cpp:755]   --->   Operation 56 'zext' 'zext_ln879' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.64ns)   --->   "%icmp_ln879_1 = icmp eq i2 %layer_type_V, 0" [cpp/accel/Accel.cpp:755]   --->   Operation 57 'icmp' 'icmp_ln879_1' <Predicate = true> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 58 [1/1] (1.06ns)   --->   "br label %3" [cpp/accel/Accel.cpp:749]   --->   Operation 58 'br' <Predicate = true> <Delay = 1.06>

State 2 <SV = 1> <Delay = 2.66>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%p_0713_0 = phi i16 [ 0, %2 ], [ %select_ln760, %9 ]" [cpp/accel/Accel.cpp:760]   --->   Operation 59 'phi' 'p_0713_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%p_0882_0 = phi i10 [ 0, %2 ], [ %select_ln760_1, %9 ]" [cpp/accel/Accel.cpp:760]   --->   Operation 60 'phi' 'p_0882_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%p_0232_0 = phi i16 [ 0, %2 ], [ %i_V_2, %9 ]"   --->   Operation 61 'phi' 'p_0232_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%ret_V_3 = trunc i16 %p_0232_0 to i1" [cpp/accel/Accel.cpp:749]   --->   Operation 62 'trunc' 'ret_V_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%ret_V_2 = trunc i16 %p_0232_0 to i10" [cpp/accel/Accel.cpp:749]   --->   Operation 63 'trunc' 'ret_V_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (1.49ns)   --->   "%icmp_ln749 = icmp eq i16 %p_0232_0, %input_words_V_read" [cpp/accel/Accel.cpp:749]   --->   Operation 64 'icmp' 'icmp_ln749' <Predicate = true> <Delay = 1.49> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (1.48ns)   --->   "%i_V_2 = add i16 1, %p_0232_0" [cpp/accel/Accel.cpp:749]   --->   Operation 65 'add' 'i_V_2' <Predicate = true> <Delay = 1.48> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "br i1 %icmp_ln749, label %.preheader1431.preheader, label %4" [cpp/accel/Accel.cpp:749]   --->   Operation 66 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str44) nounwind" [cpp/accel/Accel.cpp:749]   --->   Operation 67 'specloopname' <Predicate = (!icmp_ln749)> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "br i1 %icmp_ln879, label %_ZNK11ap_int_baseILi16ELb0EElsILi34EEE7ap_uintILi16EERKS_IXT_ELb1EE.exit, label %5" [cpp/accel/Accel.cpp:750]   --->   Operation 68 'br' <Predicate = (!icmp_ln749)> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "br i1 %icmp_ln879_1, label %6, label %7" [cpp/accel/Accel.cpp:755]   --->   Operation 69 'br' <Predicate = (!icmp_ln749 & !icmp_ln879)> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%zext_ln544_6_cast = call i14 @_ssdm_op_PartSelect.i14.i16.i32.i32(i16 %p_0232_0, i32 1, i32 14)" [cpp/accel/Accel.cpp:758]   --->   Operation 70 'partselect' 'zext_ln544_6_cast' <Predicate = (!icmp_ln749 & !icmp_ln879 & !icmp_ln879_1)> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "%tmp_4 = call i12 @_ssdm_op_BitConcatenate.i12.i1.i1.i10(i1 %dmem_mode_V_read, i1 %ret_V_3, i10 0)" [cpp/accel/Accel.cpp:758]   --->   Operation 71 'bitconcatenate' 'tmp_4' <Predicate = (!icmp_ln749 & !icmp_ln879 & !icmp_ln879_1)> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%zext_ln180_5 = zext i12 %tmp_4 to i14" [cpp/accel/Accel.cpp:758]   --->   Operation 72 'zext' 'zext_ln180_5' <Predicate = (!icmp_ln749 & !icmp_ln879 & !icmp_ln879_1)> <Delay = 0.00>
ST_2 : Operation 73 [1/1] (1.46ns)   --->   "%add_ln180_3 = add i14 %zext_ln180_5, %zext_ln544_6_cast" [cpp/accel/Accel.cpp:758]   --->   Operation 73 'add' 'add_ln180_3' <Predicate = (!icmp_ln749 & !icmp_ln879 & !icmp_ln879_1)> <Delay = 1.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "%zext_ln544_3 = zext i16 %p_0232_0 to i64" [cpp/accel/Accel.cpp:758]   --->   Operation 74 'zext' 'zext_ln544_3' <Predicate = (!icmp_ln749 & !icmp_ln879 & !icmp_ln879_1)> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "%dmem_i_V_addr_2 = getelementptr [2048 x i64]* %dmem_i_V, i64 0, i64 %zext_ln544_3" [cpp/accel/Accel.cpp:758]   --->   Operation 75 'getelementptr' 'dmem_i_V_addr_2' <Predicate = (!icmp_ln749 & !icmp_ln879 & !icmp_ln879_1)> <Delay = 0.00>
ST_2 : Operation 76 [2/2] (2.66ns)   --->   "%dmem_i_V_load_2 = load i64* %dmem_i_V_addr_2, align 8" [cpp/accel/Accel.cpp:758]   --->   Operation 76 'load' 'dmem_i_V_load_2' <Predicate = (!icmp_ln749 & !icmp_ln879 & !icmp_ln879_1)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "%tmp_7 = call i6 @_ssdm_op_PartSelect.i6.i16.i32.i32(i16 %p_0232_0, i32 10, i32 15)" [cpp/accel/Accel.cpp:756]   --->   Operation 77 'partselect' 'tmp_7' <Predicate = (!icmp_ln749 & !icmp_ln879 & icmp_ln879_1)> <Delay = 0.00>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%zext_ln180_3 = zext i6 %tmp_7 to i7" [cpp/accel/Accel.cpp:756]   --->   Operation 78 'zext' 'zext_ln180_3' <Predicate = (!icmp_ln749 & !icmp_ln879 & icmp_ln879_1)> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (1.35ns)   --->   "%add_ln180_2 = add i7 %zext_ln180_3, %zext_ln879_1" [cpp/accel/Accel.cpp:756]   --->   Operation 79 'add' 'add_ln180_2' <Predicate = (!icmp_ln749 & !icmp_ln879 & icmp_ln879_1)> <Delay = 1.35> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "%zext_ln544_2 = zext i16 %p_0232_0 to i64" [cpp/accel/Accel.cpp:756]   --->   Operation 80 'zext' 'zext_ln544_2' <Predicate = (!icmp_ln749 & !icmp_ln879 & icmp_ln879_1)> <Delay = 0.00>
ST_2 : Operation 81 [1/1] (0.00ns)   --->   "%dmem_i_V_addr_1 = getelementptr [2048 x i64]* %dmem_i_V, i64 0, i64 %zext_ln544_2" [cpp/accel/Accel.cpp:756]   --->   Operation 81 'getelementptr' 'dmem_i_V_addr_1' <Predicate = (!icmp_ln749 & !icmp_ln879 & icmp_ln879_1)> <Delay = 0.00>
ST_2 : Operation 82 [2/2] (2.66ns)   --->   "%dmem_i_V_load_1 = load i64* %dmem_i_V_addr_1, align 8" [cpp/accel/Accel.cpp:756]   --->   Operation 82 'load' 'dmem_i_V_load_1' <Predicate = (!icmp_ln749 & !icmp_ln879 & icmp_ln879_1)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_2 : Operation 83 [1/1] (0.00ns)   --->   "%ret_V_s = call i15 @_ssdm_op_PartSelect.i15.i16.i32.i32(i16 %p_0713_0, i32 1, i32 15)" [cpp/accel/Accel.cpp:752]   --->   Operation 83 'partselect' 'ret_V_s' <Predicate = (!icmp_ln749 & icmp_ln879)> <Delay = 0.00>
ST_2 : Operation 84 [1/1] (0.00ns)   --->   "%ret_V_5 = zext i15 %ret_V_s to i16" [cpp/accel/Accel.cpp:752]   --->   Operation 84 'zext' 'ret_V_5' <Predicate = (!icmp_ln749 & icmp_ln879)> <Delay = 0.00>
ST_2 : Operation 85 [1/1] (2.54ns)   --->   "%r_V = shl i16 %ret_V_5, %zext_ln746" [cpp/accel/Accel.cpp:753]   --->   Operation 85 'shl' 'r_V' <Predicate = (!icmp_ln749 & icmp_ln879)> <Delay = 2.54> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.54> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 86 [1/1] (0.00ns)   --->   "%trunc_ln749_2 = trunc i16 %r_V to i14" [cpp/accel/Accel.cpp:749]   --->   Operation 86 'trunc' 'trunc_ln749_2' <Predicate = (!icmp_ln749 & icmp_ln879)> <Delay = 0.00>
ST_2 : Operation 87 [1/1] (0.00ns)   --->   "%zext_ln544 = zext i16 %p_0232_0 to i64" [cpp/accel/Accel.cpp:753]   --->   Operation 87 'zext' 'zext_ln544' <Predicate = (!icmp_ln749 & icmp_ln879)> <Delay = 0.00>
ST_2 : Operation 88 [1/1] (0.00ns)   --->   "%dmem_i_V_addr = getelementptr [2048 x i64]* %dmem_i_V, i64 0, i64 %zext_ln544" [cpp/accel/Accel.cpp:753]   --->   Operation 88 'getelementptr' 'dmem_i_V_addr' <Predicate = (!icmp_ln749 & icmp_ln879)> <Delay = 0.00>
ST_2 : Operation 89 [2/2] (2.66ns)   --->   "%dmem_i_V_load = load i64* %dmem_i_V_addr, align 8" [cpp/accel/Accel.cpp:753]   --->   Operation 89 'load' 'dmem_i_V_load' <Predicate = (!icmp_ln749 & icmp_ln879)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_2 : Operation 90 [1/1] (1.06ns)   --->   "br label %.preheader1431" [cpp/accel/Accel.cpp:768]   --->   Operation 90 'br' <Predicate = (icmp_ln749)> <Delay = 1.06>

State 3 <SV = 2> <Delay = 5.32>
ST_3 : Operation 91 [1/1] (0.00ns)   --->   "%zext_ln180_6 = zext i14 %add_ln180_3 to i64" [cpp/accel/Accel.cpp:758]   --->   Operation 91 'zext' 'zext_ln180_6' <Predicate = (!icmp_ln879 & !icmp_ln879_1)> <Delay = 0.00>
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%dmem_V_addr_2 = getelementptr [4096 x i64]* @dmem_V, i64 0, i64 %zext_ln180_6" [cpp/accel/Accel.cpp:758]   --->   Operation 92 'getelementptr' 'dmem_V_addr_2' <Predicate = (!icmp_ln879 & !icmp_ln879_1)> <Delay = 0.00>
ST_3 : Operation 93 [1/2] (2.66ns)   --->   "%dmem_i_V_load_2 = load i64* %dmem_i_V_addr_2, align 8" [cpp/accel/Accel.cpp:758]   --->   Operation 93 'load' 'dmem_i_V_load_2' <Predicate = (!icmp_ln879 & !icmp_ln879_1)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_3 : Operation 94 [1/1] (2.66ns)   --->   "store i64 %dmem_i_V_load_2, i64* %dmem_V_addr_2, align 8" [cpp/accel/Accel.cpp:758]   --->   Operation 94 'store' <Predicate = (!icmp_ln879 & !icmp_ln879_1)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "br label %8"   --->   Operation 95 'br' <Predicate = (!icmp_ln879 & !icmp_ln879_1)> <Delay = 0.00>
ST_3 : Operation 96 [1/1] (0.00ns)   --->   "%tmp_8 = call i17 @_ssdm_op_BitConcatenate.i17.i7.i10(i7 %add_ln180_2, i10 %ret_V_2)" [cpp/accel/Accel.cpp:756]   --->   Operation 96 'bitconcatenate' 'tmp_8' <Predicate = (!icmp_ln879 & icmp_ln879_1)> <Delay = 0.00>
ST_3 : Operation 97 [1/1] (0.00ns)   --->   "%zext_ln180_4 = zext i17 %tmp_8 to i64" [cpp/accel/Accel.cpp:756]   --->   Operation 97 'zext' 'zext_ln180_4' <Predicate = (!icmp_ln879 & icmp_ln879_1)> <Delay = 0.00>
ST_3 : Operation 98 [1/1] (0.00ns)   --->   "%dmem_V_addr_1 = getelementptr [4096 x i64]* @dmem_V, i64 0, i64 %zext_ln180_4" [cpp/accel/Accel.cpp:756]   --->   Operation 98 'getelementptr' 'dmem_V_addr_1' <Predicate = (!icmp_ln879 & icmp_ln879_1)> <Delay = 0.00>
ST_3 : Operation 99 [1/2] (2.66ns)   --->   "%dmem_i_V_load_1 = load i64* %dmem_i_V_addr_1, align 8" [cpp/accel/Accel.cpp:756]   --->   Operation 99 'load' 'dmem_i_V_load_1' <Predicate = (!icmp_ln879 & icmp_ln879_1)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_3 : Operation 100 [1/1] (2.66ns)   --->   "store i64 %dmem_i_V_load_1, i64* %dmem_V_addr_1, align 8" [cpp/accel/Accel.cpp:756]   --->   Operation 100 'store' <Predicate = (!icmp_ln879 & icmp_ln879_1)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_3 : Operation 101 [1/1] (0.00ns)   --->   "br label %8" [cpp/accel/Accel.cpp:756]   --->   Operation 101 'br' <Predicate = (!icmp_ln879 & icmp_ln879_1)> <Delay = 0.00>
ST_3 : Operation 102 [1/1] (0.00ns)   --->   "br label %9"   --->   Operation 102 'br' <Predicate = (!icmp_ln879)> <Delay = 0.00>
ST_3 : Operation 103 [1/1] (0.00ns)   --->   "%zext_ln749 = zext i10 %p_0882_0 to i14" [cpp/accel/Accel.cpp:749]   --->   Operation 103 'zext' 'zext_ln749' <Predicate = (icmp_ln879)> <Delay = 0.00>
ST_3 : Operation 104 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln749 = add i14 %trunc_ln749_2, %zext_ln749" [cpp/accel/Accel.cpp:749]   --->   Operation 104 'add' 'add_ln749' <Predicate = (icmp_ln879)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.25> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 105 [1/1] (0.00ns)   --->   "%trunc_ln749_3 = trunc i16 %p_0713_0 to i1" [cpp/accel/Accel.cpp:749]   --->   Operation 105 'trunc' 'trunc_ln749_3' <Predicate = (icmp_ln879)> <Delay = 0.00>
ST_3 : Operation 106 [1/1] (0.00ns)   --->   "%tmp_1 = call i12 @_ssdm_op_BitConcatenate.i12.i1.i1.i10(i1 %dmem_mode_V_read, i1 %trunc_ln749_3, i10 0)" [cpp/accel/Accel.cpp:753]   --->   Operation 106 'bitconcatenate' 'tmp_1' <Predicate = (icmp_ln879)> <Delay = 0.00>
ST_3 : Operation 107 [1/1] (0.00ns)   --->   "%zext_ln180 = zext i12 %tmp_1 to i14" [cpp/accel/Accel.cpp:753]   --->   Operation 107 'zext' 'zext_ln180' <Predicate = (icmp_ln879)> <Delay = 0.00>
ST_3 : Operation 108 [1/1] (2.51ns) (root node of TernaryAdder)   --->   "%add_ln180 = add i14 %add_ln749, %zext_ln180" [cpp/accel/Accel.cpp:753]   --->   Operation 108 'add' 'add_ln180' <Predicate = (icmp_ln879)> <Delay = 2.51> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.25> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 109 [1/1] (0.00ns)   --->   "%zext_ln180_1 = zext i14 %add_ln180 to i64" [cpp/accel/Accel.cpp:753]   --->   Operation 109 'zext' 'zext_ln180_1' <Predicate = (icmp_ln879)> <Delay = 0.00>
ST_3 : Operation 110 [1/1] (0.00ns)   --->   "%dmem_V_addr = getelementptr [4096 x i64]* @dmem_V, i64 0, i64 %zext_ln180_1" [cpp/accel/Accel.cpp:753]   --->   Operation 110 'getelementptr' 'dmem_V_addr' <Predicate = (icmp_ln879)> <Delay = 0.00>
ST_3 : Operation 111 [1/2] (2.66ns)   --->   "%dmem_i_V_load = load i64* %dmem_i_V_addr, align 8" [cpp/accel/Accel.cpp:753]   --->   Operation 111 'load' 'dmem_i_V_load' <Predicate = (icmp_ln879)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_3 : Operation 112 [1/1] (2.66ns)   --->   "store i64 %dmem_i_V_load, i64* %dmem_V_addr, align 8" [cpp/accel/Accel.cpp:753]   --->   Operation 112 'store' <Predicate = (icmp_ln879)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_3 : Operation 113 [1/1] (0.00ns)   --->   "br label %9" [cpp/accel/Accel.cpp:754]   --->   Operation 113 'br' <Predicate = (icmp_ln879)> <Delay = 0.00>
ST_3 : Operation 114 [1/1] (1.41ns)   --->   "%img_off_V = add i10 %p_0882_0, 1" [cpp/accel/Accel.cpp:760]   --->   Operation 114 'add' 'img_off_V' <Predicate = true> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 115 [1/1] (1.29ns)   --->   "%icmp_ln879_2 = icmp eq i10 %img_off_V, %zext_ln879" [cpp/accel/Accel.cpp:760]   --->   Operation 115 'icmp' 'icmp_ln879_2' <Predicate = true> <Delay = 1.29> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 116 [1/1] (1.48ns)   --->   "%img_idx_V = add i16 %p_0713_0, 1" [cpp/accel/Accel.cpp:762]   --->   Operation 116 'add' 'img_idx_V' <Predicate = true> <Delay = 1.48> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 117 [1/1] (0.54ns)   --->   "%select_ln760 = select i1 %icmp_ln879_2, i16 %img_idx_V, i16 %p_0713_0" [cpp/accel/Accel.cpp:760]   --->   Operation 117 'select' 'select_ln760' <Predicate = true> <Delay = 0.54> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 118 [1/1] (0.45ns)   --->   "%select_ln760_1 = select i1 %icmp_ln879_2, i10 0, i10 %img_off_V" [cpp/accel/Accel.cpp:760]   --->   Operation 118 'select' 'select_ln760_1' <Predicate = true> <Delay = 0.45> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 119 [1/1] (0.00ns)   --->   "br label %3" [cpp/accel/Accel.cpp:749]   --->   Operation 119 'br' <Predicate = true> <Delay = 0.00>

State 4 <SV = 2> <Delay = 2.66>
ST_4 : Operation 120 [1/1] (0.00ns)   --->   "%p_0502_0 = phi i13 [ %i_V, %10 ], [ 0, %.preheader1431.preheader ]"   --->   Operation 120 'phi' 'p_0502_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 121 [1/1] (0.00ns)   --->   "%ret_V = trunc i13 %p_0502_0 to i1" [cpp/accel/Accel.cpp:768]   --->   Operation 121 'trunc' 'ret_V' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 122 [1/1] (1.39ns)   --->   "%icmp_ln887 = icmp eq i13 %p_0502_0, -3510" [cpp/accel/Accel.cpp:768]   --->   Operation 122 'icmp' 'icmp_ln887' <Predicate = true> <Delay = 1.39> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 123 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4682, i64 4682, i64 4682)"   --->   Operation 123 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 124 [1/1] (1.45ns)   --->   "%i_V = add i13 1, %p_0502_0" [cpp/accel/Accel.cpp:768]   --->   Operation 124 'add' 'i_V' <Predicate = true> <Delay = 1.45> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 125 [1/1] (0.00ns)   --->   "br i1 %icmp_ln887, label %.preheader.preheader, label %10" [cpp/accel/Accel.cpp:768]   --->   Operation 125 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 126 [1/1] (0.00ns) (grouped into LUT with out node add_ln180_1)   --->   "%tmp_2 = call i12 @_ssdm_op_PartSelect.i12.i13.i32.i32(i13 %p_0502_0, i32 1, i32 12)" [cpp/accel/Accel.cpp:769]   --->   Operation 126 'partselect' 'tmp_2' <Predicate = (!icmp_ln887)> <Delay = 0.00>
ST_4 : Operation 127 [1/1] (0.00ns) (grouped into LUT with out node add_ln180_1)   --->   "%zext_ln1372 = zext i12 %tmp_2 to i13" [cpp/accel/Accel.cpp:769]   --->   Operation 127 'zext' 'zext_ln1372' <Predicate = (!icmp_ln887)> <Delay = 0.00>
ST_4 : Operation 128 [1/1] (0.00ns) (grouped into LUT with out node add_ln180_1)   --->   "%select_ln180 = select i1 %ret_V, i13 2341, i13 0" [cpp/accel/Accel.cpp:769]   --->   Operation 128 'select' 'select_ln180' <Predicate = (!icmp_ln887)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 129 [1/1] (1.45ns) (out node of the LUT)   --->   "%add_ln180_1 = add i13 %zext_ln1372, %select_ln180" [cpp/accel/Accel.cpp:769]   --->   Operation 129 'add' 'add_ln180_1' <Predicate = (!icmp_ln887)> <Delay = 1.45> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 130 [1/1] (0.00ns)   --->   "%zext_ln544_1 = zext i13 %p_0502_0 to i64" [cpp/accel/Accel.cpp:769]   --->   Operation 130 'zext' 'zext_ln544_1' <Predicate = (!icmp_ln887)> <Delay = 0.00>
ST_4 : Operation 131 [1/1] (0.00ns)   --->   "%wt_i_V_addr = getelementptr [4682 x i64]* %wt_i_V, i64 0, i64 %zext_ln544_1" [cpp/accel/Accel.cpp:769]   --->   Operation 131 'getelementptr' 'wt_i_V_addr' <Predicate = (!icmp_ln887)> <Delay = 0.00>
ST_4 : Operation 132 [2/2] (2.66ns)   --->   "%wt_i_V_load = load i64* %wt_i_V_addr, align 8" [cpp/accel/Accel.cpp:769]   --->   Operation 132 'load' 'wt_i_V_load' <Predicate = (!icmp_ln887)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_4 : Operation 133 [1/1] (1.06ns)   --->   "br label %.preheader" [cpp/accel/Accel.cpp:774]   --->   Operation 133 'br' <Predicate = (icmp_ln887)> <Delay = 1.06>

State 5 <SV = 3> <Delay = 5.32>
ST_5 : Operation 134 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str45181) nounwind" [cpp/accel/Accel.cpp:768]   --->   Operation 134 'specloopname' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 135 [1/1] (0.00ns)   --->   "%zext_ln180_2 = zext i13 %add_ln180_1 to i64" [cpp/accel/Accel.cpp:769]   --->   Operation 135 'zext' 'zext_ln180_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 136 [1/1] (0.00ns)   --->   "%wt_mem_V_addr = getelementptr [4682 x i64]* @wt_mem_V, i64 0, i64 %zext_ln180_2" [cpp/accel/Accel.cpp:769]   --->   Operation 136 'getelementptr' 'wt_mem_V_addr' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 137 [1/2] (2.66ns)   --->   "%wt_i_V_load = load i64* %wt_i_V_addr, align 8" [cpp/accel/Accel.cpp:769]   --->   Operation 137 'load' 'wt_i_V_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_5 : Operation 138 [1/1] (2.66ns)   --->   "store i64 %wt_i_V_load, i64* %wt_mem_V_addr, align 8" [cpp/accel/Accel.cpp:769]   --->   Operation 138 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_5 : Operation 139 [1/1] (0.00ns)   --->   "br label %.preheader1431" [cpp/accel/Accel.cpp:768]   --->   Operation 139 'br' <Predicate = true> <Delay = 0.00>

State 6 <SV = 3> <Delay = 2.66>
ST_6 : Operation 140 [1/1] (0.00ns)   --->   "%p_0604_0 = phi i7 [ %i_V_1, %11 ], [ 0, %.preheader.preheader ]"   --->   Operation 140 'phi' 'p_0604_0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 141 [1/1] (1.18ns)   --->   "%icmp_ln887_1 = icmp eq i7 %p_0604_0, -64" [cpp/accel/Accel.cpp:774]   --->   Operation 141 'icmp' 'icmp_ln887_1' <Predicate = true> <Delay = 1.18> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 142 [1/1] (0.00ns)   --->   "%empty_41 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64)"   --->   Operation 142 'speclooptripcount' 'empty_41' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 143 [1/1] (1.37ns)   --->   "%i_V_1 = add i7 %p_0604_0, 1" [cpp/accel/Accel.cpp:774]   --->   Operation 143 'add' 'i_V_1' <Predicate = true> <Delay = 1.37> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 144 [1/1] (0.00ns)   --->   "br i1 %icmp_ln887_1, label %12, label %11" [cpp/accel/Accel.cpp:774]   --->   Operation 144 'br' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 145 [1/1] (0.00ns)   --->   "%zext_ln544_4 = zext i7 %p_0604_0 to i64" [cpp/accel/Accel.cpp:775]   --->   Operation 145 'zext' 'zext_ln544_4' <Predicate = (!icmp_ln887_1)> <Delay = 0.00>
ST_6 : Operation 146 [1/1] (0.00ns)   --->   "%kh_i_V_addr = getelementptr [64 x i64]* %kh_i_V, i64 0, i64 %zext_ln544_4" [cpp/accel/Accel.cpp:775]   --->   Operation 146 'getelementptr' 'kh_i_V_addr' <Predicate = (!icmp_ln887_1)> <Delay = 0.00>
ST_6 : Operation 147 [2/2] (2.66ns)   --->   "%kh_i_V_load = load i64* %kh_i_V_addr, align 8" [cpp/accel/Accel.cpp:775]   --->   Operation 147 'load' 'kh_i_V_load' <Predicate = (!icmp_ln887_1)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_6 : Operation 148 [1/1] (0.00ns)   --->   "br i1 %icmp_ln879_1, label %._crit_edge1451, label %13" [cpp/accel/Accel.cpp:777]   --->   Operation 148 'br' <Predicate = (icmp_ln887_1)> <Delay = 0.00>
ST_6 : Operation 149 [1/1] (0.00ns)   --->   "br i1 %icmp_ln879, label %._crit_edge1452.preheader, label %14" [cpp/accel/Accel.cpp:794]   --->   Operation 149 'br' <Predicate = (!icmp_ln879_1 & icmp_ln887_1)> <Delay = 0.00>
ST_6 : Operation 150 [1/1] (0.00ns)   --->   "%o_index_V_load_2 = load i16* @o_index_V, align 2" [cpp/accel/Accel.cpp:821]   --->   Operation 150 'load' 'o_index_V_load_2' <Predicate = (!icmp_ln879 & !icmp_ln879_1 & icmp_ln887_1)> <Delay = 0.00>
ST_6 : Operation 151 [2/2] (0.64ns)   --->   "call fastcc void @bin_dense([4682 x i64]* @wt_mem_V, [64 x i64]* @kh_mem_V, [4096 x i64]* @dmem_V, i2 %layer_type_V, i1 %dmem_mode_V_read, i1 %r_V_2, i16 %o_index_V_load_2, i16 %n_inputs_V_read, i16 %n_outputs_V_read)" [cpp/accel/Accel.cpp:828]   --->   Operation 151 'call' <Predicate = (!icmp_ln879 & !icmp_ln879_1 & icmp_ln887_1)> <Delay = 0.64> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 152 [1/1] (1.06ns)   --->   "br label %._crit_edge1452" [cpp/accel/Accel.cpp:799]   --->   Operation 152 'br' <Predicate = (icmp_ln879 & !icmp_ln879_1 & icmp_ln887_1)> <Delay = 1.06>
ST_6 : Operation 153 [1/1] (0.00ns)   --->   "%o_index_V_load = load i16* @o_index_V, align 2" [cpp/accel/Accel.cpp:780]   --->   Operation 153 'load' 'o_index_V_load' <Predicate = (icmp_ln879_1 & icmp_ln887_1)> <Delay = 0.00>
ST_6 : Operation 154 [2/2] (0.00ns)   --->   "call fastcc void @fp_conv([4682 x i64]* @wt_mem_V, [64 x i64]* @kh_mem_V, [4096 x i64]* @dmem_V, i1 %dmem_mode_V_read, i1 %r_V_2, i1 %p_013, i16 %o_index_V_load, i16 %n_outputs_V_read)" [cpp/accel/Accel.cpp:788]   --->   Operation 154 'call' <Predicate = (icmp_ln879_1 & icmp_ln887_1)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 4> <Delay = 5.32>
ST_7 : Operation 155 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str46) nounwind" [cpp/accel/Accel.cpp:775]   --->   Operation 155 'specloopname' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 156 [1/2] (2.66ns)   --->   "%kh_i_V_load = load i64* %kh_i_V_addr, align 8" [cpp/accel/Accel.cpp:775]   --->   Operation 156 'load' 'kh_i_V_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_7 : Operation 157 [1/1] (0.00ns)   --->   "%kh_mem_V_addr = getelementptr [64 x i64]* @kh_mem_V, i64 0, i64 %zext_ln544_4" [cpp/accel/Accel.cpp:775]   --->   Operation 157 'getelementptr' 'kh_mem_V_addr' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 158 [1/1] (2.66ns)   --->   "store i64 %kh_i_V_load, i64* %kh_mem_V_addr, align 8" [cpp/accel/Accel.cpp:775]   --->   Operation 158 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_7 : Operation 159 [1/1] (0.00ns)   --->   "br label %.preheader" [cpp/accel/Accel.cpp:774]   --->   Operation 159 'br' <Predicate = true> <Delay = 0.00>

State 8 <SV = 4> <Delay = 2.68>
ST_8 : Operation 160 [1/2] (0.00ns)   --->   "call fastcc void @bin_dense([4682 x i64]* @wt_mem_V, [64 x i64]* @kh_mem_V, [4096 x i64]* @dmem_V, i2 %layer_type_V, i1 %dmem_mode_V_read, i1 %r_V_2, i16 %o_index_V_load_2, i16 %n_inputs_V_read, i16 %n_outputs_V_read)" [cpp/accel/Accel.cpp:828]   --->   Operation 160 'call' <Predicate = (!icmp_ln879 & !icmp_ln879_1)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 161 [1/1] (0.00ns)   --->   "%o_index_V_load_3 = load i16* @o_index_V, align 2" [cpp/accel/Accel.cpp:831]   --->   Operation 161 'load' 'o_index_V_load_3' <Predicate = (!icmp_ln879 & !icmp_ln879_1)> <Delay = 0.00>
ST_8 : Operation 162 [1/1] (1.48ns)   --->   "%add_ln700_2 = add i16 %o_index_V_load_3, %n_outputs_V_read" [cpp/accel/Accel.cpp:831]   --->   Operation 162 'add' 'add_ln700_2' <Predicate = (!icmp_ln879 & !icmp_ln879_1)> <Delay = 1.48> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 163 [1/1] (1.19ns)   --->   "store i16 %add_ln700_2, i16* @o_index_V, align 2" [cpp/accel/Accel.cpp:831]   --->   Operation 163 'store' <Predicate = (!icmp_ln879 & !icmp_ln879_1)> <Delay = 1.19>
ST_8 : Operation 164 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 164 'br' <Predicate = (!icmp_ln879 & !icmp_ln879_1)> <Delay = 0.00>
ST_8 : Operation 165 [1/1] (0.00ns)   --->   "%p_0660_0 = phi i10 [ %i_V_3, %_ifconv ], [ 0, %._crit_edge1452.preheader ]"   --->   Operation 165 'phi' 'p_0660_0' <Predicate = (icmp_ln879 & !icmp_ln879_1)> <Delay = 0.00>
ST_8 : Operation 166 [1/1] (0.00ns)   --->   "%zext_ln887 = zext i10 %p_0660_0 to i16" [cpp/accel/Accel.cpp:799]   --->   Operation 166 'zext' 'zext_ln887' <Predicate = (icmp_ln879 & !icmp_ln879_1)> <Delay = 0.00>
ST_8 : Operation 167 [1/1] (1.49ns)   --->   "%icmp_ln887_2 = icmp ult i16 %zext_ln887, %n_outputs_V_read" [cpp/accel/Accel.cpp:799]   --->   Operation 167 'icmp' 'icmp_ln887_2' <Predicate = (icmp_ln879 & !icmp_ln879_1)> <Delay = 1.49> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 168 [1/1] (0.00ns)   --->   "%empty_42 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 0, i64 65535, i64 0)"   --->   Operation 168 'speclooptripcount' 'empty_42' <Predicate = (icmp_ln879 & !icmp_ln879_1)> <Delay = 0.00>
ST_8 : Operation 169 [1/1] (1.41ns)   --->   "%i_V_3 = add i10 %p_0660_0, 1" [cpp/accel/Accel.cpp:799]   --->   Operation 169 'add' 'i_V_3' <Predicate = (icmp_ln879 & !icmp_ln879_1)> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 170 [1/1] (0.00ns)   --->   "br i1 %icmp_ln887_2, label %_ifconv, label %.loopexit.loopexit" [cpp/accel/Accel.cpp:799]   --->   Operation 170 'br' <Predicate = (icmp_ln879 & !icmp_ln879_1)> <Delay = 0.00>
ST_8 : Operation 171 [1/1] (0.00ns)   --->   "%kh_index_V_load_2 = load i16* @kh_index_V, align 2" [cpp/accel/Accel.cpp:802]   --->   Operation 171 'load' 'kh_index_V_load_2' <Predicate = (icmp_ln879 & !icmp_ln879_1 & icmp_ln887_2)> <Delay = 0.00>
ST_8 : Operation 172 [1/1] (0.00ns)   --->   "%ret_V_9 = call i14 @_ssdm_op_PartSelect.i14.i16.i32.i32(i16 %kh_index_V_load_2, i32 2, i32 15)" [cpp/accel/Accel.h:79->cpp/accel/Accel.cpp:802]   --->   Operation 172 'partselect' 'ret_V_9' <Predicate = (icmp_ln879 & !icmp_ln879_1 & icmp_ln887_2)> <Delay = 0.00>
ST_8 : Operation 173 [1/1] (0.00ns)   --->   "%zext_ln544_5 = zext i14 %ret_V_9 to i64" [cpp/accel/Accel.h:79->cpp/accel/Accel.cpp:802]   --->   Operation 173 'zext' 'zext_ln544_5' <Predicate = (icmp_ln879 & !icmp_ln879_1 & icmp_ln887_2)> <Delay = 0.00>
ST_8 : Operation 174 [1/1] (0.00ns)   --->   "%kh_mem_V_addr_1 = getelementptr [64 x i64]* @kh_mem_V, i64 0, i64 %zext_ln544_5" [cpp/accel/Accel.h:79->cpp/accel/Accel.cpp:802]   --->   Operation 174 'getelementptr' 'kh_mem_V_addr_1' <Predicate = (icmp_ln879 & !icmp_ln879_1 & icmp_ln887_2)> <Delay = 0.00>
ST_8 : Operation 175 [2/2] (2.66ns)   --->   "%kh_word_V = load i64* %kh_mem_V_addr_1, align 8" [cpp/accel/Accel.h:79->cpp/accel/Accel.cpp:802]   --->   Operation 175 'load' 'kh_word_V' <Predicate = (icmp_ln879 & !icmp_ln879_1 & icmp_ln887_2)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_8 : Operation 176 [1/1] (0.00ns)   --->   "%off_V = trunc i16 %kh_index_V_load_2 to i2" [cpp/accel/Accel.h:80->cpp/accel/Accel.cpp:802]   --->   Operation 176 'trunc' 'off_V' <Predicate = (icmp_ln879 & !icmp_ln879_1 & icmp_ln887_2)> <Delay = 0.00>
ST_8 : Operation 177 [1/1] (1.29ns)   --->   "%icmp_ln879_3 = icmp eq i10 %p_0660_0, 0" [cpp/accel/Accel.cpp:811]   --->   Operation 177 'icmp' 'icmp_ln879_3' <Predicate = (icmp_ln879 & !icmp_ln879_1 & icmp_ln887_2)> <Delay = 1.29> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 178 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 178 'br' <Predicate = (icmp_ln879 & !icmp_ln879_1 & !icmp_ln887_2)> <Delay = 0.00>
ST_8 : Operation 179 [1/1] (0.00ns)   --->   "br label %15"   --->   Operation 179 'br' <Predicate = (!icmp_ln879_1 & !icmp_ln887_2) | (!icmp_ln879 & !icmp_ln879_1)> <Delay = 0.00>
ST_8 : Operation 180 [1/2] (0.00ns)   --->   "call fastcc void @fp_conv([4682 x i64]* @wt_mem_V, [64 x i64]* @kh_mem_V, [4096 x i64]* @dmem_V, i1 %dmem_mode_V_read, i1 %r_V_2, i1 %p_013, i16 %o_index_V_load, i16 %n_outputs_V_read)" [cpp/accel/Accel.cpp:788]   --->   Operation 180 'call' <Predicate = (icmp_ln879_1)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 181 [1/1] (0.00ns)   --->   "%kh_index_V_load = load i16* @kh_index_V, align 2" [cpp/accel/Accel.cpp:791]   --->   Operation 181 'load' 'kh_index_V_load' <Predicate = (icmp_ln879_1)> <Delay = 0.00>
ST_8 : Operation 182 [1/1] (1.48ns)   --->   "%add_ln700 = add i16 %kh_index_V_load, %n_outputs_V_read" [cpp/accel/Accel.cpp:791]   --->   Operation 182 'add' 'add_ln700' <Predicate = (icmp_ln879_1)> <Delay = 1.48> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 183 [1/1] (1.19ns)   --->   "store i16 %add_ln700, i16* @kh_index_V, align 2" [cpp/accel/Accel.cpp:791]   --->   Operation 183 'store' <Predicate = (icmp_ln879_1)> <Delay = 1.19>
ST_8 : Operation 184 [1/1] (0.00ns)   --->   "%o_index_V_load_1 = load i16* @o_index_V, align 2" [cpp/accel/Accel.cpp:792]   --->   Operation 184 'load' 'o_index_V_load_1' <Predicate = (icmp_ln879_1)> <Delay = 0.00>
ST_8 : Operation 185 [1/1] (1.48ns)   --->   "%add_ln700_1 = add i16 %o_index_V_load_1, %n_outputs_V_read" [cpp/accel/Accel.cpp:792]   --->   Operation 185 'add' 'add_ln700_1' <Predicate = (icmp_ln879_1)> <Delay = 1.48> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 186 [1/1] (1.19ns)   --->   "store i16 %add_ln700_1, i16* @o_index_V, align 2" [cpp/accel/Accel.cpp:792]   --->   Operation 186 'store' <Predicate = (icmp_ln879_1)> <Delay = 1.19>
ST_8 : Operation 187 [1/1] (0.00ns)   --->   "br label %15" [cpp/accel/Accel.cpp:793]   --->   Operation 187 'br' <Predicate = (icmp_ln879_1)> <Delay = 0.00>
ST_8 : Operation 188 [1/1] (0.64ns)   --->   "%icmp_ln883 = icmp ne i2 %norm_mode_V_read, -2" [cpp/accel/Accel.cpp:835]   --->   Operation 188 'icmp' 'icmp_ln883' <Predicate = (!icmp_ln887_2) | (icmp_ln879_1) | (!icmp_ln879)> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 189 [1/1] (0.00ns)   --->   "%lshr_ln = call i3 @_ssdm_op_PartSelect.i3.i7.i32.i32(i7 %shl_ln746, i32 2, i32 4)" [cpp/accel/Accel.cpp:835]   --->   Operation 189 'partselect' 'lshr_ln' <Predicate = (!icmp_ln887_2) | (icmp_ln879_1) | (!icmp_ln879)> <Delay = 0.00>
ST_8 : Operation 190 [1/1] (0.00ns)   --->   "%zext_ln1371 = zext i3 %lshr_ln to i5" [cpp/accel/Accel.cpp:835]   --->   Operation 190 'zext' 'zext_ln1371' <Predicate = (!icmp_ln887_2) | (icmp_ln879_1) | (!icmp_ln879)> <Delay = 0.00>
ST_8 : Operation 191 [1/1] (0.79ns)   --->   "%words_per_out_V = select i1 %icmp_ln883, i5 %words_per_image_V, i5 %zext_ln1371" [cpp/accel/Accel.cpp:835]   --->   Operation 191 'select' 'words_per_out_V' <Predicate = (!icmp_ln887_2) | (icmp_ln879_1) | (!icmp_ln879)> <Delay = 0.79> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 192 [1/1] (0.00ns)   --->   "%zext_ln838 = zext i5 %words_per_out_V to i14" [cpp/accel/Accel.cpp:838]   --->   Operation 192 'zext' 'zext_ln838' <Predicate = (!icmp_ln887_2) | (icmp_ln879_1) | (!icmp_ln879)> <Delay = 0.00>
ST_8 : Operation 193 [1/1] (0.00ns)   --->   "%zext_ln841 = zext i5 %words_per_out_V to i10" [cpp/accel/Accel.cpp:841]   --->   Operation 193 'zext' 'zext_ln841' <Predicate = (!icmp_ln887_2) | (icmp_ln879_1) | (!icmp_ln879)> <Delay = 0.00>
ST_8 : Operation 194 [1/1] (0.64ns)   --->   "%icmp_ln841 = icmp ne i2 %width_mode_V_read, 0" [cpp/accel/Accel.cpp:841]   --->   Operation 194 'icmp' 'icmp_ln841' <Predicate = (!icmp_ln887_2) | (icmp_ln879_1) | (!icmp_ln879)> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 195 [1/1] (0.00ns) (grouped into LUT with out node or_ln841_1)   --->   "%or_ln841 = or i1 %icmp_ln841, %icmp_ln883" [cpp/accel/Accel.cpp:841]   --->   Operation 195 'or' 'or_ln841' <Predicate = (!icmp_ln887_2) | (icmp_ln879_1) | (!icmp_ln879)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 196 [1/1] (0.00ns) (grouped into LUT with out node or_ln841_1)   --->   "%tmp_9 = call i1 @_ssdm_op_BitSelect.i1.i3.i32(i3 %layer_mode_V_read, i32 2)" [cpp/accel/Accel.cpp:841]   --->   Operation 196 'bitselect' 'tmp_9' <Predicate = (!icmp_ln887_2) | (icmp_ln879_1) | (!icmp_ln879)> <Delay = 0.00>
ST_8 : Operation 197 [1/1] (0.00ns) (grouped into LUT with out node or_ln841_1)   --->   "%xor_ln841 = xor i1 %or_ln841, true" [cpp/accel/Accel.cpp:841]   --->   Operation 197 'xor' 'xor_ln841' <Predicate = (!icmp_ln887_2) | (icmp_ln879_1) | (!icmp_ln879)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 198 [1/1] (0.61ns) (out node of the LUT)   --->   "%or_ln841_1 = or i1 %tmp_9, %xor_ln841" [cpp/accel/Accel.cpp:841]   --->   Operation 198 'or' 'or_ln841_1' <Predicate = (!icmp_ln887_2) | (icmp_ln879_1) | (!icmp_ln879)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 199 [1/1] (1.06ns)   --->   "br label %16" [cpp/accel/Accel.cpp:838]   --->   Operation 199 'br' <Predicate = (!icmp_ln887_2) | (icmp_ln879_1) | (!icmp_ln879)> <Delay = 1.06>

State 9 <SV = 5> <Delay = 3.76>
ST_9 : Operation 200 [1/2] (2.66ns)   --->   "%kh_word_V = load i64* %kh_mem_V_addr_1, align 8" [cpp/accel/Accel.h:79->cpp/accel/Accel.cpp:802]   --->   Operation 200 'load' 'kh_word_V' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_9 : Operation 201 [1/1] (0.64ns)   --->   "%icmp_ln879_5 = icmp eq i2 %off_V, 0" [cpp/accel/Accel.h:81->cpp/accel/Accel.cpp:802]   --->   Operation 201 'icmp' 'icmp_ln879_5' <Predicate = true> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 202 [1/1] (0.00ns) (grouped into LUT with out node select_ln879_1)   --->   "%tmp_V = trunc i64 %kh_word_V to i16" [cpp/accel/Accel.h:82->cpp/accel/Accel.cpp:802]   --->   Operation 202 'trunc' 'tmp_V' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 203 [1/1] (0.64ns)   --->   "%icmp_ln879_6 = icmp eq i2 %off_V, 1" [cpp/accel/Accel.h:83->cpp/accel/Accel.cpp:802]   --->   Operation 203 'icmp' 'icmp_ln879_6' <Predicate = true> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 204 [1/1] (0.00ns) (grouped into LUT with out node nc_V)   --->   "%tmp_V_1 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %kh_word_V, i32 16, i32 31)" [cpp/accel/Accel.h:84->cpp/accel/Accel.cpp:802]   --->   Operation 204 'partselect' 'tmp_V_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 205 [1/1] (0.64ns)   --->   "%icmp_ln879_7 = icmp eq i2 %off_V, -2" [cpp/accel/Accel.h:85->cpp/accel/Accel.cpp:802]   --->   Operation 205 'icmp' 'icmp_ln879_7' <Predicate = true> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 206 [1/1] (0.00ns) (grouped into LUT with out node nc_V)   --->   "%tmp_V_2 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %kh_word_V, i32 32, i32 47)" [cpp/accel/Accel.h:86->cpp/accel/Accel.cpp:802]   --->   Operation 206 'partselect' 'tmp_V_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 207 [1/1] (0.00ns) (grouped into LUT with out node select_ln879_1)   --->   "%tmp_V_3 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %kh_word_V, i32 48, i32 63)" [cpp/accel/Accel.h:88->cpp/accel/Accel.cpp:802]   --->   Operation 207 'partselect' 'tmp_V_3' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 208 [1/1] (0.00ns) (grouped into LUT with out node or_ln879_1)   --->   "%xor_ln879 = xor i1 %icmp_ln879_5, true" [cpp/accel/Accel.h:81->cpp/accel/Accel.cpp:802]   --->   Operation 208 'xor' 'xor_ln879' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 209 [1/1] (0.00ns) (grouped into LUT with out node or_ln879_1)   --->   "%and_ln879 = and i1 %icmp_ln879_6, %xor_ln879" [cpp/accel/Accel.h:83->cpp/accel/Accel.cpp:802]   --->   Operation 209 'and' 'and_ln879' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 210 [1/1] (0.00ns) (grouped into LUT with out node and_ln879_1)   --->   "%or_ln879 = or i1 %icmp_ln879_5, %icmp_ln879_6" [cpp/accel/Accel.h:83->cpp/accel/Accel.cpp:802]   --->   Operation 210 'or' 'or_ln879' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 211 [1/1] (0.00ns) (grouped into LUT with out node and_ln879_1)   --->   "%xor_ln879_1 = xor i1 %or_ln879, true" [cpp/accel/Accel.h:83->cpp/accel/Accel.cpp:802]   --->   Operation 211 'xor' 'xor_ln879_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 212 [1/1] (0.61ns) (out node of the LUT)   --->   "%and_ln879_1 = and i1 %icmp_ln879_7, %xor_ln879_1" [cpp/accel/Accel.h:85->cpp/accel/Accel.cpp:802]   --->   Operation 212 'and' 'and_ln879_1' <Predicate = true> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 213 [1/1] (0.00ns) (grouped into LUT with out node nc_V)   --->   "%select_ln879 = select i1 %and_ln879_1, i16 %tmp_V_2, i16 %tmp_V_1" [cpp/accel/Accel.h:85->cpp/accel/Accel.cpp:802]   --->   Operation 213 'select' 'select_ln879' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 214 [1/1] (0.61ns) (out node of the LUT)   --->   "%or_ln879_1 = or i1 %and_ln879_1, %and_ln879" [cpp/accel/Accel.h:85->cpp/accel/Accel.cpp:802]   --->   Operation 214 'or' 'or_ln879_1' <Predicate = true> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 215 [1/1] (0.54ns) (out node of the LUT)   --->   "%select_ln879_1 = select i1 %icmp_ln879_5, i16 %tmp_V, i16 %tmp_V_3" [cpp/accel/Accel.h:85->cpp/accel/Accel.cpp:802]   --->   Operation 215 'select' 'select_ln879_1' <Predicate = true> <Delay = 0.54> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 216 [1/1] (0.54ns) (out node of the LUT)   --->   "%nc_V = select i1 %or_ln879_1, i16 %select_ln879, i16 %select_ln879_1" [cpp/accel/Accel.h:85->cpp/accel/Accel.cpp:802]   --->   Operation 216 'select' 'nc_V' <Predicate = true> <Delay = 0.54> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 10 <SV = 6> <Delay = 5.17>
ST_10 : Operation 217 [1/1] (0.00ns)   --->   "%o_index_V_load_4 = load i16* @o_index_V, align 2" [cpp/accel/Accel.cpp:809]   --->   Operation 217 'load' 'o_index_V_load_4' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 218 [2/2] (5.17ns)   --->   "call fastcc void @bin_conv([4682 x i64]* @wt_mem_V, i16 %nc_V, [4096 x i64]* @dmem_V, i1 %dmem_mode_V_read, i1 %r_V_2, i16 %n_inputs_V_read, i16 %o_index_V_load_4, i1 %icmp_ln879_3, i2 %width_mode_V_read, i2 %norm_mode_V_read)" [cpp/accel/Accel.cpp:811]   --->   Operation 218 'call' <Predicate = true> <Delay = 5.17> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 7> <Delay = 2.68>
ST_11 : Operation 219 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @p_str50) nounwind" [cpp/accel/Accel.cpp:799]   --->   Operation 219 'specloopname' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 220 [1/2] (0.00ns)   --->   "call fastcc void @bin_conv([4682 x i64]* @wt_mem_V, i16 %nc_V, [4096 x i64]* @dmem_V, i1 %dmem_mode_V_read, i1 %r_V_2, i16 %n_inputs_V_read, i16 %o_index_V_load_4, i1 %icmp_ln879_3, i2 %width_mode_V_read, i2 %norm_mode_V_read)" [cpp/accel/Accel.cpp:811]   --->   Operation 220 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_11 : Operation 221 [1/1] (0.00ns)   --->   "%t_V = load i16* @kh_index_V, align 2" [cpp/accel/Accel.cpp:816]   --->   Operation 221 'load' 't_V' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 222 [1/1] (1.48ns)   --->   "%add_ln700_3 = add i16 1, %t_V" [cpp/accel/Accel.cpp:816]   --->   Operation 222 'add' 'add_ln700_3' <Predicate = true> <Delay = 1.48> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 223 [1/1] (1.19ns)   --->   "store i16 %add_ln700_3, i16* @kh_index_V, align 2" [cpp/accel/Accel.cpp:816]   --->   Operation 223 'store' <Predicate = true> <Delay = 1.19>
ST_11 : Operation 224 [1/1] (0.00ns)   --->   "%t_V_1 = load i16* @o_index_V, align 2" [cpp/accel/Accel.cpp:817]   --->   Operation 224 'load' 't_V_1' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 225 [1/1] (1.48ns)   --->   "%add_ln700_4 = add i16 1, %t_V_1" [cpp/accel/Accel.cpp:817]   --->   Operation 225 'add' 'add_ln700_4' <Predicate = true> <Delay = 1.48> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 226 [1/1] (1.19ns)   --->   "store i16 %add_ln700_4, i16* @o_index_V, align 2" [cpp/accel/Accel.cpp:817]   --->   Operation 226 'store' <Predicate = true> <Delay = 1.19>
ST_11 : Operation 227 [1/1] (0.00ns)   --->   "br label %._crit_edge1452" [cpp/accel/Accel.cpp:799]   --->   Operation 227 'br' <Predicate = true> <Delay = 0.00>

State 12 <SV = 5> <Delay = 9.91>
ST_12 : Operation 228 [1/1] (0.00ns)   --->   "%p_0713_2 = phi i16 [ 0, %15 ], [ %select_ln849, %18 ]" [cpp/accel/Accel.cpp:849]   --->   Operation 228 'phi' 'p_0713_2' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 229 [1/1] (0.00ns)   --->   "%p_0882_2 = phi i10 [ 0, %15 ], [ %select_ln849_1, %18 ]" [cpp/accel/Accel.cpp:849]   --->   Operation 229 'phi' 'p_0882_2' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 230 [1/1] (0.00ns)   --->   "%p_0703_0 = phi i16 [ 0, %15 ], [ %i_V_4, %18 ]"   --->   Operation 230 'phi' 'p_0703_0' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 231 [1/1] (0.00ns)   --->   "%ret_V_4 = trunc i16 %p_0703_0 to i1" [cpp/accel/Accel.cpp:838]   --->   Operation 231 'trunc' 'ret_V_4' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 232 [1/1] (1.49ns)   --->   "%icmp_ln838 = icmp eq i16 %p_0703_0, %output_words_V_read" [cpp/accel/Accel.cpp:838]   --->   Operation 232 'icmp' 'icmp_ln838' <Predicate = true> <Delay = 1.49> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 233 [1/1] (1.48ns)   --->   "%i_V_4 = add i16 1, %p_0703_0" [cpp/accel/Accel.cpp:838]   --->   Operation 233 'add' 'i_V_4' <Predicate = true> <Delay = 1.48> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 234 [1/1] (0.00ns)   --->   "br i1 %icmp_ln838, label %19, label %17" [cpp/accel/Accel.cpp:838]   --->   Operation 234 'br' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 235 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str51) nounwind" [cpp/accel/Accel.cpp:838]   --->   Operation 235 'specloopname' <Predicate = (!icmp_ln838)> <Delay = 0.00>
ST_12 : Operation 236 [1/1] (0.00ns)   --->   "%zext_ln544_6 = zext i16 %p_0703_0 to i64" [cpp/accel/Accel.cpp:847]   --->   Operation 236 'zext' 'zext_ln544_6' <Predicate = (!icmp_ln838)> <Delay = 0.00>
ST_12 : Operation 237 [1/1] (0.00ns)   --->   "br i1 %or_ln841_1, label %._crit_edge1455, label %._crit_edge1456" [cpp/accel/Accel.cpp:841]   --->   Operation 237 'br' <Predicate = (!icmp_ln838)> <Delay = 0.00>
ST_12 : Operation 238 [1/1] (0.00ns)   --->   "%zext_ln = call i14 @_ssdm_op_PartSelect.i14.i16.i32.i32(i16 %p_0713_2, i32 1, i32 14)" [cpp/accel/Accel.cpp:838]   --->   Operation 238 'partselect' 'zext_ln' <Predicate = (!icmp_ln838 & !or_ln841_1)> <Delay = 0.00>
ST_12 : Operation 239 [1/1] (2.84ns) (grouped into DSP with root node add_ln838)   --->   "%mul_ln838 = mul i14 %zext_ln, %zext_ln838" [cpp/accel/Accel.cpp:838]   --->   Operation 239 'mul' 'mul_ln838' <Predicate = (!icmp_ln838 & !or_ln841_1)> <Delay = 2.84> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 5.79> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 240 [1/1] (0.00ns)   --->   "%zext_ln838_1 = zext i10 %p_0882_2 to i14" [cpp/accel/Accel.cpp:838]   --->   Operation 240 'zext' 'zext_ln838_1' <Predicate = (!icmp_ln838 & !or_ln841_1)> <Delay = 0.00>
ST_12 : Operation 241 [1/1] (2.95ns) (root node of the DSP)   --->   "%add_ln838 = add i14 %mul_ln838, %zext_ln838_1" [cpp/accel/Accel.cpp:838]   --->   Operation 241 'add' 'add_ln838' <Predicate = (!icmp_ln838 & !or_ln841_1)> <Delay = 2.95> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 5.79> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 242 [1/1] (0.00ns)   --->   "%trunc_ln838 = trunc i16 %p_0713_2 to i1" [cpp/accel/Accel.cpp:838]   --->   Operation 242 'trunc' 'trunc_ln838' <Predicate = (!icmp_ln838 & !or_ln841_1)> <Delay = 0.00>
ST_12 : Operation 243 [1/1] (0.00ns)   --->   "%tmp_6 = call i12 @_ssdm_op_BitConcatenate.i12.i1.i1.i10(i1 %r_V_2, i1 %trunc_ln838, i10 0)" [cpp/accel/Accel.cpp:844]   --->   Operation 243 'bitconcatenate' 'tmp_6' <Predicate = (!icmp_ln838 & !or_ln841_1)> <Delay = 0.00>
ST_12 : Operation 244 [1/1] (0.00ns)   --->   "%zext_ln180_9 = zext i12 %tmp_6 to i14" [cpp/accel/Accel.cpp:844]   --->   Operation 244 'zext' 'zext_ln180_9' <Predicate = (!icmp_ln838 & !or_ln841_1)> <Delay = 0.00>
ST_12 : Operation 245 [1/1] (1.46ns)   --->   "%add_ln180_5 = add i14 %add_ln838, %zext_ln180_9" [cpp/accel/Accel.cpp:844]   --->   Operation 245 'add' 'add_ln180_5' <Predicate = (!icmp_ln838 & !or_ln841_1)> <Delay = 1.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 246 [1/1] (0.00ns)   --->   "%zext_ln180_10 = zext i14 %add_ln180_5 to i64" [cpp/accel/Accel.cpp:844]   --->   Operation 246 'zext' 'zext_ln180_10' <Predicate = (!icmp_ln838 & !or_ln841_1)> <Delay = 0.00>
ST_12 : Operation 247 [1/1] (0.00ns)   --->   "%dmem_V_addr_3 = getelementptr [4096 x i64]* @dmem_V, i64 0, i64 %zext_ln180_10" [cpp/accel/Accel.cpp:844]   --->   Operation 247 'getelementptr' 'dmem_V_addr_3' <Predicate = (!icmp_ln838 & !or_ln841_1)> <Delay = 0.00>
ST_12 : Operation 248 [2/2] (2.66ns)   --->   "%dmem_V_load = load i64* %dmem_V_addr_3, align 8" [cpp/accel/Accel.cpp:844]   --->   Operation 248 'load' 'dmem_V_load' <Predicate = (!icmp_ln838 & !or_ln841_1)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_12 : Operation 249 [1/1] (0.00ns)   --->   "%zext_ln544_12_cast = call i14 @_ssdm_op_PartSelect.i14.i16.i32.i32(i16 %p_0703_0, i32 1, i32 14)" [cpp/accel/Accel.cpp:847]   --->   Operation 249 'partselect' 'zext_ln544_12_cast' <Predicate = (!icmp_ln838 & or_ln841_1)> <Delay = 0.00>
ST_12 : Operation 250 [1/1] (0.00ns)   --->   "%tmp_5 = call i12 @_ssdm_op_BitConcatenate.i12.i1.i1.i10(i1 %r_V_2, i1 %ret_V_4, i10 0)" [cpp/accel/Accel.cpp:847]   --->   Operation 250 'bitconcatenate' 'tmp_5' <Predicate = (!icmp_ln838 & or_ln841_1)> <Delay = 0.00>
ST_12 : Operation 251 [1/1] (0.00ns)   --->   "%zext_ln180_7 = zext i12 %tmp_5 to i14" [cpp/accel/Accel.cpp:847]   --->   Operation 251 'zext' 'zext_ln180_7' <Predicate = (!icmp_ln838 & or_ln841_1)> <Delay = 0.00>
ST_12 : Operation 252 [1/1] (1.46ns)   --->   "%add_ln180_4 = add i14 %zext_ln180_7, %zext_ln544_12_cast" [cpp/accel/Accel.cpp:847]   --->   Operation 252 'add' 'add_ln180_4' <Predicate = (!icmp_ln838 & or_ln841_1)> <Delay = 1.46> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 253 [1/1] (0.00ns)   --->   "%zext_ln180_8 = zext i14 %add_ln180_4 to i64" [cpp/accel/Accel.cpp:847]   --->   Operation 253 'zext' 'zext_ln180_8' <Predicate = (!icmp_ln838 & or_ln841_1)> <Delay = 0.00>
ST_12 : Operation 254 [1/1] (0.00ns)   --->   "%dmem_V_addr_4 = getelementptr [4096 x i64]* @dmem_V, i64 0, i64 %zext_ln180_8" [cpp/accel/Accel.cpp:847]   --->   Operation 254 'getelementptr' 'dmem_V_addr_4' <Predicate = (!icmp_ln838 & or_ln841_1)> <Delay = 0.00>
ST_12 : Operation 255 [2/2] (2.66ns)   --->   "%dmem_V_load_1 = load i64* %dmem_V_addr_4, align 8" [cpp/accel/Accel.cpp:847]   --->   Operation 255 'load' 'dmem_V_load_1' <Predicate = (!icmp_ln838 & or_ln841_1)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_12 : Operation 256 [1/1] (0.00ns)   --->   "ret void" [cpp/accel/Accel.cpp:854]   --->   Operation 256 'ret' <Predicate = (icmp_ln838)> <Delay = 0.00>

State 13 <SV = 6> <Delay = 5.32>
ST_13 : Operation 257 [1/2] (2.66ns)   --->   "%dmem_V_load = load i64* %dmem_V_addr_3, align 8" [cpp/accel/Accel.cpp:844]   --->   Operation 257 'load' 'dmem_V_load' <Predicate = (!or_ln841_1)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_13 : Operation 258 [1/1] (0.00ns)   --->   "%dmem_o_V_addr_1 = getelementptr [128 x i64]* %dmem_o_V, i64 0, i64 %zext_ln544_6" [cpp/accel/Accel.cpp:844]   --->   Operation 258 'getelementptr' 'dmem_o_V_addr_1' <Predicate = (!or_ln841_1)> <Delay = 0.00>
ST_13 : Operation 259 [1/1] (2.66ns)   --->   "store i64 %dmem_V_load, i64* %dmem_o_V_addr_1, align 8" [cpp/accel/Accel.cpp:844]   --->   Operation 259 'store' <Predicate = (!or_ln841_1)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_13 : Operation 260 [1/1] (0.00ns)   --->   "br label %18" [cpp/accel/Accel.cpp:845]   --->   Operation 260 'br' <Predicate = (!or_ln841_1)> <Delay = 0.00>
ST_13 : Operation 261 [1/2] (2.66ns)   --->   "%dmem_V_load_1 = load i64* %dmem_V_addr_4, align 8" [cpp/accel/Accel.cpp:847]   --->   Operation 261 'load' 'dmem_V_load_1' <Predicate = (or_ln841_1)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_13 : Operation 262 [1/1] (0.00ns)   --->   "%dmem_o_V_addr = getelementptr [128 x i64]* %dmem_o_V, i64 0, i64 %zext_ln544_6" [cpp/accel/Accel.cpp:847]   --->   Operation 262 'getelementptr' 'dmem_o_V_addr' <Predicate = (or_ln841_1)> <Delay = 0.00>
ST_13 : Operation 263 [1/1] (2.66ns)   --->   "store i64 %dmem_V_load_1, i64* %dmem_o_V_addr, align 8" [cpp/accel/Accel.cpp:847]   --->   Operation 263 'store' <Predicate = (or_ln841_1)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_13 : Operation 264 [1/1] (0.00ns)   --->   "br label %18"   --->   Operation 264 'br' <Predicate = (or_ln841_1)> <Delay = 0.00>
ST_13 : Operation 265 [1/1] (1.41ns)   --->   "%img_off_V_1 = add i10 %p_0882_2, 1" [cpp/accel/Accel.cpp:849]   --->   Operation 265 'add' 'img_off_V_1' <Predicate = true> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 266 [1/1] (1.29ns)   --->   "%icmp_ln879_4 = icmp eq i10 %img_off_V_1, %zext_ln841" [cpp/accel/Accel.cpp:849]   --->   Operation 266 'icmp' 'icmp_ln879_4' <Predicate = true> <Delay = 1.29> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.29> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 267 [1/1] (1.48ns)   --->   "%img_idx_V_1 = add i16 %p_0713_2, 1" [cpp/accel/Accel.cpp:851]   --->   Operation 267 'add' 'img_idx_V_1' <Predicate = true> <Delay = 1.48> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 268 [1/1] (0.54ns)   --->   "%select_ln849 = select i1 %icmp_ln879_4, i16 %img_idx_V_1, i16 %p_0713_2" [cpp/accel/Accel.cpp:849]   --->   Operation 268 'select' 'select_ln849' <Predicate = true> <Delay = 0.54> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 269 [1/1] (0.45ns)   --->   "%select_ln849_1 = select i1 %icmp_ln879_4, i10 0, i10 %img_off_V_1" [cpp/accel/Accel.cpp:849]   --->   Operation 269 'select' 'select_ln849_1' <Predicate = true> <Delay = 0.45> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.45> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 270 [1/1] (0.00ns)   --->   "br label %16" [cpp/accel/Accel.cpp:838]   --->   Operation 270 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.51ns
The critical path consists of the following:
	wire read on port 'width_mode_V' (cpp/accel/Accel.cpp:697) [35]  (0 ns)
	'shl' operation ('val', cpp/accel/Accel.cpp:746) [61]  (1.51 ns)

 <State 2>: 2.66ns
The critical path consists of the following:
	'phi' operation ('i.V') with incoming values : ('i.V', cpp/accel/Accel.cpp:749) [72]  (0 ns)
	'getelementptr' operation ('dmem_i_V_addr_2', cpp/accel/Accel.cpp:758) [91]  (0 ns)
	'load' operation ('dmem_i_V_load_2', cpp/accel/Accel.cpp:758) on array 'dmem_i_V' [92]  (2.66 ns)

 <State 3>: 5.33ns
The critical path consists of the following:
	'load' operation ('dmem_i_V_load_2', cpp/accel/Accel.cpp:758) on array 'dmem_i_V' [92]  (2.66 ns)
	'store' operation ('store_ln758', cpp/accel/Accel.cpp:758) of variable 'dmem_i_V_load_2', cpp/accel/Accel.cpp:758 on array 'dmem_V' [93]  (2.66 ns)

 <State 4>: 2.66ns
The critical path consists of the following:
	'phi' operation ('i.V') with incoming values : ('i.V', cpp/accel/Accel.cpp:768) [137]  (0 ns)
	'getelementptr' operation ('wt_i_V_addr', cpp/accel/Accel.cpp:769) [152]  (0 ns)
	'load' operation ('wt_i_V_load', cpp/accel/Accel.cpp:769) on array 'wt_i_V' [153]  (2.66 ns)

 <State 5>: 5.33ns
The critical path consists of the following:
	'load' operation ('wt_i_V_load', cpp/accel/Accel.cpp:769) on array 'wt_i_V' [153]  (2.66 ns)
	'store' operation ('store_ln769', cpp/accel/Accel.cpp:769) of variable 'wt_i_V_load', cpp/accel/Accel.cpp:769 on array 'wt_mem_V' [154]  (2.66 ns)

 <State 6>: 2.66ns
The critical path consists of the following:
	'phi' operation ('i.V') with incoming values : ('i.V', cpp/accel/Accel.cpp:774) [159]  (0 ns)
	'getelementptr' operation ('kh_i_V_addr', cpp/accel/Accel.cpp:775) [167]  (0 ns)
	'load' operation ('kh_i_V_load', cpp/accel/Accel.cpp:775) on array 'kh_i_V' [168]  (2.66 ns)

 <State 7>: 5.33ns
The critical path consists of the following:
	'load' operation ('kh_i_V_load', cpp/accel/Accel.cpp:775) on array 'kh_i_V' [168]  (2.66 ns)
	'store' operation ('store_ln775', cpp/accel/Accel.cpp:775) of variable 'kh_i_V_load', cpp/accel/Accel.cpp:775 on array 'kh_mem_V' [170]  (2.66 ns)

 <State 8>: 2.69ns
The critical path consists of the following:
	'load' operation ('o_index_V_load_3', cpp/accel/Accel.cpp:831) on static variable 'o_index_V' [179]  (0 ns)
	'add' operation ('add_ln700_2', cpp/accel/Accel.cpp:831) [180]  (1.49 ns)
	'store' operation ('store_ln831', cpp/accel/Accel.cpp:831) of variable 'add_ln700_2', cpp/accel/Accel.cpp:831 on static variable 'o_index_V' [181]  (1.2 ns)

 <State 9>: 3.76ns
The critical path consists of the following:
	'load' operation ('kh_word.V', cpp/accel/Accel.h:79->cpp/accel/Accel.cpp:802) on array 'kh_mem_V' [198]  (2.66 ns)
	'select' operation ('select_ln879_1', cpp/accel/Accel.h:85->cpp/accel/Accel.cpp:802) [214]  (0.549 ns)
	'select' operation ('comp.V', cpp/accel/Accel.h:85->cpp/accel/Accel.cpp:802) [215]  (0.549 ns)

 <State 10>: 5.18ns
The critical path consists of the following:
	'load' operation ('o_index_V_load_4', cpp/accel/Accel.cpp:809) on static variable 'o_index_V' [216]  (0 ns)
	'call' operation ('call_ln811', cpp/accel/Accel.cpp:811) to 'bin_conv' [218]  (5.18 ns)

 <State 11>: 2.69ns
The critical path consists of the following:
	'load' operation ('t.V', cpp/accel/Accel.cpp:816) on static variable 'kh_index_V' [219]  (0 ns)
	'add' operation ('add_ln700_3', cpp/accel/Accel.cpp:816) [220]  (1.49 ns)
	'store' operation ('store_ln816', cpp/accel/Accel.cpp:816) of variable 'add_ln700_3', cpp/accel/Accel.cpp:816 on static variable 'kh_index_V' [221]  (1.2 ns)

 <State 12>: 9.92ns
The critical path consists of the following:
	'phi' operation ('p_0713_2', cpp/accel/Accel.cpp:849) with incoming values : ('select_ln849', cpp/accel/Accel.cpp:849) [254]  (0 ns)
	'mul' operation of DSP[269] ('mul_ln838', cpp/accel/Accel.cpp:838) [267]  (2.84 ns)
	'add' operation of DSP[269] ('add_ln838', cpp/accel/Accel.cpp:838) [269]  (2.95 ns)
	'add' operation ('add_ln180_5', cpp/accel/Accel.cpp:844) [273]  (1.46 ns)
	'getelementptr' operation ('dmem_V_addr_3', cpp/accel/Accel.cpp:844) [275]  (0 ns)
	'load' operation ('dmem_V_load', cpp/accel/Accel.cpp:844) on array 'dmem_V' [276]  (2.66 ns)

 <State 13>: 5.33ns
The critical path consists of the following:
	'load' operation ('dmem_V_load', cpp/accel/Accel.cpp:844) on array 'dmem_V' [276]  (2.66 ns)
	'store' operation ('store_ln844', cpp/accel/Accel.cpp:844) of variable 'dmem_V_load', cpp/accel/Accel.cpp:844 on array 'dmem_o_V' [278]  (2.66 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
