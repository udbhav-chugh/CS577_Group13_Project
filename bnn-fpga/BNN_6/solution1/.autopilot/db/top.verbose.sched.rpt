

================================================================
== Vivado HLS Report for 'top'
================================================================
* Date:           Sun Mar 28 14:40:27 2021

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        BNN_6
* Solution:       solution1
* Product family: kintex7
* Target device:  xc7k70t-fbv676-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  12.00|    10.489|        1.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+--------+------+--------+---------+
    |    Latency    |    Interval   | Pipeline|
    |  min |   max  |  min |   max  |   Type  |
    +------+--------+------+--------+---------+
    |  4819|  349259|  4819|  349259|   none  |
    +------+--------+------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------+------+------+----------+-----------+-----------+------+----------+
        |               |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        |   Loop Name   |  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------+------+------+----------+-----------+-----------+------+----------+
        |- LOOP_DMEM_I  |    64|    64|         2|          1|          1|    64|    yes   |
        |- LOOP_WT_I    |  4682|  4682|         2|          1|          1|  4682|    yes   |
        |- LOOP_KH_I    |    64|    64|         2|          1|          1|    64|    yes   |
        +---------------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2
  * Pipeline-1: initiation interval (II) = 1, depth = 2
  * Pipeline-2: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 15
* Pipeline : 3
  Pipeline-0 : II = 1, D = 2, States = { 2 3 }
  Pipeline-1 : II = 1, D = 2, States = { 5 6 }
  Pipeline-2 : II = 1, D = 2, States = { 8 9 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 4 3 
3 --> 2 
4 --> 5 
5 --> 7 6 
6 --> 5 
7 --> 8 
8 --> 10 9 
9 --> 8 
10 --> 11 12 13 
11 --> 13 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.50>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([4682 x i64]* %wt_i_V), !map !879"   --->   Operation 16 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([64 x i64]* %kh_i_V), !map !885"   --->   Operation 17 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([2048 x i64]* %dmem_i_V), !map !891"   --->   Operation 18 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([128 x i64]* %dmem_o_V), !map !897"   --->   Operation 19 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16 %n_inputs_V), !map !903"   --->   Operation 20 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16 %n_outputs_V), !map !909"   --->   Operation 21 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16 %input_words_V), !map !913"   --->   Operation 22 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16 %output_words_V), !map !917"   --->   Operation 23 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i3 %layer_mode_V), !map !921"   --->   Operation 24 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1 %dmem_mode_V), !map !925"   --->   Operation 25 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i2 %width_mode_V), !map !929"   --->   Operation 26 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i2 %norm_mode_V), !map !933"   --->   Operation 27 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%norm_mode_V_read = call i2 @_ssdm_op_Read.ap_auto.i2(i2 %norm_mode_V)" [cpp/accel/Accel.cpp:725]   --->   Operation 28 'read' 'norm_mode_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%width_mode_V_read = call i2 @_ssdm_op_Read.ap_auto.i2(i2 %width_mode_V)" [cpp/accel/Accel.cpp:725]   --->   Operation 29 'read' 'width_mode_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%dmem_mode_V_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %dmem_mode_V)" [cpp/accel/Accel.cpp:725]   --->   Operation 30 'read' 'dmem_mode_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%layer_mode_V_read = call i3 @_ssdm_op_Read.ap_auto.i3(i3 %layer_mode_V)" [cpp/accel/Accel.cpp:725]   --->   Operation 31 'read' 'layer_mode_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%n_outputs_V_read = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %n_outputs_V)" [cpp/accel/Accel.cpp:725]   --->   Operation 32 'read' 'n_outputs_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%dmem_o_V_addr = getelementptr [128 x i64]* %dmem_o_V, i64 0, i64 0" [cpp/accel/Accel.cpp:725]   --->   Operation 33 'getelementptr' 'dmem_o_V_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @top_str) nounwind"   --->   Operation 34 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%layer_type_V = call i2 @_ssdm_op_PartSelect.i2.i3.i32.i32(i3 %layer_mode_V_read, i32 1, i32 2)" [cpp/accel/Accel.cpp:736]   --->   Operation 35 'partselect' 'layer_type_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%trunc_ln792 = trunc i3 %layer_mode_V_read to i1" [cpp/accel/Accel.cpp:760]   --->   Operation 36 'trunc' 'trunc_ln792' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node t_V)   --->   "%p_Result_s = xor i1 %trunc_ln792, true" [cpp/accel/Accel.cpp:760]   --->   Operation 37 'xor' 'p_Result_s' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%p_Val2_s = load i16* @kh_index_V, align 2" [cpp/accel/Accel.cpp:764]   --->   Operation 38 'load' 'p_Val2_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%trunc_ln700 = trunc i16 %p_Val2_s to i1" [cpp/accel/Accel.cpp:821]   --->   Operation 39 'trunc' 'trunc_ln700' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%o_index_V_load = load i16* @o_index_V, align 2" [cpp/accel/Accel.cpp:821]   --->   Operation 40 'load' 'o_index_V_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.61ns) (out node of the LUT)   --->   "%t_V = and i1 %trunc_ln700, %p_Result_s" [cpp/accel/Accel.cpp:760]   --->   Operation 41 'and' 't_V' <Predicate = true> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%zext_ln760 = zext i1 %t_V to i16" [cpp/accel/Accel.cpp:760]   --->   Operation 42 'zext' 'zext_ln760' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.54ns)   --->   "%t_V_1 = select i1 %trunc_ln792, i16 0, i16 %o_index_V_load" [cpp/accel/Accel.cpp:760]   --->   Operation 43 'select' 't_V_1' <Predicate = true> <Delay = 0.54> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (0.61ns)   --->   "%r_V_2 = xor i1 %dmem_mode_V_read, true" [cpp/accel/Accel.cpp:768]   --->   Operation 44 'xor' 'r_V_2' <Predicate = true> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%shl_ln = call i3 @_ssdm_op_BitConcatenate.i3.i2.i1(i2 %width_mode_V_read, i1 false)" [cpp/accel/Accel.cpp:771]   --->   Operation 45 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%zext_ln771 = zext i3 %shl_ln to i16" [cpp/accel/Accel.cpp:771]   --->   Operation 46 'zext' 'zext_ln771' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln771_1 = zext i3 %shl_ln to i5" [cpp/accel/Accel.cpp:771]   --->   Operation 47 'zext' 'zext_ln771_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (1.50ns)   --->   "%words_per_image_V = shl i5 1, %zext_ln771_1" [cpp/accel/Accel.cpp:771]   --->   Operation 48 'shl' 'words_per_image_V' <Predicate = true> <Delay = 1.50> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.50> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 49 [1/1] (0.64ns)   --->   "%icmp_ln879 = icmp eq i2 %layer_type_V, 1" [cpp/accel/Accel.cpp:776]   --->   Operation 49 'icmp' 'icmp_ln879' <Predicate = true> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%zext_ln879 = zext i5 %words_per_image_V to i10" [cpp/accel/Accel.cpp:781]   --->   Operation 50 'zext' 'zext_ln879' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.64ns)   --->   "%icmp_ln879_1 = icmp eq i2 %layer_type_V, 0" [cpp/accel/Accel.cpp:781]   --->   Operation 51 'icmp' 'icmp_ln879_1' <Predicate = true> <Delay = 0.64> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 52 [1/1] (1.06ns)   --->   "br label %0" [cpp/accel/Accel.cpp:774]   --->   Operation 52 'br' <Predicate = true> <Delay = 1.06>

State 2 <SV = 1> <Delay = 5.05>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%p_0700_0 = phi i16 [ 0, %._crit_edge ], [ %select_ln786, %LOOP_DMEM_I_end ]" [cpp/accel/Accel.cpp:786]   --->   Operation 53 'phi' 'p_0700_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%p_0868_0 = phi i10 [ 0, %._crit_edge ], [ %select_ln786_1, %LOOP_DMEM_I_end ]" [cpp/accel/Accel.cpp:786]   --->   Operation 54 'phi' 'p_0868_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%p_0218_0 = phi i7 [ 0, %._crit_edge ], [ %i_V_2, %LOOP_DMEM_I_end ]"   --->   Operation 55 'phi' 'p_0218_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (1.18ns)   --->   "%icmp_ln887 = icmp eq i7 %p_0218_0, -64" [cpp/accel/Accel.cpp:774]   --->   Operation 56 'icmp' 'icmp_ln887' <Predicate = true> <Delay = 1.18> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64)"   --->   Operation 57 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (1.37ns)   --->   "%i_V_2 = add i7 %p_0218_0, 1" [cpp/accel/Accel.cpp:774]   --->   Operation 58 'add' 'i_V_2' <Predicate = true> <Delay = 1.37> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "br i1 %icmp_ln887, label %.preheader1441.preheader, label %LOOP_DMEM_I_begin" [cpp/accel/Accel.cpp:774]   --->   Operation 59 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%ret_V_7 = trunc i16 %p_0700_0 to i1" [cpp/accel/Accel.cpp:774]   --->   Operation 60 'trunc' 'ret_V_7' <Predicate = (!icmp_ln887)> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%ret_V_5 = trunc i7 %p_0218_0 to i1" [cpp/accel/Accel.cpp:774]   --->   Operation 61 'trunc' 'ret_V_5' <Predicate = (!icmp_ln887)> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%ret_V_3 = trunc i7 %p_0218_0 to i6" [cpp/accel/Accel.cpp:774]   --->   Operation 62 'trunc' 'ret_V_3' <Predicate = (!icmp_ln887)> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "br i1 %icmp_ln879_1, label %2, label %3" [cpp/accel/Accel.cpp:781]   --->   Operation 63 'br' <Predicate = (!icmp_ln887 & !icmp_ln879)> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%ret_V_6 = call i6 @_ssdm_op_PartSelect.i6.i7.i32.i32(i7 %p_0218_0, i32 1, i32 6)" [cpp/accel/Accel.cpp:784]   --->   Operation 64 'partselect' 'ret_V_6' <Predicate = (!icmp_ln887 & !icmp_ln879 & !icmp_ln879_1)> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%zext_ln544_3 = zext i7 %p_0218_0 to i64" [cpp/accel/Accel.cpp:784]   --->   Operation 65 'zext' 'zext_ln544_3' <Predicate = (!icmp_ln887 & !icmp_ln879 & !icmp_ln879_1)> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%dmem_i_V_addr_2 = getelementptr [2048 x i64]* %dmem_i_V, i64 0, i64 %zext_ln544_3" [cpp/accel/Accel.cpp:784]   --->   Operation 66 'getelementptr' 'dmem_i_V_addr_2' <Predicate = (!icmp_ln887 & !icmp_ln879 & !icmp_ln879_1)> <Delay = 0.00>
ST_2 : Operation 67 [2/2] (2.66ns)   --->   "%dmem_i_V_load_2 = load i64* %dmem_i_V_addr_2, align 8" [cpp/accel/Accel.cpp:784]   --->   Operation 67 'load' 'dmem_i_V_load_2' <Predicate = (!icmp_ln887 & !icmp_ln879 & !icmp_ln879_1)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%zext_ln544_2 = zext i7 %p_0218_0 to i64" [cpp/accel/Accel.cpp:782]   --->   Operation 68 'zext' 'zext_ln544_2' <Predicate = (!icmp_ln887 & !icmp_ln879 & icmp_ln879_1)> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%dmem_i_V_addr_1 = getelementptr [2048 x i64]* %dmem_i_V, i64 0, i64 %zext_ln544_2" [cpp/accel/Accel.cpp:782]   --->   Operation 69 'getelementptr' 'dmem_i_V_addr_1' <Predicate = (!icmp_ln887 & !icmp_ln879 & icmp_ln879_1)> <Delay = 0.00>
ST_2 : Operation 70 [2/2] (2.66ns)   --->   "%dmem_i_V_load_1 = load i64* %dmem_i_V_addr_1, align 8" [cpp/accel/Accel.cpp:782]   --->   Operation 70 'load' 'dmem_i_V_load_1' <Predicate = (!icmp_ln887 & !icmp_ln879 & icmp_ln879_1)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_2 : Operation 71 [1/1] (0.00ns)   --->   "br label %LOOP_DMEM_I_end"   --->   Operation 71 'br' <Predicate = (!icmp_ln887 & !icmp_ln879)> <Delay = 0.00>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%ret_V_9 = call i15 @_ssdm_op_PartSelect.i15.i16.i32.i32(i16 %p_0700_0, i32 1, i32 15)" [cpp/accel/Accel.cpp:778]   --->   Operation 72 'partselect' 'ret_V_9' <Predicate = (!icmp_ln887 & icmp_ln879)> <Delay = 0.00>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "%ret_V_8 = zext i15 %ret_V_9 to i16" [cpp/accel/Accel.cpp:778]   --->   Operation 73 'zext' 'ret_V_8' <Predicate = (!icmp_ln887 & icmp_ln879)> <Delay = 0.00>
ST_2 : Operation 74 [1/1] (2.54ns)   --->   "%r_V = shl i16 %ret_V_8, %zext_ln771" [cpp/accel/Accel.cpp:779]   --->   Operation 74 'shl' 'r_V' <Predicate = (!icmp_ln887 & icmp_ln879)> <Delay = 2.54> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.50> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 75 [1/1] (0.00ns)   --->   "%trunc_ln180 = trunc i16 %r_V to i14" [cpp/accel/Accel.cpp:779]   --->   Operation 75 'trunc' 'trunc_ln180' <Predicate = (!icmp_ln887 & icmp_ln879)> <Delay = 0.00>
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "%zext_ln180 = zext i10 %p_0868_0 to i14" [cpp/accel/Accel.cpp:779]   --->   Operation 76 'zext' 'zext_ln180' <Predicate = (!icmp_ln887 & icmp_ln879)> <Delay = 0.00>
ST_2 : Operation 77 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln180_2 = add i14 %trunc_ln180, %zext_ln180" [cpp/accel/Accel.cpp:779]   --->   Operation 77 'add' 'add_ln180_2' <Predicate = (!icmp_ln887 & icmp_ln879)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.25> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%tmp_3 = call i12 @_ssdm_op_BitConcatenate.i12.i1.i1.i10(i1 %dmem_mode_V_read, i1 %ret_V_7, i10 0)" [cpp/accel/Accel.cpp:779]   --->   Operation 78 'bitconcatenate' 'tmp_3' <Predicate = (!icmp_ln887 & icmp_ln879)> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (0.00ns)   --->   "%zext_ln180_4 = zext i12 %tmp_3 to i14" [cpp/accel/Accel.cpp:779]   --->   Operation 79 'zext' 'zext_ln180_4' <Predicate = (!icmp_ln887 & icmp_ln879)> <Delay = 0.00>
ST_2 : Operation 80 [1/1] (2.51ns) (root node of TernaryAdder)   --->   "%add_ln180 = add i14 %add_ln180_2, %zext_ln180_4" [cpp/accel/Accel.cpp:779]   --->   Operation 80 'add' 'add_ln180' <Predicate = (!icmp_ln887 & icmp_ln879)> <Delay = 2.51> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.25> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 81 [1/1] (0.00ns)   --->   "%zext_ln544 = zext i7 %p_0218_0 to i64" [cpp/accel/Accel.cpp:779]   --->   Operation 81 'zext' 'zext_ln544' <Predicate = (!icmp_ln887 & icmp_ln879)> <Delay = 0.00>
ST_2 : Operation 82 [1/1] (0.00ns)   --->   "%dmem_i_V_addr = getelementptr [2048 x i64]* %dmem_i_V, i64 0, i64 %zext_ln544" [cpp/accel/Accel.cpp:779]   --->   Operation 82 'getelementptr' 'dmem_i_V_addr' <Predicate = (!icmp_ln887 & icmp_ln879)> <Delay = 0.00>
ST_2 : Operation 83 [2/2] (2.66ns)   --->   "%dmem_i_V_load = load i64* %dmem_i_V_addr, align 8" [cpp/accel/Accel.cpp:779]   --->   Operation 83 'load' 'dmem_i_V_load' <Predicate = (!icmp_ln887 & icmp_ln879)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_2 : Operation 84 [1/1] (1.41ns)   --->   "%img_off_V = add i10 %p_0868_0, 1" [cpp/accel/Accel.cpp:786]   --->   Operation 84 'add' 'img_off_V' <Predicate = (!icmp_ln887)> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 85 [1/1] (1.29ns)   --->   "%icmp_ln879_2 = icmp eq i10 %img_off_V, %zext_ln879" [cpp/accel/Accel.cpp:786]   --->   Operation 85 'icmp' 'icmp_ln879_2' <Predicate = (!icmp_ln887)> <Delay = 1.29> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 86 [1/1] (1.48ns)   --->   "%img_idx_V = add i16 %p_0700_0, 1" [cpp/accel/Accel.cpp:788]   --->   Operation 86 'add' 'img_idx_V' <Predicate = (!icmp_ln887)> <Delay = 1.48> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 87 [1/1] (0.54ns)   --->   "%select_ln786 = select i1 %icmp_ln879_2, i16 %img_idx_V, i16 %p_0700_0" [cpp/accel/Accel.cpp:786]   --->   Operation 87 'select' 'select_ln786' <Predicate = (!icmp_ln887)> <Delay = 0.54> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 88 [1/1] (0.45ns)   --->   "%select_ln786_1 = select i1 %icmp_ln879_2, i10 0, i10 %img_off_V" [cpp/accel/Accel.cpp:786]   --->   Operation 88 'select' 'select_ln786_1' <Predicate = (!icmp_ln887)> <Delay = 0.45> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 3 <SV = 2> <Delay = 5.32>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str46) nounwind" [cpp/accel/Accel.cpp:774]   --->   Operation 89 'specloopname' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str46)" [cpp/accel/Accel.cpp:774]   --->   Operation 90 'specregionbegin' 'tmp' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str15) nounwind" [cpp/accel/Accel.cpp:775]   --->   Operation 91 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "br i1 %icmp_ln879, label %_ZNK11ap_int_baseILi16ELb0EElsILi34EEE7ap_uintILi16EERKS_IXT_ELb1EE.exit, label %1" [cpp/accel/Accel.cpp:776]   --->   Operation 92 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "%ret_V_4 = zext i6 %ret_V_6 to i7" [cpp/accel/Accel.cpp:784]   --->   Operation 93 'zext' 'ret_V_4' <Predicate = (!icmp_ln879 & !icmp_ln879_1)> <Delay = 0.00>
ST_3 : Operation 94 [1/1] (0.00ns)   --->   "%tmp_5 = call i12 @_ssdm_op_BitConcatenate.i12.i1.i1.i3.i7(i1 %dmem_mode_V_read, i1 %ret_V_5, i3 0, i7 %ret_V_4)" [cpp/accel/Accel.cpp:784]   --->   Operation 94 'bitconcatenate' 'tmp_5' <Predicate = (!icmp_ln879 & !icmp_ln879_1)> <Delay = 0.00>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "%zext_ln180_2 = zext i12 %tmp_5 to i64" [cpp/accel/Accel.cpp:784]   --->   Operation 95 'zext' 'zext_ln180_2' <Predicate = (!icmp_ln879 & !icmp_ln879_1)> <Delay = 0.00>
ST_3 : Operation 96 [1/1] (0.00ns)   --->   "%dmem_V_addr_2 = getelementptr [4096 x i64]* @dmem_V, i64 0, i64 %zext_ln180_2" [cpp/accel/Accel.cpp:784]   --->   Operation 96 'getelementptr' 'dmem_V_addr_2' <Predicate = (!icmp_ln879 & !icmp_ln879_1)> <Delay = 0.00>
ST_3 : Operation 97 [1/2] (2.66ns)   --->   "%dmem_i_V_load_2 = load i64* %dmem_i_V_addr_2, align 8" [cpp/accel/Accel.cpp:784]   --->   Operation 97 'load' 'dmem_i_V_load_2' <Predicate = (!icmp_ln879 & !icmp_ln879_1)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_3 : Operation 98 [1/1] (2.66ns)   --->   "store i64 %dmem_i_V_load_2, i64* %dmem_V_addr_2, align 8" [cpp/accel/Accel.cpp:784]   --->   Operation 98 'store' <Predicate = (!icmp_ln879 & !icmp_ln879_1)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_3 : Operation 99 [1/1] (0.00ns)   --->   "br label %4"   --->   Operation 99 'br' <Predicate = (!icmp_ln879 & !icmp_ln879_1)> <Delay = 0.00>
ST_3 : Operation 100 [1/1] (0.00ns)   --->   "%tmp_4 = call i12 @_ssdm_op_BitConcatenate.i12.i1.i5.i6(i1 %dmem_mode_V_read, i5 0, i6 %ret_V_3)" [cpp/accel/Accel.cpp:782]   --->   Operation 100 'bitconcatenate' 'tmp_4' <Predicate = (!icmp_ln879 & icmp_ln879_1)> <Delay = 0.00>
ST_3 : Operation 101 [1/1] (0.00ns)   --->   "%zext_ln180_1 = zext i12 %tmp_4 to i64" [cpp/accel/Accel.cpp:782]   --->   Operation 101 'zext' 'zext_ln180_1' <Predicate = (!icmp_ln879 & icmp_ln879_1)> <Delay = 0.00>
ST_3 : Operation 102 [1/1] (0.00ns)   --->   "%dmem_V_addr_1 = getelementptr [4096 x i64]* @dmem_V, i64 0, i64 %zext_ln180_1" [cpp/accel/Accel.cpp:782]   --->   Operation 102 'getelementptr' 'dmem_V_addr_1' <Predicate = (!icmp_ln879 & icmp_ln879_1)> <Delay = 0.00>
ST_3 : Operation 103 [1/2] (2.66ns)   --->   "%dmem_i_V_load_1 = load i64* %dmem_i_V_addr_1, align 8" [cpp/accel/Accel.cpp:782]   --->   Operation 103 'load' 'dmem_i_V_load_1' <Predicate = (!icmp_ln879 & icmp_ln879_1)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_3 : Operation 104 [1/1] (2.66ns)   --->   "store i64 %dmem_i_V_load_1, i64* %dmem_V_addr_1, align 8" [cpp/accel/Accel.cpp:782]   --->   Operation 104 'store' <Predicate = (!icmp_ln879 & icmp_ln879_1)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_3 : Operation 105 [1/1] (0.00ns)   --->   "br label %4" [cpp/accel/Accel.cpp:782]   --->   Operation 105 'br' <Predicate = (!icmp_ln879 & icmp_ln879_1)> <Delay = 0.00>
ST_3 : Operation 106 [1/1] (0.00ns)   --->   "%zext_ln180_5 = zext i14 %add_ln180 to i64" [cpp/accel/Accel.cpp:779]   --->   Operation 106 'zext' 'zext_ln180_5' <Predicate = (icmp_ln879)> <Delay = 0.00>
ST_3 : Operation 107 [1/1] (0.00ns)   --->   "%dmem_V_addr = getelementptr [4096 x i64]* @dmem_V, i64 0, i64 %zext_ln180_5" [cpp/accel/Accel.cpp:779]   --->   Operation 107 'getelementptr' 'dmem_V_addr' <Predicate = (icmp_ln879)> <Delay = 0.00>
ST_3 : Operation 108 [1/2] (2.66ns)   --->   "%dmem_i_V_load = load i64* %dmem_i_V_addr, align 8" [cpp/accel/Accel.cpp:779]   --->   Operation 108 'load' 'dmem_i_V_load' <Predicate = (icmp_ln879)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_3 : Operation 109 [1/1] (2.66ns)   --->   "store i64 %dmem_i_V_load, i64* %dmem_V_addr, align 8" [cpp/accel/Accel.cpp:779]   --->   Operation 109 'store' <Predicate = (icmp_ln879)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_3 : Operation 110 [1/1] (0.00ns)   --->   "br label %LOOP_DMEM_I_end" [cpp/accel/Accel.cpp:780]   --->   Operation 110 'br' <Predicate = (icmp_ln879)> <Delay = 0.00>
ST_3 : Operation 111 [1/1] (0.00ns)   --->   "%empty_28 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str46, i32 %tmp)" [cpp/accel/Accel.cpp:790]   --->   Operation 111 'specregionend' 'empty_28' <Predicate = (!icmp_ln887)> <Delay = 0.00>
ST_3 : Operation 112 [1/1] (0.00ns)   --->   "br label %0" [cpp/accel/Accel.cpp:774]   --->   Operation 112 'br' <Predicate = (!icmp_ln887)> <Delay = 0.00>

State 4 <SV = 2> <Delay = 1.06>
ST_4 : Operation 113 [1/1] (1.06ns)   --->   "br label %.preheader1441" [cpp/accel/Accel.cpp:794]   --->   Operation 113 'br' <Predicate = true> <Delay = 1.06>

State 5 <SV = 3> <Delay = 2.66>
ST_5 : Operation 114 [1/1] (0.00ns)   --->   "%p_0481_0 = phi i13 [ %i_V, %LOOP_WT_I ], [ 0, %.preheader1441.preheader ]"   --->   Operation 114 'phi' 'p_0481_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 115 [1/1] (1.39ns)   --->   "%icmp_ln887_1 = icmp eq i13 %p_0481_0, -3510" [cpp/accel/Accel.cpp:794]   --->   Operation 115 'icmp' 'icmp_ln887_1' <Predicate = true> <Delay = 1.39> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 116 [1/1] (0.00ns)   --->   "%empty_29 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4682, i64 4682, i64 4682)"   --->   Operation 116 'speclooptripcount' 'empty_29' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 117 [1/1] (1.45ns)   --->   "%i_V = add i13 %p_0481_0, 1" [cpp/accel/Accel.cpp:794]   --->   Operation 117 'add' 'i_V' <Predicate = true> <Delay = 1.45> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 118 [1/1] (0.00ns)   --->   "br i1 %icmp_ln887_1, label %.preheader.preheader, label %LOOP_WT_I" [cpp/accel/Accel.cpp:794]   --->   Operation 118 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node add_ln180_1)   --->   "%ret_V = trunc i13 %p_0481_0 to i1" [cpp/accel/Accel.cpp:794]   --->   Operation 119 'trunc' 'ret_V' <Predicate = (!icmp_ln887_1)> <Delay = 0.00>
ST_5 : Operation 120 [1/1] (0.00ns) (grouped into LUT with out node add_ln180_1)   --->   "%tmp_7 = call i12 @_ssdm_op_PartSelect.i12.i13.i32.i32(i13 %p_0481_0, i32 1, i32 12)" [cpp/accel/Accel.cpp:796]   --->   Operation 120 'partselect' 'tmp_7' <Predicate = (!icmp_ln887_1)> <Delay = 0.00>
ST_5 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node add_ln180_1)   --->   "%zext_ln1372 = zext i12 %tmp_7 to i13" [cpp/accel/Accel.cpp:796]   --->   Operation 121 'zext' 'zext_ln1372' <Predicate = (!icmp_ln887_1)> <Delay = 0.00>
ST_5 : Operation 122 [1/1] (0.00ns) (grouped into LUT with out node add_ln180_1)   --->   "%select_ln180 = select i1 %ret_V, i13 2341, i13 0" [cpp/accel/Accel.cpp:796]   --->   Operation 122 'select' 'select_ln180' <Predicate = (!icmp_ln887_1)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 123 [1/1] (1.45ns) (out node of the LUT)   --->   "%add_ln180_1 = add i13 %select_ln180, %zext_ln1372" [cpp/accel/Accel.cpp:796]   --->   Operation 123 'add' 'add_ln180_1' <Predicate = (!icmp_ln887_1)> <Delay = 1.45> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 124 [1/1] (0.00ns)   --->   "%zext_ln544_1 = zext i13 %p_0481_0 to i64" [cpp/accel/Accel.cpp:796]   --->   Operation 124 'zext' 'zext_ln544_1' <Predicate = (!icmp_ln887_1)> <Delay = 0.00>
ST_5 : Operation 125 [1/1] (0.00ns)   --->   "%wt_i_V_addr = getelementptr [4682 x i64]* %wt_i_V, i64 0, i64 %zext_ln544_1" [cpp/accel/Accel.cpp:796]   --->   Operation 125 'getelementptr' 'wt_i_V_addr' <Predicate = (!icmp_ln887_1)> <Delay = 0.00>
ST_5 : Operation 126 [2/2] (2.66ns)   --->   "%wt_i_V_load = load i64* %wt_i_V_addr, align 8" [cpp/accel/Accel.cpp:796]   --->   Operation 126 'load' 'wt_i_V_load' <Predicate = (!icmp_ln887_1)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>

State 6 <SV = 4> <Delay = 5.32>
ST_6 : Operation 127 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str47) nounwind" [cpp/accel/Accel.cpp:794]   --->   Operation 127 'specloopname' <Predicate = (!icmp_ln887_1)> <Delay = 0.00>
ST_6 : Operation 128 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str47)" [cpp/accel/Accel.cpp:794]   --->   Operation 128 'specregionbegin' 'tmp_1' <Predicate = (!icmp_ln887_1)> <Delay = 0.00>
ST_6 : Operation 129 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str15) nounwind" [cpp/accel/Accel.cpp:795]   --->   Operation 129 'specpipeline' <Predicate = (!icmp_ln887_1)> <Delay = 0.00>
ST_6 : Operation 130 [1/1] (0.00ns)   --->   "%zext_ln180_6 = zext i13 %add_ln180_1 to i64" [cpp/accel/Accel.cpp:796]   --->   Operation 130 'zext' 'zext_ln180_6' <Predicate = (!icmp_ln887_1)> <Delay = 0.00>
ST_6 : Operation 131 [1/1] (0.00ns)   --->   "%wt_mem_V_addr = getelementptr [4682 x i64]* @wt_mem_V, i64 0, i64 %zext_ln180_6" [cpp/accel/Accel.cpp:796]   --->   Operation 131 'getelementptr' 'wt_mem_V_addr' <Predicate = (!icmp_ln887_1)> <Delay = 0.00>
ST_6 : Operation 132 [1/2] (2.66ns)   --->   "%wt_i_V_load = load i64* %wt_i_V_addr, align 8" [cpp/accel/Accel.cpp:796]   --->   Operation 132 'load' 'wt_i_V_load' <Predicate = (!icmp_ln887_1)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_6 : Operation 133 [1/1] (2.66ns)   --->   "store i64 %wt_i_V_load, i64* %wt_mem_V_addr, align 8" [cpp/accel/Accel.cpp:796]   --->   Operation 133 'store' <Predicate = (!icmp_ln887_1)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_6 : Operation 134 [1/1] (0.00ns)   --->   "%empty_30 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str47, i32 %tmp_1)" [cpp/accel/Accel.cpp:797]   --->   Operation 134 'specregionend' 'empty_30' <Predicate = (!icmp_ln887_1)> <Delay = 0.00>
ST_6 : Operation 135 [1/1] (0.00ns)   --->   "br label %.preheader1441" [cpp/accel/Accel.cpp:794]   --->   Operation 135 'br' <Predicate = (!icmp_ln887_1)> <Delay = 0.00>

State 7 <SV = 4> <Delay = 1.06>
ST_7 : Operation 136 [1/1] (1.06ns)   --->   "br label %.preheader" [cpp/accel/Accel.cpp:801]   --->   Operation 136 'br' <Predicate = true> <Delay = 1.06>

State 8 <SV = 5> <Delay = 2.66>
ST_8 : Operation 137 [1/1] (0.00ns)   --->   "%p_0584_0 = phi i7 [ %i_V_1, %LOOP_KH_I ], [ 0, %.preheader.preheader ]"   --->   Operation 137 'phi' 'p_0584_0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 138 [1/1] (1.18ns)   --->   "%icmp_ln887_2 = icmp eq i7 %p_0584_0, -64" [cpp/accel/Accel.cpp:801]   --->   Operation 138 'icmp' 'icmp_ln887_2' <Predicate = true> <Delay = 1.18> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.64> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 139 [1/1] (0.00ns)   --->   "%empty_31 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 64, i64 64, i64 64)"   --->   Operation 139 'speclooptripcount' 'empty_31' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 140 [1/1] (1.37ns)   --->   "%i_V_1 = add i7 %p_0584_0, 1" [cpp/accel/Accel.cpp:801]   --->   Operation 140 'add' 'i_V_1' <Predicate = true> <Delay = 1.37> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 141 [1/1] (0.00ns)   --->   "br i1 %icmp_ln887_2, label %5, label %LOOP_KH_I" [cpp/accel/Accel.cpp:801]   --->   Operation 141 'br' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 142 [1/1] (0.00ns)   --->   "%zext_ln544_4 = zext i7 %p_0584_0 to i64" [cpp/accel/Accel.cpp:803]   --->   Operation 142 'zext' 'zext_ln544_4' <Predicate = (!icmp_ln887_2)> <Delay = 0.00>
ST_8 : Operation 143 [1/1] (0.00ns)   --->   "%kh_i_V_addr = getelementptr [64 x i64]* %kh_i_V, i64 0, i64 %zext_ln544_4" [cpp/accel/Accel.cpp:803]   --->   Operation 143 'getelementptr' 'kh_i_V_addr' <Predicate = (!icmp_ln887_2)> <Delay = 0.00>
ST_8 : Operation 144 [2/2] (2.66ns)   --->   "%kh_i_V_load = load i64* %kh_i_V_addr, align 8" [cpp/accel/Accel.cpp:803]   --->   Operation 144 'load' 'kh_i_V_load' <Predicate = (!icmp_ln887_2)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>

State 9 <SV = 6> <Delay = 5.32>
ST_9 : Operation 145 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str48) nounwind" [cpp/accel/Accel.cpp:801]   --->   Operation 145 'specloopname' <Predicate = (!icmp_ln887_2)> <Delay = 0.00>
ST_9 : Operation 146 [1/1] (0.00ns)   --->   "%tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str48)" [cpp/accel/Accel.cpp:801]   --->   Operation 146 'specregionbegin' 'tmp_2' <Predicate = (!icmp_ln887_2)> <Delay = 0.00>
ST_9 : Operation 147 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str15) nounwind" [cpp/accel/Accel.cpp:802]   --->   Operation 147 'specpipeline' <Predicate = (!icmp_ln887_2)> <Delay = 0.00>
ST_9 : Operation 148 [1/2] (2.66ns)   --->   "%kh_i_V_load = load i64* %kh_i_V_addr, align 8" [cpp/accel/Accel.cpp:803]   --->   Operation 148 'load' 'kh_i_V_load' <Predicate = (!icmp_ln887_2)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_9 : Operation 149 [1/1] (0.00ns)   --->   "%kh_mem_V_addr = getelementptr [64 x i64]* @kh_mem_V, i64 0, i64 %zext_ln544_4" [cpp/accel/Accel.cpp:803]   --->   Operation 149 'getelementptr' 'kh_mem_V_addr' <Predicate = (!icmp_ln887_2)> <Delay = 0.00>
ST_9 : Operation 150 [1/1] (2.66ns)   --->   "store i64 %kh_i_V_load, i64* %kh_mem_V_addr, align 8" [cpp/accel/Accel.cpp:803]   --->   Operation 150 'store' <Predicate = (!icmp_ln887_2)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_9 : Operation 151 [1/1] (0.00ns)   --->   "%empty_32 = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str48, i32 %tmp_2)" [cpp/accel/Accel.cpp:804]   --->   Operation 151 'specregionend' 'empty_32' <Predicate = (!icmp_ln887_2)> <Delay = 0.00>
ST_9 : Operation 152 [1/1] (0.00ns)   --->   "br label %.preheader" [cpp/accel/Accel.cpp:801]   --->   Operation 152 'br' <Predicate = (!icmp_ln887_2)> <Delay = 0.00>

State 10 <SV = 6> <Delay = 4.08>
ST_10 : Operation 153 [1/1] (0.00ns)   --->   "br i1 %icmp_ln879_1, label %._crit_edge1459, label %6" [cpp/accel/Accel.cpp:806]   --->   Operation 153 'br' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 154 [1/1] (0.00ns)   --->   "br i1 %icmp_ln879, label %._crit_edge1460_ifconv, label %7" [cpp/accel/Accel.cpp:823]   --->   Operation 154 'br' <Predicate = (!icmp_ln879_1)> <Delay = 0.00>
ST_10 : Operation 155 [2/2] (4.08ns)   --->   "call fastcc void @bin_dense([4682 x i64]* @wt_mem_V, [64 x i64]* @kh_mem_V, [4096 x i64]* @dmem_V, i2 %layer_type_V, i1 %dmem_mode_V_read, i1 %r_V_2, i16 %t_V_1)" [cpp/accel/Accel.cpp:858]   --->   Operation 155 'call' <Predicate = (!icmp_ln879 & !icmp_ln879_1)> <Delay = 4.08> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_10 : Operation 156 [2/2] (2.66ns)   --->   "%kh_word_V = load i64* getelementptr inbounds ([64 x i64]* @kh_mem_V, i64 0, i64 0), align 16" [cpp/accel/Accel.h:79->cpp/accel/Accel.cpp:832]   --->   Operation 156 'load' 'kh_word_V' <Predicate = (icmp_ln879 & !icmp_ln879_1)> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_10 : Operation 157 [1/1] (1.48ns)   --->   "%add_ln700 = add i16 %zext_ln760, %n_outputs_V_read" [cpp/accel/Accel.cpp:820]   --->   Operation 157 'add' 'add_ln700' <Predicate = (icmp_ln879_1)> <Delay = 1.48> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 158 [1/1] (1.12ns)   --->   "br label %.loopexit_ifconv" [cpp/accel/Accel.cpp:822]   --->   Operation 158 'br' <Predicate = (icmp_ln879_1)> <Delay = 1.12>

State 11 <SV = 7> <Delay = 1.12>
ST_11 : Operation 159 [1/2] (0.00ns)   --->   "call fastcc void @bin_dense([4682 x i64]* @wt_mem_V, [64 x i64]* @kh_mem_V, [4096 x i64]* @dmem_V, i2 %layer_type_V, i1 %dmem_mode_V_read, i1 %r_V_2, i16 %t_V_1)" [cpp/accel/Accel.cpp:858]   --->   Operation 159 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_11 : Operation 160 [1/1] (1.12ns)   --->   "br label %.loopexit_ifconv"   --->   Operation 160 'br' <Predicate = true> <Delay = 1.12>

State 12 <SV = 7> <Delay = 8.45>
ST_12 : Operation 161 [1/2] (2.66ns)   --->   "%kh_word_V = load i64* getelementptr inbounds ([64 x i64]* @kh_mem_V, i64 0, i64 0), align 16" [cpp/accel/Accel.h:79->cpp/accel/Accel.cpp:832]   --->   Operation 161 'load' 'kh_word_V' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_12 : Operation 162 [1/1] (0.00ns) (grouped into LUT with out node nc_V)   --->   "%xor_ln879 = xor i1 %trunc_ln700, true" [cpp/accel/Accel.h:81->cpp/accel/Accel.cpp:832]   --->   Operation 162 'xor' 'xor_ln879' <Predicate = (!t_V)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 163 [1/1] (0.00ns) (grouped into LUT with out node nc_V)   --->   "%or_ln879 = or i1 %trunc_ln792, %xor_ln879" [cpp/accel/Accel.h:81->cpp/accel/Accel.cpp:832]   --->   Operation 163 'or' 'or_ln879' <Predicate = (!t_V)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 164 [1/1] (0.00ns) (grouped into LUT with out node nc_V)   --->   "%tmp_V = trunc i64 %kh_word_V to i16" [cpp/accel/Accel.h:82->cpp/accel/Accel.cpp:832]   --->   Operation 164 'trunc' 'tmp_V' <Predicate = (!t_V)> <Delay = 0.00>
ST_12 : Operation 165 [1/1] (0.00ns) (grouped into LUT with out node nc_V)   --->   "%tmp_V_1 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %kh_word_V, i32 16, i32 31)" [cpp/accel/Accel.h:84->cpp/accel/Accel.cpp:832]   --->   Operation 165 'partselect' 'tmp_V_1' <Predicate = (t_V)> <Delay = 0.00>
ST_12 : Operation 166 [1/1] (0.00ns) (grouped into LUT with out node nc_V)   --->   "%tmp_V_2 = call i16 @_ssdm_op_PartSelect.i16.i64.i32.i32(i64 %kh_word_V, i32 48, i32 63)" [cpp/accel/Accel.h:88->cpp/accel/Accel.cpp:832]   --->   Operation 166 'partselect' 'tmp_V_2' <Predicate = (!t_V)> <Delay = 0.00>
ST_12 : Operation 167 [1/1] (0.00ns) (grouped into LUT with out node nc_V)   --->   "%select_ln879 = select i1 %or_ln879, i16 %tmp_V, i16 %tmp_V_2" [cpp/accel/Accel.h:81->cpp/accel/Accel.cpp:832]   --->   Operation 167 'select' 'select_ln879' <Predicate = (!t_V)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 168 [1/1] (0.61ns) (out node of the LUT)   --->   "%nc_V = select i1 %t_V, i16 %tmp_V_1, i16 %select_ln879" [cpp/accel/Accel.h:83->cpp/accel/Accel.cpp:832]   --->   Operation 168 'select' 'nc_V' <Predicate = true> <Delay = 0.61> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_12 : Operation 169 [2/2] (5.17ns)   --->   "call fastcc void @bin_conv([4682 x i64]* @wt_mem_V, i16 %nc_V, [4096 x i64]* @dmem_V, i1 %dmem_mode_V_read, i1 %r_V_2, i16 %t_V_1, i2 %width_mode_V_read, i2 %norm_mode_V_read)" [cpp/accel/Accel.cpp:841]   --->   Operation 169 'call' <Predicate = true> <Delay = 5.17> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 13 <SV = 8> <Delay = 1.12>
ST_13 : Operation 170 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @p_str52) nounwind" [cpp/accel/Accel.cpp:828]   --->   Operation 170 'specloopname' <Predicate = (icmp_ln879 & !icmp_ln879_1)> <Delay = 0.00>
ST_13 : Operation 171 [1/2] (0.00ns)   --->   "call fastcc void @bin_conv([4682 x i64]* @wt_mem_V, i16 %nc_V, [4096 x i64]* @dmem_V, i1 %dmem_mode_V_read, i1 %r_V_2, i16 %t_V_1, i2 %width_mode_V_read, i2 %norm_mode_V_read)" [cpp/accel/Accel.cpp:841]   --->   Operation 171 'call' <Predicate = (icmp_ln879 & !icmp_ln879_1)> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_13 : Operation 172 [1/1] (0.65ns)   --->   "%select_ln700 = select i1 %t_V, i16 2, i16 1" [cpp/accel/Accel.cpp:846]   --->   Operation 172 'select' 'select_ln700' <Predicate = (icmp_ln879 & !icmp_ln879_1)> <Delay = 0.65> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 173 [1/1] (1.12ns)   --->   "br label %.loopexit_ifconv"   --->   Operation 173 'br' <Predicate = (icmp_ln879 & !icmp_ln879_1)> <Delay = 1.12>

State 14 <SV = 9> <Delay = 2.66>
ST_14 : Operation 174 [1/1] (0.00ns)   --->   "%kh_index_V_new_1 = phi i16 [ %add_ln700, %._crit_edge1459 ], [ %select_ln700, %._crit_edge1460_ifconv ], [ %zext_ln760, %7 ]" [cpp/accel/Accel.cpp:820]   --->   Operation 174 'phi' 'kh_index_V_new_1' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 175 [1/1] (0.00ns) (grouped into LUT with out node add_ln700_6)   --->   "%n_outputs_V_pn = phi i16 [ %n_outputs_V_read, %._crit_edge1459 ], [ 1, %._crit_edge1460_ifconv ], [ %n_outputs_V_read, %7 ]" [cpp/accel/Accel.cpp:725]   --->   Operation 175 'phi' 'n_outputs_V_pn' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 176 [1/1] (1.48ns) (out node of the LUT)   --->   "%add_ln700_6 = add i16 %t_V_1, %n_outputs_V_pn" [cpp/accel/Accel.cpp:861]   --->   Operation 176 'add' 'add_ln700_6' <Predicate = true> <Delay = 1.48> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 177 [1/1] (0.00ns)   --->   "%tmp_6 = call i12 @_ssdm_op_BitConcatenate.i12.i1.i11(i1 %r_V_2, i11 0)" [cpp/accel/Accel.cpp:878]   --->   Operation 177 'bitconcatenate' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 178 [1/1] (0.00ns)   --->   "%zext_ln180_3 = zext i12 %tmp_6 to i64" [cpp/accel/Accel.cpp:878]   --->   Operation 178 'zext' 'zext_ln180_3' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 179 [1/1] (0.00ns)   --->   "%dmem_V_addr_3 = getelementptr [4096 x i64]* @dmem_V, i64 0, i64 %zext_ln180_3" [cpp/accel/Accel.cpp:878]   --->   Operation 179 'getelementptr' 'dmem_V_addr_3' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 180 [1/1] (0.00ns)   --->   "store i16 %add_ln700_6, i16* @o_index_V, align 2" [cpp/accel/Accel.cpp:762]   --->   Operation 180 'store' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 181 [1/1] (0.00ns)   --->   "store i16 %kh_index_V_new_1, i16* @kh_index_V, align 2" [cpp/accel/Accel.cpp:761]   --->   Operation 181 'store' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 182 [2/2] (2.66ns)   --->   "%dmem_V_load = load i64* %dmem_V_addr_3, align 16" [cpp/accel/Accel.cpp:878]   --->   Operation 182 'load' 'dmem_V_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>

State 15 <SV = 10> <Delay = 5.32>
ST_15 : Operation 183 [1/2] (2.66ns)   --->   "%dmem_V_load = load i64* %dmem_V_addr_3, align 16" [cpp/accel/Accel.cpp:878]   --->   Operation 183 'load' 'dmem_V_load' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_15 : Operation 184 [1/1] (2.66ns)   --->   "store i64 %dmem_V_load, i64* %dmem_o_V_addr, align 8" [cpp/accel/Accel.cpp:875]   --->   Operation 184 'store' <Predicate = true> <Delay = 2.66> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.66> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 128> <RAM>
ST_15 : Operation 185 [1/1] (0.00ns)   --->   "ret void" [cpp/accel/Accel.cpp:885]   --->   Operation 185 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 12ns, clock uncertainty: 1.5ns.

 <State 1>: 1.51ns
The critical path consists of the following:
	wire read on port 'width_mode_V' (cpp/accel/Accel.cpp:725) [32]  (0 ns)
	'shl' operation ('val', cpp/accel/Accel.cpp:771) [51]  (1.51 ns)

 <State 2>: 5.06ns
The critical path consists of the following:
	'phi' operation ('p_0700_0', cpp/accel/Accel.cpp:786) with incoming values : ('select_ln786', cpp/accel/Accel.cpp:786) [57]  (0 ns)
	'shl' operation ('r.V', cpp/accel/Accel.cpp:779) [99]  (2.54 ns)
	'add' operation ('add_ln180_2', cpp/accel/Accel.cpp:779) [102]  (0 ns)
	'add' operation ('add_ln180', cpp/accel/Accel.cpp:779) [105]  (2.52 ns)

 <State 3>: 5.33ns
The critical path consists of the following:
	'load' operation ('dmem_i_V_load_2', cpp/accel/Accel.cpp:784) on array 'dmem_i_V' [82]  (2.66 ns)
	'store' operation ('store_ln784', cpp/accel/Accel.cpp:784) of variable 'dmem_i_V_load_2', cpp/accel/Accel.cpp:784 on array 'dmem_V' [83]  (2.66 ns)

 <State 4>: 1.06ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i.V') with incoming values : ('i.V', cpp/accel/Accel.cpp:794) [124]  (1.06 ns)

 <State 5>: 2.66ns
The critical path consists of the following:
	'phi' operation ('i.V') with incoming values : ('i.V', cpp/accel/Accel.cpp:794) [124]  (0 ns)
	'getelementptr' operation ('wt_i_V_addr', cpp/accel/Accel.cpp:796) [141]  (0 ns)
	'load' operation ('wt_i_V_load', cpp/accel/Accel.cpp:796) on array 'wt_i_V' [142]  (2.66 ns)

 <State 6>: 5.33ns
The critical path consists of the following:
	'load' operation ('wt_i_V_load', cpp/accel/Accel.cpp:796) on array 'wt_i_V' [142]  (2.66 ns)
	'store' operation ('store_ln796', cpp/accel/Accel.cpp:796) of variable 'wt_i_V_load', cpp/accel/Accel.cpp:796 on array 'wt_mem_V' [143]  (2.66 ns)

 <State 7>: 1.06ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i.V') with incoming values : ('i.V', cpp/accel/Accel.cpp:801) [149]  (1.06 ns)

 <State 8>: 2.66ns
The critical path consists of the following:
	'phi' operation ('i.V') with incoming values : ('i.V', cpp/accel/Accel.cpp:801) [149]  (0 ns)
	'getelementptr' operation ('kh_i_V_addr', cpp/accel/Accel.cpp:803) [159]  (0 ns)
	'load' operation ('kh_i_V_load', cpp/accel/Accel.cpp:803) on array 'kh_i_V' [160]  (2.66 ns)

 <State 9>: 5.33ns
The critical path consists of the following:
	'load' operation ('kh_i_V_load', cpp/accel/Accel.cpp:803) on array 'kh_i_V' [160]  (2.66 ns)
	'store' operation ('store_ln803', cpp/accel/Accel.cpp:803) of variable 'kh_i_V_load', cpp/accel/Accel.cpp:803 on array 'kh_mem_V' [162]  (2.66 ns)

 <State 10>: 4.08ns
The critical path consists of the following:
	'call' operation ('call_ln858', cpp/accel/Accel.cpp:858) to 'bin_dense' [170]  (4.08 ns)

 <State 11>: 1.13ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('kh_index_V_new_1', cpp/accel/Accel.cpp:820) with incoming values : ('zext_ln760', cpp/accel/Accel.cpp:760) ('select_ln700', cpp/accel/Accel.cpp:846) ('add_ln700', cpp/accel/Accel.cpp:820) [189]  (1.13 ns)

 <State 12>: 8.46ns
The critical path consists of the following:
	'load' operation ('kh_word.V', cpp/accel/Accel.h:79->cpp/accel/Accel.cpp:832) on array 'kh_mem_V' [174]  (2.66 ns)
	'select' operation ('comp.V', cpp/accel/Accel.h:83->cpp/accel/Accel.cpp:832) [181]  (0.616 ns)
	'call' operation ('call_ln841', cpp/accel/Accel.cpp:841) to 'bin_conv' [182]  (5.18 ns)

 <State 13>: 1.13ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('kh_index_V_new_1', cpp/accel/Accel.cpp:820) with incoming values : ('zext_ln760', cpp/accel/Accel.cpp:760) ('select_ln700', cpp/accel/Accel.cpp:846) ('add_ln700', cpp/accel/Accel.cpp:820) [189]  (1.13 ns)

 <State 14>: 2.66ns
The critical path consists of the following:
	'getelementptr' operation ('dmem_V_addr_3', cpp/accel/Accel.cpp:878) [194]  (0 ns)
	'load' operation ('dmem_V_load', cpp/accel/Accel.cpp:878) on array 'dmem_V' [197]  (2.66 ns)

 <State 15>: 5.33ns
The critical path consists of the following:
	'load' operation ('dmem_V_load', cpp/accel/Accel.cpp:878) on array 'dmem_V' [197]  (2.66 ns)
	'store' operation ('store_ln875', cpp/accel/Accel.cpp:875) of variable 'dmem_V_load', cpp/accel/Accel.cpp:878 on array 'dmem_o_V' [198]  (2.66 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
