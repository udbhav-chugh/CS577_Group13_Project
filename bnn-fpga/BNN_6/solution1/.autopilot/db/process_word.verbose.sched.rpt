

================================================================
== Vivado HLS Report for 'process_word'
================================================================
* Date:           Fri Mar 26 22:47:10 2021

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        BNN_6
* Solution:       solution1
* Product family: kintex7
* Target device:  xc7k70t-fbv676-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  12.00|     6.858|        1.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  2140|  2140|  2140|  2140|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |             |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1     |  160|  160|        20|          -|          -|     8|    no    |
        | + Loop 1.1  |   16|   16|         2|          -|          -|     8|    no    |
        | + Loop 1.2  |   16|   16|         2|          -|          -|     8|    no    |
        |- Loop 2     |  296|  296|        37|          -|          -|     8|    no    |
        | + Loop 2.1  |   16|   16|         2|          -|          -|     8|    no    |
        | + Loop 2.2  |   16|   16|         2|          -|          -|     8|    no    |
        | + Loop 2.3  |   16|   16|         2|          -|          -|     8|    no    |
        +-------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 19
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 10 3 6 
3 --> 4 5 
4 --> 3 
5 --> 9 
6 --> 7 8 
7 --> 6 
8 --> 9 
9 --> 2 
10 --> 11 
11 --> 12 15 
12 --> 13 14 
13 --> 12 
14 --> 17 
15 --> 14 16 
16 --> 15 
17 --> 18 19 
18 --> 17 
19 --> 11 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.83>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%wrd_V_read = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %wrd_V)" [cpp/accel/Accel.cpp:132]   --->   Operation 20 'read' 'wrd_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%words_per_image_V_re = call i5 @_ssdm_op_Read.ap_auto.i5(i5 %words_per_image_V)" [cpp/accel/Accel.cpp:132]   --->   Operation 21 'read' 'words_per_image_V_re' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%log_width_V_read = call i3 @_ssdm_op_Read.ap_auto.i3(i3 %log_width_V)" [cpp/accel/Accel.cpp:132]   --->   Operation 22 'read' 'log_width_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%word_buffer_m_V_offs = call i2 @_ssdm_op_Read.ap_auto.i2(i2 %word_buffer_m_V_offset)" [cpp/accel/Accel.cpp:132]   --->   Operation 23 'read' 'word_buffer_m_V_offs' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%tmp = call i5 @_ssdm_op_BitConcatenate.i5.i2.i3(i2 %word_buffer_m_V_offs, i3 0)" [cpp/accel/Accel.cpp:132]   --->   Operation 24 'bitconcatenate' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln99 = zext i5 %tmp to i7" [cpp/accel/Accel.cpp:99]   --->   Operation 25 'zext' 'zext_ln99' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%zext_ln99_1 = zext i5 %tmp to i6" [cpp/accel/Accel.cpp:99]   --->   Operation 26 'zext' 'zext_ln99_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln111 = zext i3 %log_width_V_read to i4" [cpp/accel/Accel.cpp:111]   --->   Operation 27 'zext' 'zext_ln111' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (1.16ns)   --->   "%add_ln111 = add i4 -3, %zext_ln111" [cpp/accel/Accel.cpp:111]   --->   Operation 28 'add' 'add_ln111' <Predicate = true> <Delay = 1.16> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%sext_ln111 = sext i4 %add_ln111 to i5" [cpp/accel/Accel.cpp:111]   --->   Operation 29 'sext' 'sext_ln111' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (1.67ns)   --->   "%slices_per_line_V = shl i5 1, %sext_ln111" [cpp/accel/Accel.cpp:111]   --->   Operation 30 'shl' 'slices_per_line_V' <Predicate = true> <Delay = 1.67> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.67> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (1.22ns)   --->   "%first_wrd = icmp eq i8 %wrd_V_read, 0" [cpp/accel/Accel.cpp:112]   --->   Operation 31 'icmp' 'first_wrd' <Predicate = true> <Delay = 1.22> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%zext_ln879 = zext i5 %words_per_image_V_re to i8" [cpp/accel/Accel.cpp:113]   --->   Operation 32 'zext' 'zext_ln879' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (1.22ns)   --->   "%last_wrd = icmp eq i8 %zext_ln879, %wrd_V_read" [cpp/accel/Accel.cpp:113]   --->   Operation 33 'icmp' 'last_wrd' <Predicate = true> <Delay = 1.22> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%rhs_V = zext i5 %slices_per_line_V to i6" [cpp/accel/Accel.cpp:119]   --->   Operation 34 'zext' 'rhs_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%trunc_ln68 = trunc i5 %slices_per_line_V to i4" [cpp/accel/Accel.cpp:119]   --->   Operation 35 'trunc' 'trunc_ln68' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (1.06ns)   --->   "br label %1" [cpp/accel/Accel.cpp:118]   --->   Operation 36 'br' <Predicate = true> <Delay = 1.06>

State 2 <SV = 1> <Delay = 6.11>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%p_095_0 = phi i4 [ 0, %0 ], [ %bank_V, %4 ]"   --->   Operation 37 'phi' 'p_095_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (1.08ns)   --->   "%icmp_ln118 = icmp eq i4 %p_095_0, -8" [cpp/accel/Accel.cpp:118]   --->   Operation 38 'icmp' 'icmp_ln118' <Predicate = true> <Delay = 1.08> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 39 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (1.32ns)   --->   "%bank_V = add i4 %p_095_0, 1" [cpp/accel/Accel.cpp:118]   --->   Operation 40 'add' 'bank_V' <Predicate = true> <Delay = 1.32> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "br i1 %icmp_ln118, label %5, label %2" [cpp/accel/Accel.cpp:118]   --->   Operation 41 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.61ns)   --->   "%xor_ln68 = xor i4 %p_095_0, -8" [cpp/accel/Accel.cpp:119]   --->   Operation 42 'xor' 'xor_ln68' <Predicate = (!icmp_ln118)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%sext_ln68 = sext i4 %xor_ln68 to i6" [cpp/accel/Accel.cpp:119]   --->   Operation 43 'sext' 'sext_ln68' <Predicate = (!icmp_ln118)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (1.33ns)   --->   "%s_idx_V = add i6 %rhs_V, %sext_ln68" [cpp/accel/Accel.cpp:119]   --->   Operation 44 'add' 's_idx_V' <Predicate = (!icmp_ln118)> <Delay = 1.33> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%tmp_8 = call i1 @_ssdm_op_BitSelect.i1.i6.i32(i6 %s_idx_V, i32 5)" [cpp/accel/Accel.cpp:120]   --->   Operation 45 'bitselect' 'tmp_8' <Predicate = (!icmp_ln118)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%zext_ln544 = zext i4 %p_095_0 to i64" [cpp/accel/Accel.cpp:124]   --->   Operation 46 'zext' 'zext_ln544' <Predicate = (!icmp_ln118)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln180 = zext i4 %p_095_0 to i6" [cpp/accel/Accel.cpp:124]   --->   Operation 47 'zext' 'zext_ln180' <Predicate = (!icmp_ln118)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (1.33ns)   --->   "%add_ln180 = add i6 %zext_ln99_1, %zext_ln180" [cpp/accel/Accel.cpp:124]   --->   Operation 48 'add' 'add_ln180' <Predicate = (!icmp_ln118)> <Delay = 1.33> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%trunc_ln180 = trunc i6 %add_ln180 to i5" [cpp/accel/Accel.cpp:124]   --->   Operation 49 'trunc' 'trunc_ln180' <Predicate = (!icmp_ln118)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%p_shl_cast = call i10 @_ssdm_op_BitConcatenate.i10.i5.i5(i5 %trunc_ln180, i5 0)" [cpp/accel/Accel.cpp:124]   --->   Operation 50 'bitconcatenate' 'p_shl_cast' <Predicate = (!icmp_ln118)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%tmp_9 = call i7 @_ssdm_op_BitConcatenate.i7.i6.i1(i6 %add_ln180, i1 false)" [cpp/accel/Accel.cpp:124]   --->   Operation 51 'bitconcatenate' 'tmp_9' <Predicate = (!icmp_ln118)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%zext_ln180_7 = zext i7 %tmp_9 to i10" [cpp/accel/Accel.cpp:124]   --->   Operation 52 'zext' 'zext_ln180_7' <Predicate = (!icmp_ln118)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (1.41ns)   --->   "%sub_ln180 = sub i10 %p_shl_cast, %zext_ln180_7" [cpp/accel/Accel.cpp:124]   --->   Operation 53 'sub' 'sub_ln180' <Predicate = (!icmp_ln118)> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (1.41ns)   --->   "%add_ln180_2 = add i10 20, %sub_ln180" [cpp/accel/Accel.cpp:124]   --->   Operation 54 'add' 'add_ln180_2' <Predicate = (!icmp_ln118)> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln180_8 = zext i10 %add_ln180_2 to i64" [cpp/accel/Accel.cpp:124]   --->   Operation 55 'zext' 'zext_ln180_8' <Predicate = (!icmp_ln118)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%line_buffer_m_V_addr_2 = getelementptr [480 x i2]* %line_buffer_m_V, i64 0, i64 %zext_ln180_8" [cpp/accel/Accel.cpp:126]   --->   Operation 56 'getelementptr' 'line_buffer_m_V_addr_2' <Predicate = (!icmp_ln118)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (1.41ns)   --->   "%add_ln180_3 = add i10 29, %sub_ln180" [cpp/accel/Accel.cpp:127]   --->   Operation 57 'add' 'add_ln180_3' <Predicate = (!icmp_ln118)> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln180_9 = zext i10 %add_ln180_3 to i64" [cpp/accel/Accel.cpp:127]   --->   Operation 58 'zext' 'zext_ln180_9' <Predicate = (!icmp_ln118)> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%line_buffer_m_V_addr_4 = getelementptr [480 x i2]* %line_buffer_m_V, i64 0, i64 %zext_ln180_9" [cpp/accel/Accel.cpp:127]   --->   Operation 59 'getelementptr' 'line_buffer_m_V_addr_4' <Predicate = (!icmp_ln118)> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "br i1 %tmp_8, label %.preheader930.preheader, label %.preheader929.preheader" [cpp/accel/Accel.cpp:120]   --->   Operation 60 'br' <Predicate = (!icmp_ln118)> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (1.35ns)   --->   "%add_ln132 = add i6 %s_idx_V, %zext_ln99_1" [cpp/accel/Accel.cpp:132]   --->   Operation 61 'add' 'add_ln132' <Predicate = (!icmp_ln118 & !tmp_8)> <Delay = 1.35> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%p_shl5_cast = call i9 @_ssdm_op_BitConcatenate.i9.i6.i3(i6 %add_ln132, i3 0)" [cpp/accel/Accel.cpp:132]   --->   Operation 62 'bitconcatenate' 'p_shl5_cast' <Predicate = (!icmp_ln118 & !tmp_8)> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%tmp_11 = call i7 @_ssdm_op_BitConcatenate.i7.i6.i1(i6 %add_ln132, i1 false)" [cpp/accel/Accel.cpp:132]   --->   Operation 63 'bitconcatenate' 'tmp_11' <Predicate = (!icmp_ln118 & !tmp_8)> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%zext_ln132 = zext i7 %tmp_11 to i9" [cpp/accel/Accel.cpp:132]   --->   Operation 64 'zext' 'zext_ln132' <Predicate = (!icmp_ln118 & !tmp_8)> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (1.40ns)   --->   "%add_ln132_1 = add i9 %p_shl5_cast, %zext_ln132" [cpp/accel/Accel.cpp:132]   --->   Operation 65 'add' 'add_ln132_1' <Predicate = (!icmp_ln118 & !tmp_8)> <Delay = 1.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%zext_ln132_1 = zext i9 %add_ln132_1 to i64" [cpp/accel/Accel.cpp:132]   --->   Operation 66 'zext' 'zext_ln132_1' <Predicate = (!icmp_ln118 & !tmp_8)> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%word_buffer_m_V_addr_2 = getelementptr [160 x i2]* %word_buffer_m_V, i64 0, i64 %zext_ln132_1" [cpp/accel/Accel.cpp:134]   --->   Operation 67 'getelementptr' 'word_buffer_m_V_addr_2' <Predicate = (!icmp_ln118 & !tmp_8)> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (1.40ns)   --->   "%add_ln135 = add i9 %add_ln132_1, 9" [cpp/accel/Accel.cpp:135]   --->   Operation 68 'add' 'add_ln135' <Predicate = (!icmp_ln118 & !tmp_8)> <Delay = 1.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%zext_ln135 = zext i9 %add_ln135 to i64" [cpp/accel/Accel.cpp:135]   --->   Operation 69 'zext' 'zext_ln135' <Predicate = (!icmp_ln118 & !tmp_8)> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%word_buffer_m_V_addr_5 = getelementptr [160 x i2]* %word_buffer_m_V, i64 0, i64 %zext_ln135" [cpp/accel/Accel.cpp:135]   --->   Operation 70 'getelementptr' 'word_buffer_m_V_addr_5' <Predicate = (!icmp_ln118 & !tmp_8)> <Delay = 0.00>
ST_2 : Operation 71 [1/1] (1.06ns)   --->   "br label %.preheader929" [cpp/accel/Accel.cpp:130]   --->   Operation 71 'br' <Predicate = (!icmp_ln118 & !tmp_8)> <Delay = 1.06>
ST_2 : Operation 72 [1/1] (1.32ns)   --->   "%add_ln1353 = add i4 %trunc_ln68, %xor_ln68" [cpp/accel/Accel.cpp:124]   --->   Operation 72 'add' 'add_ln1353' <Predicate = (!icmp_ln118 & tmp_8)> <Delay = 1.32> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node add_ln180_4)   --->   "%ret_V = xor i4 %add_ln1353, -8" [cpp/accel/Accel.cpp:124]   --->   Operation 73 'xor' 'ret_V' <Predicate = (!icmp_ln118 & tmp_8)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node add_ln180_4)   --->   "%zext_ln180_10 = zext i4 %ret_V to i6" [cpp/accel/Accel.cpp:124]   --->   Operation 74 'zext' 'zext_ln180_10' <Predicate = (!icmp_ln118 & tmp_8)> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (1.33ns) (out node of the LUT)   --->   "%add_ln180_4 = add i6 %zext_ln180_10, %zext_ln99_1" [cpp/accel/Accel.cpp:124]   --->   Operation 75 'add' 'add_ln180_4' <Predicate = (!icmp_ln118 & tmp_8)> <Delay = 1.33> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 76 [1/1] (0.00ns)   --->   "%p_shl3_cast = call i9 @_ssdm_op_BitConcatenate.i9.i6.i3(i6 %add_ln180_4, i3 0)" [cpp/accel/Accel.cpp:124]   --->   Operation 76 'bitconcatenate' 'p_shl3_cast' <Predicate = (!icmp_ln118 & tmp_8)> <Delay = 0.00>
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "%tmp_10 = call i7 @_ssdm_op_BitConcatenate.i7.i6.i1(i6 %add_ln180_4, i1 false)" [cpp/accel/Accel.cpp:124]   --->   Operation 77 'bitconcatenate' 'tmp_10' <Predicate = (!icmp_ln118 & tmp_8)> <Delay = 0.00>
ST_2 : Operation 78 [1/1] (0.00ns)   --->   "%zext_ln180_11 = zext i7 %tmp_10 to i9" [cpp/accel/Accel.cpp:124]   --->   Operation 78 'zext' 'zext_ln180_11' <Predicate = (!icmp_ln118 & tmp_8)> <Delay = 0.00>
ST_2 : Operation 79 [1/1] (1.40ns)   --->   "%add_ln180_5 = add i9 %p_shl3_cast, %zext_ln180_11" [cpp/accel/Accel.cpp:124]   --->   Operation 79 'add' 'add_ln180_5' <Predicate = (!icmp_ln118 & tmp_8)> <Delay = 1.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 80 [1/1] (0.00ns)   --->   "%zext_ln180_12 = zext i9 %add_ln180_5 to i64" [cpp/accel/Accel.cpp:124]   --->   Operation 80 'zext' 'zext_ln180_12' <Predicate = (!icmp_ln118 & tmp_8)> <Delay = 0.00>
ST_2 : Operation 81 [1/1] (0.00ns)   --->   "%old_word_buffer_m_V_s = getelementptr [160 x i2]* %old_word_buffer_m_V, i64 0, i64 %zext_ln180_12" [cpp/accel/Accel.cpp:126]   --->   Operation 81 'getelementptr' 'old_word_buffer_m_V_s' <Predicate = (!icmp_ln118 & tmp_8)> <Delay = 0.00>
ST_2 : Operation 82 [1/1] (1.40ns)   --->   "%add_ln127 = add i9 %add_ln180_5, 9" [cpp/accel/Accel.cpp:127]   --->   Operation 82 'add' 'add_ln127' <Predicate = (!icmp_ln118 & tmp_8)> <Delay = 1.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 83 [1/1] (0.00ns)   --->   "%zext_ln127 = zext i9 %add_ln127 to i64" [cpp/accel/Accel.cpp:127]   --->   Operation 83 'zext' 'zext_ln127' <Predicate = (!icmp_ln118 & tmp_8)> <Delay = 0.00>
ST_2 : Operation 84 [1/1] (0.00ns)   --->   "%old_word_buffer_m_V_1 = getelementptr [160 x i2]* %old_word_buffer_m_V, i64 0, i64 %zext_ln127" [cpp/accel/Accel.cpp:127]   --->   Operation 84 'getelementptr' 'old_word_buffer_m_V_1' <Predicate = (!icmp_ln118 & tmp_8)> <Delay = 0.00>
ST_2 : Operation 85 [1/1] (1.06ns)   --->   "br label %.preheader930" [cpp/accel/Accel.cpp:122]   --->   Operation 85 'br' <Predicate = (!icmp_ln118 & tmp_8)> <Delay = 1.06>
ST_2 : Operation 86 [1/1] (0.00ns)   --->   "%trunc_ln145 = trunc i2 %word_buffer_m_V_offs to i1" [cpp/accel/Accel.cpp:145]   --->   Operation 86 'trunc' 'trunc_ln145' <Predicate = (icmp_ln118)> <Delay = 0.00>
ST_2 : Operation 87 [2/2] (0.65ns)   --->   "call fastcc void @conv_word([480 x i2]* %line_buffer_m_V, i1 %trunc_ln145, [18 x i1]* %conv_params_m_V, [128 x i5]* %conv_out_buffer_m_V)" [cpp/accel/Accel.cpp:145]   --->   Operation 87 'call' <Predicate = (icmp_ln118)> <Delay = 0.65> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 2.87>
ST_3 : Operation 88 [1/1] (0.00ns)   --->   "%p_0249_0 = phi i4 [ %cc_V_1, %_ifconv ], [ 1, %.preheader929.preheader ]"   --->   Operation 88 'phi' 'p_0249_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 89 [1/1] (1.08ns)   --->   "%icmp_ln130 = icmp eq i4 %p_0249_0, -7" [cpp/accel/Accel.cpp:130]   --->   Operation 89 'icmp' 'icmp_ln130' <Predicate = true> <Delay = 1.08> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "%empty_41 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 90 'speclooptripcount' 'empty_41' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (0.00ns)   --->   "br i1 %icmp_ln130, label %_ifconv2, label %_ifconv" [cpp/accel/Accel.cpp:130]   --->   Operation 91 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%zext_ln132_3 = zext i4 %p_0249_0 to i9" [cpp/accel/Accel.cpp:132]   --->   Operation 92 'zext' 'zext_ln132_3' <Predicate = (!icmp_ln130 & !last_wrd)> <Delay = 0.00>
ST_3 : Operation 93 [1/1] (1.40ns)   --->   "%add_ln132_2 = add i9 %add_ln132_1, %zext_ln132_3" [cpp/accel/Accel.cpp:132]   --->   Operation 93 'add' 'add_ln132_2' <Predicate = (!icmp_ln130 & !last_wrd)> <Delay = 1.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 94 [1/1] (0.00ns)   --->   "%zext_ln132_4 = zext i9 %add_ln132_2 to i64" [cpp/accel/Accel.cpp:132]   --->   Operation 94 'zext' 'zext_ln132_4' <Predicate = (!icmp_ln130 & !last_wrd)> <Delay = 0.00>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "%word_buffer_m_V_addr = getelementptr [160 x i2]* %word_buffer_m_V, i64 0, i64 %zext_ln132_4" [cpp/accel/Accel.cpp:132]   --->   Operation 95 'getelementptr' 'word_buffer_m_V_addr' <Predicate = (!icmp_ln130 & !last_wrd)> <Delay = 0.00>
ST_3 : Operation 96 [2/2] (1.46ns)   --->   "%word_buffer_m_V_load = load i2* %word_buffer_m_V_addr, align 1" [cpp/accel/Accel.cpp:132]   --->   Operation 96 'load' 'word_buffer_m_V_load' <Predicate = (!icmp_ln130 & !last_wrd)> <Delay = 1.46> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_3 : Operation 97 [1/1] (0.00ns)   --->   "%lb_addr_1 = getelementptr [8 x i1]* %lb, i64 0, i64 %zext_ln544" [cpp/accel/Accel.cpp:134]   --->   Operation 97 'getelementptr' 'lb_addr_1' <Predicate = (icmp_ln130)> <Delay = 0.00>
ST_3 : Operation 98 [2/2] (1.42ns)   --->   "%lb_load_1 = load i1* %lb_addr_1, align 1" [cpp/accel/Accel.cpp:134]   --->   Operation 98 'load' 'lb_load_1' <Predicate = (icmp_ln130)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_3 : Operation 99 [2/2] (1.46ns)   --->   "%word_buffer_m_V_load_2 = load i2* %word_buffer_m_V_addr_2, align 1" [cpp/accel/Accel.cpp:134]   --->   Operation 99 'load' 'word_buffer_m_V_load_2' <Predicate = (icmp_ln130)> <Delay = 1.46> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_3 : Operation 100 [1/1] (0.00ns)   --->   "%rb_addr_2 = getelementptr [8 x i1]* %rb, i64 0, i64 %zext_ln544" [cpp/accel/Accel.cpp:135]   --->   Operation 100 'getelementptr' 'rb_addr_2' <Predicate = (icmp_ln130)> <Delay = 0.00>
ST_3 : Operation 101 [2/2] (1.42ns)   --->   "%rb_load_2 = load i1* %rb_addr_2, align 1" [cpp/accel/Accel.cpp:135]   --->   Operation 101 'load' 'rb_load_2' <Predicate = (icmp_ln130)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_3 : Operation 102 [2/2] (1.46ns)   --->   "%word_buffer_m_V_load_5 = load i2* %word_buffer_m_V_addr_5, align 1" [cpp/accel/Accel.cpp:135]   --->   Operation 102 'load' 'word_buffer_m_V_load_5' <Predicate = (icmp_ln130)> <Delay = 1.46> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>

State 4 <SV = 3> <Delay = 3.71>
ST_4 : Operation 103 [1/1] (0.00ns)   --->   "%zext_ln132_2 = zext i4 %p_0249_0 to i10" [cpp/accel/Accel.cpp:132]   --->   Operation 103 'zext' 'zext_ln132_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 104 [1/1] (1.41ns)   --->   "%add_ln180_15 = add i10 %add_ln180_2, %zext_ln132_2" [cpp/accel/Accel.cpp:132]   --->   Operation 104 'add' 'add_ln180_15' <Predicate = true> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 105 [1/1] (0.00ns)   --->   "%zext_ln180_26 = zext i10 %add_ln180_15 to i64" [cpp/accel/Accel.cpp:132]   --->   Operation 105 'zext' 'zext_ln180_26' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 106 [1/1] (0.00ns)   --->   "%line_buffer_m_V_addr_3 = getelementptr [480 x i2]* %line_buffer_m_V, i64 0, i64 %zext_ln180_26" [cpp/accel/Accel.cpp:132]   --->   Operation 106 'getelementptr' 'line_buffer_m_V_addr_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 107 [1/2] (1.46ns)   --->   "%word_buffer_m_V_load = load i2* %word_buffer_m_V_addr, align 1" [cpp/accel/Accel.cpp:132]   --->   Operation 107 'load' 'word_buffer_m_V_load' <Predicate = (!last_wrd)> <Delay = 1.46> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_4 : Operation 108 [1/1] (0.62ns)   --->   "%select_ln879 = select i1 %last_wrd, i2 0, i2 %word_buffer_m_V_load" [cpp/accel/Accel.cpp:113]   --->   Operation 108 'select' 'select_ln879' <Predicate = true> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 109 [1/1] (1.62ns)   --->   "store i2 %select_ln879, i2* %line_buffer_m_V_addr_3, align 1" [cpp/accel/Accel.cpp:132]   --->   Operation 109 'store' <Predicate = true> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_4 : Operation 110 [1/1] (1.32ns)   --->   "%cc_V_1 = add i4 %p_0249_0, 1" [cpp/accel/Accel.cpp:130]   --->   Operation 110 'add' 'cc_V_1' <Predicate = true> <Delay = 1.32> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 111 [1/1] (0.00ns)   --->   "br label %.preheader929" [cpp/accel/Accel.cpp:130]   --->   Operation 111 'br' <Predicate = true> <Delay = 0.00>

State 5 <SV = 3> <Delay = 3.71>
ST_5 : Operation 112 [1/2] (1.42ns)   --->   "%lb_load_1 = load i1* %lb_addr_1, align 1" [cpp/accel/Accel.cpp:134]   --->   Operation 112 'load' 'lb_load_1' <Predicate = true> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_5 : Operation 113 [1/2] (1.46ns)   --->   "%word_buffer_m_V_load_2 = load i2* %word_buffer_m_V_addr_2, align 1" [cpp/accel/Accel.cpp:134]   --->   Operation 113 'load' 'word_buffer_m_V_load_2' <Predicate = true> <Delay = 1.46> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_5 : Operation 114 [1/1] (0.00ns) (grouped into LUT with out node select_ln134)   --->   "%or_ln134 = or i1 %lb_load_1, %last_wrd" [cpp/accel/Accel.cpp:134]   --->   Operation 114 'or' 'or_ln134' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 115 [1/1] (0.62ns) (out node of the LUT)   --->   "%select_ln134 = select i1 %or_ln134, i2 0, i2 %word_buffer_m_V_load_2" [cpp/accel/Accel.cpp:134]   --->   Operation 115 'select' 'select_ln134' <Predicate = true> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 116 [1/1] (1.62ns)   --->   "store i2 %select_ln134, i2* %line_buffer_m_V_addr_2, align 1" [cpp/accel/Accel.cpp:134]   --->   Operation 116 'store' <Predicate = true> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_5 : Operation 117 [1/2] (1.42ns)   --->   "%rb_load_2 = load i1* %rb_addr_2, align 1" [cpp/accel/Accel.cpp:135]   --->   Operation 117 'load' 'rb_load_2' <Predicate = true> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_5 : Operation 118 [1/2] (1.46ns)   --->   "%word_buffer_m_V_load_5 = load i2* %word_buffer_m_V_addr_5, align 1" [cpp/accel/Accel.cpp:135]   --->   Operation 118 'load' 'word_buffer_m_V_load_5' <Predicate = true> <Delay = 1.46> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_5 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node select_ln135)   --->   "%or_ln135 = or i1 %rb_load_2, %last_wrd" [cpp/accel/Accel.cpp:135]   --->   Operation 119 'or' 'or_ln135' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 120 [1/1] (0.62ns) (out node of the LUT)   --->   "%select_ln135 = select i1 %or_ln135, i2 0, i2 %word_buffer_m_V_load_5" [cpp/accel/Accel.cpp:135]   --->   Operation 120 'select' 'select_ln135' <Predicate = true> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 121 [1/1] (1.06ns)   --->   "br label %4"   --->   Operation 121 'br' <Predicate = true> <Delay = 1.06>

State 6 <SV = 2> <Delay = 2.87>
ST_6 : Operation 122 [1/1] (0.00ns)   --->   "%p_027_0 = phi i4 [ %cc_V, %3 ], [ 1, %.preheader930.preheader ]"   --->   Operation 122 'phi' 'p_027_0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 123 [1/1] (1.08ns)   --->   "%icmp_ln122 = icmp eq i4 %p_027_0, -7" [cpp/accel/Accel.cpp:122]   --->   Operation 123 'icmp' 'icmp_ln122' <Predicate = true> <Delay = 1.08> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 124 [1/1] (0.00ns)   --->   "%empty_40 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 124 'speclooptripcount' 'empty_40' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 125 [1/1] (0.00ns)   --->   "br i1 %icmp_ln122, label %_ifconv1, label %3" [cpp/accel/Accel.cpp:122]   --->   Operation 125 'br' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 126 [1/1] (0.00ns)   --->   "%zext_ln180_23 = zext i4 %p_027_0 to i9" [cpp/accel/Accel.cpp:124]   --->   Operation 126 'zext' 'zext_ln180_23' <Predicate = (!icmp_ln122)> <Delay = 0.00>
ST_6 : Operation 127 [1/1] (1.40ns)   --->   "%add_ln180_13 = add i9 %add_ln180_5, %zext_ln180_23" [cpp/accel/Accel.cpp:124]   --->   Operation 127 'add' 'add_ln180_13' <Predicate = (!icmp_ln122)> <Delay = 1.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 128 [1/1] (0.00ns)   --->   "%zext_ln180_24 = zext i9 %add_ln180_13 to i64" [cpp/accel/Accel.cpp:124]   --->   Operation 128 'zext' 'zext_ln180_24' <Predicate = (!icmp_ln122)> <Delay = 0.00>
ST_6 : Operation 129 [1/1] (0.00ns)   --->   "%old_word_buffer_m_V_2 = getelementptr [160 x i2]* %old_word_buffer_m_V, i64 0, i64 %zext_ln180_24" [cpp/accel/Accel.cpp:124]   --->   Operation 129 'getelementptr' 'old_word_buffer_m_V_2' <Predicate = (!icmp_ln122)> <Delay = 0.00>
ST_6 : Operation 130 [2/2] (1.46ns)   --->   "%old_word_buffer_m_V_3 = load i2* %old_word_buffer_m_V_2, align 1" [cpp/accel/Accel.cpp:124]   --->   Operation 130 'load' 'old_word_buffer_m_V_3' <Predicate = (!icmp_ln122)> <Delay = 1.46> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_6 : Operation 131 [1/1] (0.00ns)   --->   "%lb_addr = getelementptr [8 x i1]* %lb, i64 0, i64 %zext_ln544" [cpp/accel/Accel.cpp:126]   --->   Operation 131 'getelementptr' 'lb_addr' <Predicate = (icmp_ln122)> <Delay = 0.00>
ST_6 : Operation 132 [2/2] (1.42ns)   --->   "%lb_load = load i1* %lb_addr, align 1" [cpp/accel/Accel.cpp:126]   --->   Operation 132 'load' 'lb_load' <Predicate = (icmp_ln122)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_6 : Operation 133 [2/2] (1.46ns)   --->   "%old_word_buffer_m_V_4 = load i2* %old_word_buffer_m_V_s, align 1" [cpp/accel/Accel.cpp:126]   --->   Operation 133 'load' 'old_word_buffer_m_V_4' <Predicate = (icmp_ln122)> <Delay = 1.46> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_6 : Operation 134 [1/1] (0.00ns)   --->   "%rb_addr = getelementptr [8 x i1]* %rb, i64 0, i64 %zext_ln544" [cpp/accel/Accel.cpp:127]   --->   Operation 134 'getelementptr' 'rb_addr' <Predicate = (icmp_ln122)> <Delay = 0.00>
ST_6 : Operation 135 [2/2] (1.42ns)   --->   "%rb_load = load i1* %rb_addr, align 1" [cpp/accel/Accel.cpp:127]   --->   Operation 135 'load' 'rb_load' <Predicate = (icmp_ln122)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_6 : Operation 136 [2/2] (1.46ns)   --->   "%old_word_buffer_m_V_5 = load i2* %old_word_buffer_m_V_1, align 1" [cpp/accel/Accel.cpp:127]   --->   Operation 136 'load' 'old_word_buffer_m_V_5' <Predicate = (icmp_ln122)> <Delay = 1.46> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>

State 7 <SV = 3> <Delay = 3.09>
ST_7 : Operation 137 [1/1] (0.00ns)   --->   "%zext_ln180_22 = zext i4 %p_027_0 to i10" [cpp/accel/Accel.cpp:124]   --->   Operation 137 'zext' 'zext_ln180_22' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 138 [1/1] (1.41ns)   --->   "%add_ln180_14 = add i10 %add_ln180_2, %zext_ln180_22" [cpp/accel/Accel.cpp:124]   --->   Operation 138 'add' 'add_ln180_14' <Predicate = true> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 139 [1/1] (0.00ns)   --->   "%zext_ln180_25 = zext i10 %add_ln180_14 to i64" [cpp/accel/Accel.cpp:124]   --->   Operation 139 'zext' 'zext_ln180_25' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 140 [1/1] (0.00ns)   --->   "%line_buffer_m_V_addr = getelementptr [480 x i2]* %line_buffer_m_V, i64 0, i64 %zext_ln180_25" [cpp/accel/Accel.cpp:124]   --->   Operation 140 'getelementptr' 'line_buffer_m_V_addr' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 141 [1/2] (1.46ns)   --->   "%old_word_buffer_m_V_3 = load i2* %old_word_buffer_m_V_2, align 1" [cpp/accel/Accel.cpp:124]   --->   Operation 141 'load' 'old_word_buffer_m_V_3' <Predicate = true> <Delay = 1.46> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_7 : Operation 142 [1/1] (1.62ns)   --->   "store i2 %old_word_buffer_m_V_3, i2* %line_buffer_m_V_addr, align 1" [cpp/accel/Accel.cpp:124]   --->   Operation 142 'store' <Predicate = true> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_7 : Operation 143 [1/1] (1.32ns)   --->   "%cc_V = add i4 %p_027_0, 1" [cpp/accel/Accel.cpp:122]   --->   Operation 143 'add' 'cc_V' <Predicate = true> <Delay = 1.32> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 144 [1/1] (0.00ns)   --->   "br label %.preheader930" [cpp/accel/Accel.cpp:122]   --->   Operation 144 'br' <Predicate = true> <Delay = 0.00>

State 8 <SV = 3> <Delay = 3.71>
ST_8 : Operation 145 [1/2] (1.42ns)   --->   "%lb_load = load i1* %lb_addr, align 1" [cpp/accel/Accel.cpp:126]   --->   Operation 145 'load' 'lb_load' <Predicate = true> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_8 : Operation 146 [1/2] (1.46ns)   --->   "%old_word_buffer_m_V_4 = load i2* %old_word_buffer_m_V_s, align 1" [cpp/accel/Accel.cpp:126]   --->   Operation 146 'load' 'old_word_buffer_m_V_4' <Predicate = true> <Delay = 1.46> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_8 : Operation 147 [1/1] (0.62ns)   --->   "%select_ln126 = select i1 %lb_load, i2 0, i2 %old_word_buffer_m_V_4" [cpp/accel/Accel.cpp:126]   --->   Operation 147 'select' 'select_ln126' <Predicate = true> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 148 [1/1] (1.62ns)   --->   "store i2 %select_ln126, i2* %line_buffer_m_V_addr_2, align 1" [cpp/accel/Accel.cpp:126]   --->   Operation 148 'store' <Predicate = true> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_8 : Operation 149 [1/2] (1.42ns)   --->   "%rb_load = load i1* %rb_addr, align 1" [cpp/accel/Accel.cpp:127]   --->   Operation 149 'load' 'rb_load' <Predicate = true> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_8 : Operation 150 [1/2] (1.46ns)   --->   "%old_word_buffer_m_V_5 = load i2* %old_word_buffer_m_V_1, align 1" [cpp/accel/Accel.cpp:127]   --->   Operation 150 'load' 'old_word_buffer_m_V_5' <Predicate = true> <Delay = 1.46> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_8 : Operation 151 [1/1] (0.62ns)   --->   "%select_ln127 = select i1 %rb_load, i2 0, i2 %old_word_buffer_m_V_5" [cpp/accel/Accel.cpp:127]   --->   Operation 151 'select' 'select_ln127' <Predicate = true> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 152 [1/1] (1.06ns)   --->   "br label %4" [cpp/accel/Accel.cpp:128]   --->   Operation 152 'br' <Predicate = true> <Delay = 1.06>

State 9 <SV = 4> <Delay = 1.62>
ST_9 : Operation 153 [1/1] (0.00ns)   --->   "%storemerge = phi i2 [ %select_ln135, %_ifconv2 ], [ %select_ln127, %_ifconv1 ]" [cpp/accel/Accel.cpp:135]   --->   Operation 153 'phi' 'storemerge' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 154 [1/1] (1.62ns)   --->   "store i2 %storemerge, i2* %line_buffer_m_V_addr_4, align 1" [cpp/accel/Accel.cpp:127]   --->   Operation 154 'store' <Predicate = true> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_9 : Operation 155 [1/1] (0.00ns)   --->   "br label %1" [cpp/accel/Accel.cpp:118]   --->   Operation 155 'br' <Predicate = true> <Delay = 0.00>

State 10 <SV = 2> <Delay = 1.06>
ST_10 : Operation 156 [1/2] (0.00ns)   --->   "call fastcc void @conv_word([480 x i2]* %line_buffer_m_V, i1 %trunc_ln145, [18 x i1]* %conv_params_m_V, [128 x i5]* %conv_out_buffer_m_V)" [cpp/accel/Accel.cpp:145]   --->   Operation 156 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_10 : Operation 157 [1/1] (1.06ns)   --->   "br label %6" [cpp/accel/Accel.cpp:149]   --->   Operation 157 'br' <Predicate = true> <Delay = 1.06>

State 11 <SV = 3> <Delay = 6.85>
ST_11 : Operation 158 [1/1] (0.00ns)   --->   "%p_0198_0 = phi i4 [ 0, %5 ], [ %bank_V_1, %_ifconv16 ]"   --->   Operation 158 'phi' 'p_0198_0' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 159 [1/1] (1.08ns)   --->   "%icmp_ln149 = icmp eq i4 %p_0198_0, -8" [cpp/accel/Accel.cpp:149]   --->   Operation 159 'icmp' 'icmp_ln149' <Predicate = true> <Delay = 1.08> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 160 [1/1] (0.00ns)   --->   "%empty_42 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 160 'speclooptripcount' 'empty_42' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 161 [1/1] (1.32ns)   --->   "%bank_V_1 = add i4 %p_0198_0, 1" [cpp/accel/Accel.cpp:149]   --->   Operation 161 'add' 'bank_V_1' <Predicate = true> <Delay = 1.32> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 162 [1/1] (0.00ns)   --->   "br i1 %icmp_ln149, label %12, label %7" [cpp/accel/Accel.cpp:149]   --->   Operation 162 'br' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 163 [1/1] (0.00ns)   --->   "%lhs_V = zext i4 %p_0198_0 to i6" [cpp/accel/Accel.cpp:152]   --->   Operation 163 'zext' 'lhs_V' <Predicate = (!icmp_ln149)> <Delay = 0.00>
ST_11 : Operation 164 [1/1] (1.33ns)   --->   "%ret_V_10 = sub i6 %lhs_V, %rhs_V" [cpp/accel/Accel.cpp:152]   --->   Operation 164 'sub' 'ret_V_10' <Predicate = (!icmp_ln149)> <Delay = 1.33> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 165 [1/1] (0.00ns)   --->   "%tmp_12 = call i1 @_ssdm_op_BitSelect.i1.i6.i32(i6 %ret_V_10, i32 5)" [cpp/accel/Accel.cpp:153]   --->   Operation 165 'bitselect' 'tmp_12' <Predicate = (!icmp_ln149)> <Delay = 0.00>
ST_11 : Operation 166 [1/1] (0.00ns)   --->   "%zext_ln544_5 = zext i4 %p_0198_0 to i64" [cpp/accel/Accel.cpp:157]   --->   Operation 166 'zext' 'zext_ln544_5' <Predicate = (!icmp_ln149)> <Delay = 0.00>
ST_11 : Operation 167 [1/1] (1.33ns)   --->   "%add_ln180_6 = add i6 %zext_ln99_1, %lhs_V" [cpp/accel/Accel.cpp:175]   --->   Operation 167 'add' 'add_ln180_6' <Predicate = (!icmp_ln149)> <Delay = 1.33> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 168 [1/1] (0.00ns)   --->   "%p_shl9_cast = call i9 @_ssdm_op_BitConcatenate.i9.i6.i3(i6 %add_ln180_6, i3 0)" [cpp/accel/Accel.cpp:175]   --->   Operation 168 'bitconcatenate' 'p_shl9_cast' <Predicate = (!icmp_ln149)> <Delay = 0.00>
ST_11 : Operation 169 [1/1] (0.00ns)   --->   "%tmp_13 = call i7 @_ssdm_op_BitConcatenate.i7.i6.i1(i6 %add_ln180_6, i1 false)" [cpp/accel/Accel.cpp:175]   --->   Operation 169 'bitconcatenate' 'tmp_13' <Predicate = (!icmp_ln149)> <Delay = 0.00>
ST_11 : Operation 170 [1/1] (0.00ns)   --->   "%zext_ln180_13 = zext i7 %tmp_13 to i9" [cpp/accel/Accel.cpp:175]   --->   Operation 170 'zext' 'zext_ln180_13' <Predicate = (!icmp_ln149)> <Delay = 0.00>
ST_11 : Operation 171 [1/1] (0.00ns)   --->   "%zext_ln180_14 = zext i7 %tmp_13 to i10" [cpp/accel/Accel.cpp:175]   --->   Operation 171 'zext' 'zext_ln180_14' <Predicate = (!icmp_ln149)> <Delay = 0.00>
ST_11 : Operation 172 [1/1] (1.40ns)   --->   "%add_ln180_7 = add i9 %zext_ln180_13, %p_shl9_cast" [cpp/accel/Accel.cpp:175]   --->   Operation 172 'add' 'add_ln180_7' <Predicate = (!icmp_ln149)> <Delay = 1.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 173 [1/1] (0.00ns)   --->   "%zext_ln180_15 = zext i9 %add_ln180_7 to i64" [cpp/accel/Accel.cpp:175]   --->   Operation 173 'zext' 'zext_ln180_15' <Predicate = (!icmp_ln149)> <Delay = 0.00>
ST_11 : Operation 174 [1/1] (0.00ns)   --->   "%word_buffer_m_V_addr_7 = getelementptr [160 x i2]* %word_buffer_m_V, i64 0, i64 %zext_ln180_15" [cpp/accel/Accel.cpp:178]   --->   Operation 174 'getelementptr' 'word_buffer_m_V_addr_7' <Predicate = (!icmp_ln149)> <Delay = 0.00>
ST_11 : Operation 175 [1/1] (1.40ns)   --->   "%add_ln179 = add i9 9, %add_ln180_7" [cpp/accel/Accel.cpp:179]   --->   Operation 175 'add' 'add_ln179' <Predicate = (!icmp_ln149)> <Delay = 1.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 176 [1/1] (0.00ns)   --->   "%zext_ln179 = zext i9 %add_ln179 to i64" [cpp/accel/Accel.cpp:179]   --->   Operation 176 'zext' 'zext_ln179' <Predicate = (!icmp_ln149)> <Delay = 0.00>
ST_11 : Operation 177 [1/1] (0.00ns)   --->   "%word_buffer_m_V_addr_8 = getelementptr [160 x i2]* %word_buffer_m_V, i64 0, i64 %zext_ln179" [cpp/accel/Accel.cpp:179]   --->   Operation 177 'getelementptr' 'word_buffer_m_V_addr_8' <Predicate = (!icmp_ln149)> <Delay = 0.00>
ST_11 : Operation 178 [1/1] (0.00ns)   --->   "%trunc_ln180_1 = trunc i6 %add_ln180_6 to i5" [cpp/accel/Accel.cpp:157]   --->   Operation 178 'trunc' 'trunc_ln180_1' <Predicate = (!icmp_ln149)> <Delay = 0.00>
ST_11 : Operation 179 [1/1] (0.00ns)   --->   "%p_shl7_cast = call i10 @_ssdm_op_BitConcatenate.i10.i5.i5(i5 %trunc_ln180_1, i5 0)" [cpp/accel/Accel.cpp:157]   --->   Operation 179 'bitconcatenate' 'p_shl7_cast' <Predicate = (!icmp_ln149)> <Delay = 0.00>
ST_11 : Operation 180 [1/1] (1.41ns)   --->   "%sub_ln180_1 = sub i10 %p_shl7_cast, %zext_ln180_14" [cpp/accel/Accel.cpp:157]   --->   Operation 180 'sub' 'sub_ln180_1' <Predicate = (!icmp_ln149)> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 181 [1/1] (0.00ns)   --->   "%zext_ln180_16 = zext i10 %sub_ln180_1 to i64" [cpp/accel/Accel.cpp:157]   --->   Operation 181 'zext' 'zext_ln180_16' <Predicate = (!icmp_ln149)> <Delay = 0.00>
ST_11 : Operation 182 [1/1] (0.00ns)   --->   "%line_buffer_m_V_addr_5 = getelementptr [480 x i2]* %line_buffer_m_V, i64 0, i64 %zext_ln180_16" [cpp/accel/Accel.cpp:159]   --->   Operation 182 'getelementptr' 'line_buffer_m_V_addr_5' <Predicate = (!icmp_ln149)> <Delay = 0.00>
ST_11 : Operation 183 [1/1] (1.41ns)   --->   "%add_ln180_8 = add i10 9, %sub_ln180_1" [cpp/accel/Accel.cpp:160]   --->   Operation 183 'add' 'add_ln180_8' <Predicate = (!icmp_ln149)> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 184 [1/1] (0.00ns)   --->   "%zext_ln180_17 = zext i10 %add_ln180_8 to i64" [cpp/accel/Accel.cpp:160]   --->   Operation 184 'zext' 'zext_ln180_17' <Predicate = (!icmp_ln149)> <Delay = 0.00>
ST_11 : Operation 185 [1/1] (0.00ns)   --->   "%line_buffer_m_V_addr_7 = getelementptr [480 x i2]* %line_buffer_m_V, i64 0, i64 %zext_ln180_17" [cpp/accel/Accel.cpp:160]   --->   Operation 185 'getelementptr' 'line_buffer_m_V_addr_7' <Predicate = (!icmp_ln149)> <Delay = 0.00>
ST_11 : Operation 186 [1/1] (1.41ns)   --->   "%add_ln180_9 = add i10 10, %sub_ln180_1" [cpp/accel/Accel.cpp:175]   --->   Operation 186 'add' 'add_ln180_9' <Predicate = (!icmp_ln149)> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 187 [1/1] (0.00ns)   --->   "%zext_ln180_18 = zext i10 %add_ln180_9 to i64" [cpp/accel/Accel.cpp:175]   --->   Operation 187 'zext' 'zext_ln180_18' <Predicate = (!icmp_ln149)> <Delay = 0.00>
ST_11 : Operation 188 [1/1] (0.00ns)   --->   "%line_buffer_m_V_addr_8 = getelementptr [480 x i2]* %line_buffer_m_V, i64 0, i64 %zext_ln180_18" [cpp/accel/Accel.cpp:178]   --->   Operation 188 'getelementptr' 'line_buffer_m_V_addr_8' <Predicate = (!icmp_ln149)> <Delay = 0.00>
ST_11 : Operation 189 [1/1] (1.41ns)   --->   "%add_ln180_10 = add i10 19, %sub_ln180_1" [cpp/accel/Accel.cpp:179]   --->   Operation 189 'add' 'add_ln180_10' <Predicate = (!icmp_ln149)> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 190 [1/1] (0.00ns)   --->   "%zext_ln180_19 = zext i10 %add_ln180_10 to i64" [cpp/accel/Accel.cpp:179]   --->   Operation 190 'zext' 'zext_ln180_19' <Predicate = (!icmp_ln149)> <Delay = 0.00>
ST_11 : Operation 191 [1/1] (0.00ns)   --->   "%line_buffer_m_V_addr_9 = getelementptr [480 x i2]* %line_buffer_m_V, i64 0, i64 %zext_ln180_19" [cpp/accel/Accel.cpp:179]   --->   Operation 191 'getelementptr' 'line_buffer_m_V_addr_9' <Predicate = (!icmp_ln149)> <Delay = 0.00>
ST_11 : Operation 192 [1/1] (0.00ns)   --->   "br i1 %tmp_12, label %.preheader.preheader, label %.preheader928.preheader" [cpp/accel/Accel.cpp:153]   --->   Operation 192 'br' <Predicate = (!icmp_ln149)> <Delay = 0.00>
ST_11 : Operation 193 [1/1] (1.35ns)   --->   "%add_ln180_11 = add i6 %ret_V_10, %zext_ln99_1" [cpp/accel/Accel.cpp:157]   --->   Operation 193 'add' 'add_ln180_11' <Predicate = (!icmp_ln149 & !tmp_12)> <Delay = 1.35> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 194 [1/1] (0.00ns)   --->   "%p_shl10_cast = call i9 @_ssdm_op_BitConcatenate.i9.i6.i3(i6 %add_ln180_11, i3 0)" [cpp/accel/Accel.cpp:157]   --->   Operation 194 'bitconcatenate' 'p_shl10_cast' <Predicate = (!icmp_ln149 & !tmp_12)> <Delay = 0.00>
ST_11 : Operation 195 [1/1] (0.00ns)   --->   "%tmp_15 = call i7 @_ssdm_op_BitConcatenate.i7.i6.i1(i6 %add_ln180_11, i1 false)" [cpp/accel/Accel.cpp:157]   --->   Operation 195 'bitconcatenate' 'tmp_15' <Predicate = (!icmp_ln149 & !tmp_12)> <Delay = 0.00>
ST_11 : Operation 196 [1/1] (0.00ns)   --->   "%zext_ln180_20 = zext i7 %tmp_15 to i9" [cpp/accel/Accel.cpp:157]   --->   Operation 196 'zext' 'zext_ln180_20' <Predicate = (!icmp_ln149 & !tmp_12)> <Delay = 0.00>
ST_11 : Operation 197 [1/1] (1.40ns)   --->   "%add_ln180_12 = add i9 %p_shl10_cast, %zext_ln180_20" [cpp/accel/Accel.cpp:157]   --->   Operation 197 'add' 'add_ln180_12' <Predicate = (!icmp_ln149 & !tmp_12)> <Delay = 1.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 198 [1/1] (0.00ns)   --->   "%zext_ln180_21 = zext i9 %add_ln180_12 to i64" [cpp/accel/Accel.cpp:157]   --->   Operation 198 'zext' 'zext_ln180_21' <Predicate = (!icmp_ln149 & !tmp_12)> <Delay = 0.00>
ST_11 : Operation 199 [1/1] (0.00ns)   --->   "%word_buffer_m_V_addr_3 = getelementptr [160 x i2]* %word_buffer_m_V, i64 0, i64 %zext_ln180_21" [cpp/accel/Accel.cpp:159]   --->   Operation 199 'getelementptr' 'word_buffer_m_V_addr_3' <Predicate = (!icmp_ln149 & !tmp_12)> <Delay = 0.00>
ST_11 : Operation 200 [1/1] (1.40ns)   --->   "%add_ln160 = add i9 %add_ln180_12, 9" [cpp/accel/Accel.cpp:160]   --->   Operation 200 'add' 'add_ln160' <Predicate = (!icmp_ln149 & !tmp_12)> <Delay = 1.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 201 [1/1] (0.00ns)   --->   "%zext_ln160 = zext i9 %add_ln160 to i64" [cpp/accel/Accel.cpp:160]   --->   Operation 201 'zext' 'zext_ln160' <Predicate = (!icmp_ln149 & !tmp_12)> <Delay = 0.00>
ST_11 : Operation 202 [1/1] (0.00ns)   --->   "%word_buffer_m_V_addr_4 = getelementptr [160 x i2]* %word_buffer_m_V, i64 0, i64 %zext_ln160" [cpp/accel/Accel.cpp:160]   --->   Operation 202 'getelementptr' 'word_buffer_m_V_addr_4' <Predicate = (!icmp_ln149 & !tmp_12)> <Delay = 0.00>
ST_11 : Operation 203 [1/1] (1.06ns)   --->   "br label %.preheader928" [cpp/accel/Accel.cpp:155]   --->   Operation 203 'br' <Predicate = (!icmp_ln149 & !tmp_12)> <Delay = 1.06>
ST_11 : Operation 204 [1/1] (1.35ns)   --->   "%ret_V_9 = add i6 8, %ret_V_10" [cpp/accel/Accel.cpp:165]   --->   Operation 204 'add' 'ret_V_9' <Predicate = (!icmp_ln149 & tmp_12)> <Delay = 1.35> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 205 [1/1] (0.00ns)   --->   "%sext_ln165 = sext i6 %ret_V_9 to i7" [cpp/accel/Accel.cpp:165]   --->   Operation 205 'sext' 'sext_ln165' <Predicate = (!icmp_ln149 & tmp_12)> <Delay = 0.00>
ST_11 : Operation 206 [1/1] (1.35ns)   --->   "%add_ln165 = add i7 %zext_ln99, %sext_ln165" [cpp/accel/Accel.cpp:165]   --->   Operation 206 'add' 'add_ln165' <Predicate = (!icmp_ln149 & tmp_12)> <Delay = 1.35> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 207 [1/1] (0.00ns)   --->   "%trunc_ln165 = trunc i7 %add_ln165 to i6" [cpp/accel/Accel.cpp:165]   --->   Operation 207 'trunc' 'trunc_ln165' <Predicate = (!icmp_ln149 & tmp_12)> <Delay = 0.00>
ST_11 : Operation 208 [1/1] (0.00ns)   --->   "%p_shl12_cast = call i9 @_ssdm_op_BitConcatenate.i9.i6.i3(i6 %trunc_ln165, i3 0)" [cpp/accel/Accel.cpp:165]   --->   Operation 208 'bitconcatenate' 'p_shl12_cast' <Predicate = (!icmp_ln149 & tmp_12)> <Delay = 0.00>
ST_11 : Operation 209 [1/1] (0.00ns)   --->   "%tmp_14 = call i8 @_ssdm_op_BitConcatenate.i8.i7.i1(i7 %add_ln165, i1 false)" [cpp/accel/Accel.cpp:165]   --->   Operation 209 'bitconcatenate' 'tmp_14' <Predicate = (!icmp_ln149 & tmp_12)> <Delay = 0.00>
ST_11 : Operation 210 [1/1] (0.00ns)   --->   "%sext_ln165_1 = sext i8 %tmp_14 to i9" [cpp/accel/Accel.cpp:165]   --->   Operation 210 'sext' 'sext_ln165_1' <Predicate = (!icmp_ln149 & tmp_12)> <Delay = 0.00>
ST_11 : Operation 211 [1/1] (1.40ns)   --->   "%add_ln165_1 = add i9 %sext_ln165_1, %p_shl12_cast" [cpp/accel/Accel.cpp:165]   --->   Operation 211 'add' 'add_ln165_1' <Predicate = (!icmp_ln149 & tmp_12)> <Delay = 1.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 212 [1/1] (0.00ns)   --->   "%zext_ln165 = zext i9 %add_ln165_1 to i64" [cpp/accel/Accel.cpp:165]   --->   Operation 212 'zext' 'zext_ln165' <Predicate = (!icmp_ln149 & tmp_12)> <Delay = 0.00>
ST_11 : Operation 213 [1/1] (0.00ns)   --->   "%old_word_buffer_m_V_6 = getelementptr [160 x i2]* %old_word_buffer_m_V, i64 0, i64 %zext_ln165" [cpp/accel/Accel.cpp:167]   --->   Operation 213 'getelementptr' 'old_word_buffer_m_V_6' <Predicate = (!icmp_ln149 & tmp_12)> <Delay = 0.00>
ST_11 : Operation 214 [1/1] (1.40ns)   --->   "%add_ln168 = add i9 9, %add_ln165_1" [cpp/accel/Accel.cpp:168]   --->   Operation 214 'add' 'add_ln168' <Predicate = (!icmp_ln149 & tmp_12)> <Delay = 1.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 215 [1/1] (0.00ns)   --->   "%zext_ln168 = zext i9 %add_ln168 to i64" [cpp/accel/Accel.cpp:168]   --->   Operation 215 'zext' 'zext_ln168' <Predicate = (!icmp_ln149 & tmp_12)> <Delay = 0.00>
ST_11 : Operation 216 [1/1] (0.00ns)   --->   "%old_word_buffer_m_V_7 = getelementptr [160 x i2]* %old_word_buffer_m_V, i64 0, i64 %zext_ln168" [cpp/accel/Accel.cpp:168]   --->   Operation 216 'getelementptr' 'old_word_buffer_m_V_7' <Predicate = (!icmp_ln149 & tmp_12)> <Delay = 0.00>
ST_11 : Operation 217 [1/1] (1.06ns)   --->   "br label %.preheader" [cpp/accel/Accel.cpp:163]   --->   Operation 217 'br' <Predicate = (!icmp_ln149 & tmp_12)> <Delay = 1.06>
ST_11 : Operation 218 [1/1] (0.00ns)   --->   "ret void" [cpp/accel/Accel.cpp:186]   --->   Operation 218 'ret' <Predicate = (icmp_ln149)> <Delay = 0.00>

State 12 <SV = 4> <Delay = 2.87>
ST_12 : Operation 219 [1/1] (0.00ns)   --->   "%p_0324_0 = phi i4 [ %cc_V_5, %8 ], [ 1, %.preheader928.preheader ]"   --->   Operation 219 'phi' 'p_0324_0' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 220 [1/1] (1.08ns)   --->   "%icmp_ln155 = icmp eq i4 %p_0324_0, -7" [cpp/accel/Accel.cpp:155]   --->   Operation 220 'icmp' 'icmp_ln155' <Predicate = true> <Delay = 1.08> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 221 [1/1] (0.00ns)   --->   "%empty_43 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 221 'speclooptripcount' 'empty_43' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 222 [1/1] (0.00ns)   --->   "br i1 %icmp_ln155, label %_ifconv8, label %8" [cpp/accel/Accel.cpp:155]   --->   Operation 222 'br' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 223 [1/1] (0.00ns)   --->   "%zext_ln180_29 = zext i4 %p_0324_0 to i9" [cpp/accel/Accel.cpp:157]   --->   Operation 223 'zext' 'zext_ln180_29' <Predicate = (!icmp_ln155)> <Delay = 0.00>
ST_12 : Operation 224 [1/1] (1.40ns)   --->   "%add_ln180_16 = add i9 %add_ln180_12, %zext_ln180_29" [cpp/accel/Accel.cpp:157]   --->   Operation 224 'add' 'add_ln180_16' <Predicate = (!icmp_ln155)> <Delay = 1.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 225 [1/1] (0.00ns)   --->   "%zext_ln180_30 = zext i9 %add_ln180_16 to i64" [cpp/accel/Accel.cpp:157]   --->   Operation 225 'zext' 'zext_ln180_30' <Predicate = (!icmp_ln155)> <Delay = 0.00>
ST_12 : Operation 226 [1/1] (0.00ns)   --->   "%word_buffer_m_V_addr_1 = getelementptr [160 x i2]* %word_buffer_m_V, i64 0, i64 %zext_ln180_30" [cpp/accel/Accel.cpp:157]   --->   Operation 226 'getelementptr' 'word_buffer_m_V_addr_1' <Predicate = (!icmp_ln155)> <Delay = 0.00>
ST_12 : Operation 227 [2/2] (1.46ns)   --->   "%word_buffer_m_V_load_1 = load i2* %word_buffer_m_V_addr_1, align 1" [cpp/accel/Accel.cpp:157]   --->   Operation 227 'load' 'word_buffer_m_V_load_1' <Predicate = (!icmp_ln155)> <Delay = 1.46> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_12 : Operation 228 [1/1] (0.00ns)   --->   "%lb_addr_2 = getelementptr [8 x i1]* %lb, i64 0, i64 %zext_ln544_5" [cpp/accel/Accel.cpp:159]   --->   Operation 228 'getelementptr' 'lb_addr_2' <Predicate = (icmp_ln155)> <Delay = 0.00>
ST_12 : Operation 229 [2/2] (1.42ns)   --->   "%lb_load_2 = load i1* %lb_addr_2, align 1" [cpp/accel/Accel.cpp:159]   --->   Operation 229 'load' 'lb_load_2' <Predicate = (icmp_ln155)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_12 : Operation 230 [2/2] (1.46ns)   --->   "%word_buffer_m_V_load_3 = load i2* %word_buffer_m_V_addr_3, align 1" [cpp/accel/Accel.cpp:159]   --->   Operation 230 'load' 'word_buffer_m_V_load_3' <Predicate = (icmp_ln155)> <Delay = 1.46> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_12 : Operation 231 [1/1] (0.00ns)   --->   "%rb_addr_1 = getelementptr [8 x i1]* %rb, i64 0, i64 %zext_ln544_5" [cpp/accel/Accel.cpp:160]   --->   Operation 231 'getelementptr' 'rb_addr_1' <Predicate = (icmp_ln155)> <Delay = 0.00>
ST_12 : Operation 232 [2/2] (1.42ns)   --->   "%rb_load_1 = load i1* %rb_addr_1, align 1" [cpp/accel/Accel.cpp:160]   --->   Operation 232 'load' 'rb_load_1' <Predicate = (icmp_ln155)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_12 : Operation 233 [2/2] (1.46ns)   --->   "%word_buffer_m_V_load_4 = load i2* %word_buffer_m_V_addr_4, align 1" [cpp/accel/Accel.cpp:160]   --->   Operation 233 'load' 'word_buffer_m_V_load_4' <Predicate = (icmp_ln155)> <Delay = 1.46> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>

State 13 <SV = 5> <Delay = 3.09>
ST_13 : Operation 234 [1/1] (0.00ns)   --->   "%zext_ln180_28 = zext i4 %p_0324_0 to i10" [cpp/accel/Accel.cpp:157]   --->   Operation 234 'zext' 'zext_ln180_28' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 235 [1/1] (1.41ns)   --->   "%add_ln180_17 = add i10 %sub_ln180_1, %zext_ln180_28" [cpp/accel/Accel.cpp:157]   --->   Operation 235 'add' 'add_ln180_17' <Predicate = true> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 236 [1/1] (0.00ns)   --->   "%zext_ln180_31 = zext i10 %add_ln180_17 to i64" [cpp/accel/Accel.cpp:157]   --->   Operation 236 'zext' 'zext_ln180_31' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 237 [1/1] (0.00ns)   --->   "%line_buffer_m_V_addr_1 = getelementptr [480 x i2]* %line_buffer_m_V, i64 0, i64 %zext_ln180_31" [cpp/accel/Accel.cpp:157]   --->   Operation 237 'getelementptr' 'line_buffer_m_V_addr_1' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 238 [1/2] (1.46ns)   --->   "%word_buffer_m_V_load_1 = load i2* %word_buffer_m_V_addr_1, align 1" [cpp/accel/Accel.cpp:157]   --->   Operation 238 'load' 'word_buffer_m_V_load_1' <Predicate = true> <Delay = 1.46> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_13 : Operation 239 [1/1] (1.62ns)   --->   "store i2 %word_buffer_m_V_load_1, i2* %line_buffer_m_V_addr_1, align 1" [cpp/accel/Accel.cpp:157]   --->   Operation 239 'store' <Predicate = true> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_13 : Operation 240 [1/1] (1.32ns)   --->   "%cc_V_5 = add i4 %p_0324_0, 1" [cpp/accel/Accel.cpp:155]   --->   Operation 240 'add' 'cc_V_5' <Predicate = true> <Delay = 1.32> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 241 [1/1] (0.00ns)   --->   "br label %.preheader928" [cpp/accel/Accel.cpp:155]   --->   Operation 241 'br' <Predicate = true> <Delay = 0.00>

State 14 <SV = 5> <Delay = 4.77>
ST_14 : Operation 242 [1/2] (1.42ns)   --->   "%lb_load_2 = load i1* %lb_addr_2, align 1" [cpp/accel/Accel.cpp:159]   --->   Operation 242 'load' 'lb_load_2' <Predicate = (!tmp_12)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_14 : Operation 243 [1/2] (1.46ns)   --->   "%word_buffer_m_V_load_3 = load i2* %word_buffer_m_V_addr_3, align 1" [cpp/accel/Accel.cpp:159]   --->   Operation 243 'load' 'word_buffer_m_V_load_3' <Predicate = (!tmp_12)> <Delay = 1.46> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_14 : Operation 244 [1/1] (0.62ns)   --->   "%select_ln159 = select i1 %lb_load_2, i2 0, i2 %word_buffer_m_V_load_3" [cpp/accel/Accel.cpp:159]   --->   Operation 244 'select' 'select_ln159' <Predicate = (!tmp_12)> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 245 [1/1] (1.62ns)   --->   "store i2 %select_ln159, i2* %line_buffer_m_V_addr_5, align 1" [cpp/accel/Accel.cpp:159]   --->   Operation 245 'store' <Predicate = (!tmp_12)> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_14 : Operation 246 [1/2] (1.42ns)   --->   "%rb_load_1 = load i1* %rb_addr_1, align 1" [cpp/accel/Accel.cpp:160]   --->   Operation 246 'load' 'rb_load_1' <Predicate = (!tmp_12)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_14 : Operation 247 [1/2] (1.46ns)   --->   "%word_buffer_m_V_load_4 = load i2* %word_buffer_m_V_addr_4, align 1" [cpp/accel/Accel.cpp:160]   --->   Operation 247 'load' 'word_buffer_m_V_load_4' <Predicate = (!tmp_12)> <Delay = 1.46> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_14 : Operation 248 [1/1] (0.62ns)   --->   "%select_ln160 = select i1 %rb_load_1, i2 0, i2 %word_buffer_m_V_load_4" [cpp/accel/Accel.cpp:160]   --->   Operation 248 'select' 'select_ln160' <Predicate = (!tmp_12)> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 249 [1/1] (1.06ns)   --->   "br label %9" [cpp/accel/Accel.cpp:161]   --->   Operation 249 'br' <Predicate = (!tmp_12)> <Delay = 1.06>
ST_14 : Operation 250 [1/2] (1.42ns)   --->   "%lb_load_3 = load i1* %lb_addr_3, align 1" [cpp/accel/Accel.cpp:167]   --->   Operation 250 'load' 'lb_load_3' <Predicate = (tmp_12)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_14 : Operation 251 [1/2] (1.46ns)   --->   "%old_word_buffer_m_V_10 = load i2* %old_word_buffer_m_V_6, align 1" [cpp/accel/Accel.cpp:167]   --->   Operation 251 'load' 'old_word_buffer_m_V_10' <Predicate = (tmp_12)> <Delay = 1.46> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_14 : Operation 252 [1/1] (0.00ns) (grouped into LUT with out node select_ln167)   --->   "%or_ln167 = or i1 %lb_load_3, %first_wrd" [cpp/accel/Accel.cpp:167]   --->   Operation 252 'or' 'or_ln167' <Predicate = (tmp_12)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 253 [1/1] (0.62ns) (out node of the LUT)   --->   "%select_ln167 = select i1 %or_ln167, i2 0, i2 %old_word_buffer_m_V_10" [cpp/accel/Accel.cpp:167]   --->   Operation 253 'select' 'select_ln167' <Predicate = (tmp_12)> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 254 [1/1] (1.62ns)   --->   "store i2 %select_ln167, i2* %line_buffer_m_V_addr_5, align 1" [cpp/accel/Accel.cpp:167]   --->   Operation 254 'store' <Predicate = (tmp_12)> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_14 : Operation 255 [1/2] (1.42ns)   --->   "%rb_load_3 = load i1* %rb_addr_3, align 1" [cpp/accel/Accel.cpp:168]   --->   Operation 255 'load' 'rb_load_3' <Predicate = (tmp_12)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_14 : Operation 256 [1/2] (1.46ns)   --->   "%old_word_buffer_m_V_11 = load i2* %old_word_buffer_m_V_7, align 1" [cpp/accel/Accel.cpp:168]   --->   Operation 256 'load' 'old_word_buffer_m_V_11' <Predicate = (tmp_12)> <Delay = 1.46> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_14 : Operation 257 [1/1] (0.00ns) (grouped into LUT with out node select_ln168)   --->   "%or_ln168 = or i1 %rb_load_3, %first_wrd" [cpp/accel/Accel.cpp:168]   --->   Operation 257 'or' 'or_ln168' <Predicate = (tmp_12)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 258 [1/1] (0.62ns) (out node of the LUT)   --->   "%select_ln168 = select i1 %or_ln168, i2 0, i2 %old_word_buffer_m_V_11" [cpp/accel/Accel.cpp:168]   --->   Operation 258 'select' 'select_ln168' <Predicate = (tmp_12)> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 259 [1/1] (1.06ns)   --->   "br label %9"   --->   Operation 259 'br' <Predicate = (tmp_12)> <Delay = 1.06>
ST_14 : Operation 260 [1/1] (0.00ns)   --->   "%storemerge1 = phi i2 [ %select_ln168, %_ifconv11 ], [ %select_ln160, %_ifconv8 ]" [cpp/accel/Accel.cpp:168]   --->   Operation 260 'phi' 'storemerge1' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 261 [1/1] (1.62ns)   --->   "store i2 %storemerge1, i2* %line_buffer_m_V_addr_7, align 1" [cpp/accel/Accel.cpp:160]   --->   Operation 261 'store' <Predicate = true> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_14 : Operation 262 [1/1] (1.06ns)   --->   "br label %10" [cpp/accel/Accel.cpp:173]   --->   Operation 262 'br' <Predicate = true> <Delay = 1.06>

State 15 <SV = 4> <Delay = 2.87>
ST_15 : Operation 263 [1/1] (0.00ns)   --->   "%p_0284_0 = phi i4 [ %cc_V_3, %_ifconv6 ], [ 1, %.preheader.preheader ]"   --->   Operation 263 'phi' 'p_0284_0' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 264 [1/1] (1.08ns)   --->   "%icmp_ln163 = icmp eq i4 %p_0284_0, -7" [cpp/accel/Accel.cpp:163]   --->   Operation 264 'icmp' 'icmp_ln163' <Predicate = true> <Delay = 1.08> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 265 [1/1] (0.00ns)   --->   "%empty_44 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 265 'speclooptripcount' 'empty_44' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 266 [1/1] (0.00ns)   --->   "br i1 %icmp_ln163, label %_ifconv11, label %_ifconv6" [cpp/accel/Accel.cpp:163]   --->   Operation 266 'br' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 267 [1/1] (0.00ns)   --->   "%zext_ln165_2 = zext i4 %p_0284_0 to i9" [cpp/accel/Accel.cpp:165]   --->   Operation 267 'zext' 'zext_ln165_2' <Predicate = (!icmp_ln163 & !first_wrd)> <Delay = 0.00>
ST_15 : Operation 268 [1/1] (1.40ns)   --->   "%add_ln165_2 = add i9 %add_ln165_1, %zext_ln165_2" [cpp/accel/Accel.cpp:165]   --->   Operation 268 'add' 'add_ln165_2' <Predicate = (!icmp_ln163 & !first_wrd)> <Delay = 1.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 269 [1/1] (0.00ns)   --->   "%zext_ln165_3 = zext i9 %add_ln165_2 to i64" [cpp/accel/Accel.cpp:165]   --->   Operation 269 'zext' 'zext_ln165_3' <Predicate = (!icmp_ln163 & !first_wrd)> <Delay = 0.00>
ST_15 : Operation 270 [1/1] (0.00ns)   --->   "%old_word_buffer_m_V_8 = getelementptr [160 x i2]* %old_word_buffer_m_V, i64 0, i64 %zext_ln165_3" [cpp/accel/Accel.cpp:165]   --->   Operation 270 'getelementptr' 'old_word_buffer_m_V_8' <Predicate = (!icmp_ln163 & !first_wrd)> <Delay = 0.00>
ST_15 : Operation 271 [2/2] (1.46ns)   --->   "%old_word_buffer_m_V_9 = load i2* %old_word_buffer_m_V_8, align 1" [cpp/accel/Accel.cpp:165]   --->   Operation 271 'load' 'old_word_buffer_m_V_9' <Predicate = (!icmp_ln163 & !first_wrd)> <Delay = 1.46> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_15 : Operation 272 [1/1] (0.00ns)   --->   "%lb_addr_3 = getelementptr [8 x i1]* %lb, i64 0, i64 %zext_ln544_5" [cpp/accel/Accel.cpp:167]   --->   Operation 272 'getelementptr' 'lb_addr_3' <Predicate = (icmp_ln163)> <Delay = 0.00>
ST_15 : Operation 273 [2/2] (1.42ns)   --->   "%lb_load_3 = load i1* %lb_addr_3, align 1" [cpp/accel/Accel.cpp:167]   --->   Operation 273 'load' 'lb_load_3' <Predicate = (icmp_ln163)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_15 : Operation 274 [2/2] (1.46ns)   --->   "%old_word_buffer_m_V_10 = load i2* %old_word_buffer_m_V_6, align 1" [cpp/accel/Accel.cpp:167]   --->   Operation 274 'load' 'old_word_buffer_m_V_10' <Predicate = (icmp_ln163)> <Delay = 1.46> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_15 : Operation 275 [1/1] (0.00ns)   --->   "%rb_addr_3 = getelementptr [8 x i1]* %rb, i64 0, i64 %zext_ln544_5" [cpp/accel/Accel.cpp:168]   --->   Operation 275 'getelementptr' 'rb_addr_3' <Predicate = (icmp_ln163)> <Delay = 0.00>
ST_15 : Operation 276 [2/2] (1.42ns)   --->   "%rb_load_3 = load i1* %rb_addr_3, align 1" [cpp/accel/Accel.cpp:168]   --->   Operation 276 'load' 'rb_load_3' <Predicate = (icmp_ln163)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_15 : Operation 277 [2/2] (1.46ns)   --->   "%old_word_buffer_m_V_11 = load i2* %old_word_buffer_m_V_7, align 1" [cpp/accel/Accel.cpp:168]   --->   Operation 277 'load' 'old_word_buffer_m_V_11' <Predicate = (icmp_ln163)> <Delay = 1.46> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>

State 16 <SV = 5> <Delay = 3.71>
ST_16 : Operation 278 [1/1] (0.00ns)   --->   "%zext_ln165_1 = zext i4 %p_0284_0 to i10" [cpp/accel/Accel.cpp:165]   --->   Operation 278 'zext' 'zext_ln165_1' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 279 [1/1] (1.41ns)   --->   "%add_ln180_18 = add i10 %sub_ln180_1, %zext_ln165_1" [cpp/accel/Accel.cpp:165]   --->   Operation 279 'add' 'add_ln180_18' <Predicate = true> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 280 [1/1] (0.00ns)   --->   "%zext_ln180_27 = zext i10 %add_ln180_18 to i64" [cpp/accel/Accel.cpp:165]   --->   Operation 280 'zext' 'zext_ln180_27' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 281 [1/1] (0.00ns)   --->   "%line_buffer_m_V_addr_6 = getelementptr [480 x i2]* %line_buffer_m_V, i64 0, i64 %zext_ln180_27" [cpp/accel/Accel.cpp:165]   --->   Operation 281 'getelementptr' 'line_buffer_m_V_addr_6' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 282 [1/2] (1.46ns)   --->   "%old_word_buffer_m_V_9 = load i2* %old_word_buffer_m_V_8, align 1" [cpp/accel/Accel.cpp:165]   --->   Operation 282 'load' 'old_word_buffer_m_V_9' <Predicate = (!first_wrd)> <Delay = 1.46> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_16 : Operation 283 [1/1] (0.62ns)   --->   "%select_ln879_2 = select i1 %first_wrd, i2 0, i2 %old_word_buffer_m_V_9" [cpp/accel/Accel.cpp:112]   --->   Operation 283 'select' 'select_ln879_2' <Predicate = true> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_16 : Operation 284 [1/1] (1.62ns)   --->   "store i2 %select_ln879_2, i2* %line_buffer_m_V_addr_6, align 1" [cpp/accel/Accel.cpp:165]   --->   Operation 284 'store' <Predicate = true> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_16 : Operation 285 [1/1] (1.32ns)   --->   "%cc_V_3 = add i4 %p_0284_0, 1" [cpp/accel/Accel.cpp:163]   --->   Operation 285 'add' 'cc_V_3' <Predicate = true> <Delay = 1.32> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 286 [1/1] (0.00ns)   --->   "br label %.preheader" [cpp/accel/Accel.cpp:163]   --->   Operation 286 'br' <Predicate = true> <Delay = 0.00>

State 17 <SV = 6> <Delay = 2.87>
ST_17 : Operation 287 [1/1] (0.00ns)   --->   "%p_0501_0 = phi i4 [ 1, %9 ], [ %cc_V_6, %11 ]"   --->   Operation 287 'phi' 'p_0501_0' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 288 [1/1] (1.08ns)   --->   "%icmp_ln173 = icmp eq i4 %p_0501_0, -7" [cpp/accel/Accel.cpp:173]   --->   Operation 288 'icmp' 'icmp_ln173' <Predicate = true> <Delay = 1.08> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 289 [1/1] (0.00ns)   --->   "%empty_45 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 289 'speclooptripcount' 'empty_45' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 290 [1/1] (0.00ns)   --->   "br i1 %icmp_ln173, label %_ifconv16, label %11" [cpp/accel/Accel.cpp:173]   --->   Operation 290 'br' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 291 [1/1] (0.00ns)   --->   "%zext_ln180_32 = zext i4 %p_0501_0 to i10" [cpp/accel/Accel.cpp:175]   --->   Operation 291 'zext' 'zext_ln180_32' <Predicate = (!icmp_ln173)> <Delay = 0.00>
ST_17 : Operation 292 [1/1] (0.00ns)   --->   "%zext_ln180_33 = zext i4 %p_0501_0 to i9" [cpp/accel/Accel.cpp:175]   --->   Operation 292 'zext' 'zext_ln180_33' <Predicate = (!icmp_ln173)> <Delay = 0.00>
ST_17 : Operation 293 [1/1] (1.40ns)   --->   "%add_ln180_19 = add i9 %add_ln180_7, %zext_ln180_33" [cpp/accel/Accel.cpp:175]   --->   Operation 293 'add' 'add_ln180_19' <Predicate = (!icmp_ln173)> <Delay = 1.40> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 294 [1/1] (0.00ns)   --->   "%zext_ln180_34 = zext i9 %add_ln180_19 to i64" [cpp/accel/Accel.cpp:175]   --->   Operation 294 'zext' 'zext_ln180_34' <Predicate = (!icmp_ln173)> <Delay = 0.00>
ST_17 : Operation 295 [1/1] (0.00ns)   --->   "%word_buffer_m_V_addr_6 = getelementptr [160 x i2]* %word_buffer_m_V, i64 0, i64 %zext_ln180_34" [cpp/accel/Accel.cpp:175]   --->   Operation 295 'getelementptr' 'word_buffer_m_V_addr_6' <Predicate = (!icmp_ln173)> <Delay = 0.00>
ST_17 : Operation 296 [1/1] (1.41ns)   --->   "%add_ln180_20 = add i10 %add_ln180_9, %zext_ln180_32" [cpp/accel/Accel.cpp:175]   --->   Operation 296 'add' 'add_ln180_20' <Predicate = (!icmp_ln173)> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 297 [2/2] (1.46ns)   --->   "%word_buffer_m_V_load_6 = load i2* %word_buffer_m_V_addr_6, align 1" [cpp/accel/Accel.cpp:175]   --->   Operation 297 'load' 'word_buffer_m_V_load_6' <Predicate = (!icmp_ln173)> <Delay = 1.46> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_17 : Operation 298 [1/1] (1.32ns)   --->   "%cc_V_6 = add i4 %p_0501_0, 1" [cpp/accel/Accel.cpp:173]   --->   Operation 298 'add' 'cc_V_6' <Predicate = (!icmp_ln173)> <Delay = 1.32> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.32> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 299 [1/1] (0.00ns)   --->   "%lb_addr_4 = getelementptr [8 x i1]* %lb, i64 0, i64 %zext_ln544_5" [cpp/accel/Accel.cpp:178]   --->   Operation 299 'getelementptr' 'lb_addr_4' <Predicate = (icmp_ln173)> <Delay = 0.00>
ST_17 : Operation 300 [2/2] (1.42ns)   --->   "%lb_load_4 = load i1* %lb_addr_4, align 1" [cpp/accel/Accel.cpp:178]   --->   Operation 300 'load' 'lb_load_4' <Predicate = (icmp_ln173)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_17 : Operation 301 [2/2] (1.46ns)   --->   "%word_buffer_m_V_load_7 = load i2* %word_buffer_m_V_addr_7, align 1" [cpp/accel/Accel.cpp:178]   --->   Operation 301 'load' 'word_buffer_m_V_load_7' <Predicate = (icmp_ln173)> <Delay = 1.46> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_17 : Operation 302 [1/1] (0.00ns)   --->   "%rb_addr_4 = getelementptr [8 x i1]* %rb, i64 0, i64 %zext_ln544_5" [cpp/accel/Accel.cpp:179]   --->   Operation 302 'getelementptr' 'rb_addr_4' <Predicate = (icmp_ln173)> <Delay = 0.00>
ST_17 : Operation 303 [2/2] (1.42ns)   --->   "%rb_load_4 = load i1* %rb_addr_4, align 1" [cpp/accel/Accel.cpp:179]   --->   Operation 303 'load' 'rb_load_4' <Predicate = (icmp_ln173)> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_17 : Operation 304 [2/2] (1.46ns)   --->   "%word_buffer_m_V_load_8 = load i2* %word_buffer_m_V_addr_8, align 1" [cpp/accel/Accel.cpp:179]   --->   Operation 304 'load' 'word_buffer_m_V_load_8' <Predicate = (icmp_ln173)> <Delay = 1.46> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>

State 18 <SV = 7> <Delay = 3.09>
ST_18 : Operation 305 [1/1] (0.00ns)   --->   "%zext_ln180_35 = zext i10 %add_ln180_20 to i64" [cpp/accel/Accel.cpp:175]   --->   Operation 305 'zext' 'zext_ln180_35' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 306 [1/1] (0.00ns)   --->   "%line_buffer_m_V_addr_10 = getelementptr [480 x i2]* %line_buffer_m_V, i64 0, i64 %zext_ln180_35" [cpp/accel/Accel.cpp:175]   --->   Operation 306 'getelementptr' 'line_buffer_m_V_addr_10' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 307 [1/2] (1.46ns)   --->   "%word_buffer_m_V_load_6 = load i2* %word_buffer_m_V_addr_6, align 1" [cpp/accel/Accel.cpp:175]   --->   Operation 307 'load' 'word_buffer_m_V_load_6' <Predicate = true> <Delay = 1.46> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_18 : Operation 308 [1/1] (1.62ns)   --->   "store i2 %word_buffer_m_V_load_6, i2* %line_buffer_m_V_addr_10, align 1" [cpp/accel/Accel.cpp:175]   --->   Operation 308 'store' <Predicate = true> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_18 : Operation 309 [1/1] (0.00ns)   --->   "br label %10" [cpp/accel/Accel.cpp:173]   --->   Operation 309 'br' <Predicate = true> <Delay = 0.00>

State 19 <SV = 7> <Delay = 3.71>
ST_19 : Operation 310 [1/2] (1.42ns)   --->   "%lb_load_4 = load i1* %lb_addr_4, align 1" [cpp/accel/Accel.cpp:178]   --->   Operation 310 'load' 'lb_load_4' <Predicate = true> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_19 : Operation 311 [1/2] (1.46ns)   --->   "%word_buffer_m_V_load_7 = load i2* %word_buffer_m_V_addr_7, align 1" [cpp/accel/Accel.cpp:178]   --->   Operation 311 'load' 'word_buffer_m_V_load_7' <Predicate = true> <Delay = 1.46> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_19 : Operation 312 [1/1] (0.62ns)   --->   "%select_ln178 = select i1 %lb_load_4, i2 0, i2 %word_buffer_m_V_load_7" [cpp/accel/Accel.cpp:178]   --->   Operation 312 'select' 'select_ln178' <Predicate = true> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_19 : Operation 313 [1/1] (1.62ns)   --->   "store i2 %select_ln178, i2* %line_buffer_m_V_addr_8, align 1" [cpp/accel/Accel.cpp:178]   --->   Operation 313 'store' <Predicate = true> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_19 : Operation 314 [1/2] (1.42ns)   --->   "%rb_load_4 = load i1* %rb_addr_4, align 1" [cpp/accel/Accel.cpp:179]   --->   Operation 314 'load' 'rb_load_4' <Predicate = true> <Delay = 1.42> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_19 : Operation 315 [1/2] (1.46ns)   --->   "%word_buffer_m_V_load_8 = load i2* %word_buffer_m_V_addr_8, align 1" [cpp/accel/Accel.cpp:179]   --->   Operation 315 'load' 'word_buffer_m_V_load_8' <Predicate = true> <Delay = 1.46> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_19 : Operation 316 [1/1] (0.62ns)   --->   "%select_ln179 = select i1 %rb_load_4, i2 0, i2 %word_buffer_m_V_load_8" [cpp/accel/Accel.cpp:179]   --->   Operation 316 'select' 'select_ln179' <Predicate = true> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_19 : Operation 317 [1/1] (1.62ns)   --->   "store i2 %select_ln179, i2* %line_buffer_m_V_addr_9, align 1" [cpp/accel/Accel.cpp:179]   --->   Operation 317 'store' <Predicate = true> <Delay = 1.62> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.62> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 2> <Depth = 480> <RAM>
ST_19 : Operation 318 [1/1] (0.00ns)   --->   "br label %6" [cpp/accel/Accel.cpp:149]   --->   Operation 318 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 12ns, clock uncertainty: 1.5ns.

 <State 1>: 2.84ns
The critical path consists of the following:
	wire read on port 'log_width_V' (cpp/accel/Accel.cpp:132) [14]  (0 ns)
	'add' operation ('add_ln111', cpp/accel/Accel.cpp:111) [20]  (1.16 ns)
	'shl' operation ('val', cpp/accel/Accel.cpp:111) [22]  (1.67 ns)

 <State 2>: 6.12ns
The critical path consists of the following:
	'phi' operation ('bank.V') with incoming values : ('bank.V', cpp/accel/Accel.cpp:118) [30]  (0 ns)
	'xor' operation ('xor_ln68', cpp/accel/Accel.cpp:119) [36]  (0.616 ns)
	'add' operation ('s_idx.V', cpp/accel/Accel.cpp:119) [38]  (1.34 ns)
	'add' operation ('add_ln132', cpp/accel/Accel.cpp:132) [56]  (1.36 ns)
	'add' operation ('add_ln132_1', cpp/accel/Accel.cpp:132) [60]  (1.4 ns)
	'add' operation ('add_ln135', cpp/accel/Accel.cpp:135) [63]  (1.4 ns)

 <State 3>: 2.87ns
The critical path consists of the following:
	'phi' operation ('cc.V') with incoming values : ('cc.V', cpp/accel/Accel.cpp:130) [68]  (0 ns)
	'add' operation ('add_ln132_2', cpp/accel/Accel.cpp:132) [75]  (1.4 ns)
	'getelementptr' operation ('word_buffer_m_V_addr', cpp/accel/Accel.cpp:132) [77]  (0 ns)
	'load' operation ('word_buffer_m_V_load', cpp/accel/Accel.cpp:132) on array 'word_buffer_m_V' [81]  (1.47 ns)

 <State 4>: 3.71ns
The critical path consists of the following:
	'load' operation ('word_buffer_m_V_load', cpp/accel/Accel.cpp:132) on array 'word_buffer_m_V' [81]  (1.47 ns)
	'select' operation ('select_ln879', cpp/accel/Accel.cpp:113) [82]  (0.62 ns)
	'store' operation ('store_ln132', cpp/accel/Accel.cpp:132) of variable 'select_ln879', cpp/accel/Accel.cpp:113 on array 'line_buffer_m_V' [83]  (1.63 ns)

 <State 5>: 3.71ns
The critical path consists of the following:
	'load' operation ('word_buffer_m_V_load_2', cpp/accel/Accel.cpp:134) on array 'word_buffer_m_V' [89]  (1.47 ns)
	'select' operation ('select_ln134', cpp/accel/Accel.cpp:134) [91]  (0.62 ns)
	'store' operation ('store_ln134', cpp/accel/Accel.cpp:134) of variable 'select_ln134', cpp/accel/Accel.cpp:134 on array 'line_buffer_m_V' [92]  (1.63 ns)

 <State 6>: 2.87ns
The critical path consists of the following:
	'phi' operation ('cc.V') with incoming values : ('cc.V', cpp/accel/Accel.cpp:122) [115]  (0 ns)
	'add' operation ('add_ln180_13', cpp/accel/Accel.cpp:124) [122]  (1.4 ns)
	'getelementptr' operation ('old_word_buffer_m_V_2', cpp/accel/Accel.cpp:124) [124]  (0 ns)
	'load' operation ('old_word_buffer_m_V_3', cpp/accel/Accel.cpp:124) on array 'old_word_buffer_m_V' [128]  (1.47 ns)

 <State 7>: 3.09ns
The critical path consists of the following:
	'load' operation ('old_word_buffer_m_V_3', cpp/accel/Accel.cpp:124) on array 'old_word_buffer_m_V' [128]  (1.47 ns)
	'store' operation ('store_ln124', cpp/accel/Accel.cpp:124) of variable 'old_word_buffer_m_V_3', cpp/accel/Accel.cpp:124 on array 'line_buffer_m_V' [129]  (1.63 ns)

 <State 8>: 3.71ns
The critical path consists of the following:
	'load' operation ('old_word_buffer_m_V_4', cpp/accel/Accel.cpp:126) on array 'old_word_buffer_m_V' [135]  (1.47 ns)
	'select' operation ('select_ln126', cpp/accel/Accel.cpp:126) [136]  (0.62 ns)
	'store' operation ('store_ln126', cpp/accel/Accel.cpp:126) of variable 'select_ln126', cpp/accel/Accel.cpp:126 on array 'line_buffer_m_V' [137]  (1.63 ns)

 <State 9>: 1.63ns
The critical path consists of the following:
	'phi' operation ('storemerge', cpp/accel/Accel.cpp:135) with incoming values : ('select_ln135', cpp/accel/Accel.cpp:135) ('select_ln127', cpp/accel/Accel.cpp:127) [144]  (0 ns)
	'store' operation ('store_ln127', cpp/accel/Accel.cpp:127) of variable 'storemerge', cpp/accel/Accel.cpp:135 on array 'line_buffer_m_V' [145]  (1.63 ns)

 <State 10>: 1.06ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('bank.V') with incoming values : ('bank.V', cpp/accel/Accel.cpp:149) [152]  (1.06 ns)

 <State 11>: 6.86ns
The critical path consists of the following:
	'phi' operation ('bank.V') with incoming values : ('bank.V', cpp/accel/Accel.cpp:149) [152]  (0 ns)
	'sub' operation ('ret.V', cpp/accel/Accel.cpp:152) [159]  (1.34 ns)
	'add' operation ('ret.V', cpp/accel/Accel.cpp:165) [230]  (1.36 ns)
	'add' operation ('add_ln165', cpp/accel/Accel.cpp:165) [232]  (1.36 ns)
	'add' operation ('add_ln165_1', cpp/accel/Accel.cpp:165) [237]  (1.4 ns)
	'add' operation ('add_ln168', cpp/accel/Accel.cpp:168) [240]  (1.4 ns)

 <State 12>: 2.87ns
The critical path consists of the following:
	'phi' operation ('cc.V') with incoming values : ('cc.V', cpp/accel/Accel.cpp:155) [201]  (0 ns)
	'add' operation ('add_ln180_16', cpp/accel/Accel.cpp:157) [208]  (1.4 ns)
	'getelementptr' operation ('word_buffer_m_V_addr_1', cpp/accel/Accel.cpp:157) [210]  (0 ns)
	'load' operation ('word_buffer_m_V_load_1', cpp/accel/Accel.cpp:157) on array 'word_buffer_m_V' [214]  (1.47 ns)

 <State 13>: 3.09ns
The critical path consists of the following:
	'load' operation ('word_buffer_m_V_load_1', cpp/accel/Accel.cpp:157) on array 'word_buffer_m_V' [214]  (1.47 ns)
	'store' operation ('store_ln157', cpp/accel/Accel.cpp:157) of variable 'word_buffer_m_V_load_1', cpp/accel/Accel.cpp:157 on array 'line_buffer_m_V' [215]  (1.63 ns)

 <State 14>: 4.77ns
The critical path consists of the following:
	'load' operation ('word_buffer_m_V_load_4', cpp/accel/Accel.cpp:160) on array 'word_buffer_m_V' [226]  (1.47 ns)
	'select' operation ('select_ln160', cpp/accel/Accel.cpp:160) [227]  (0.62 ns)
	multiplexor before 'phi' operation ('storemerge1', cpp/accel/Accel.cpp:168) with incoming values : ('select_ln160', cpp/accel/Accel.cpp:160) ('select_ln168', cpp/accel/Accel.cpp:168) [277]  (1.06 ns)
	'phi' operation ('storemerge1', cpp/accel/Accel.cpp:168) with incoming values : ('select_ln160', cpp/accel/Accel.cpp:160) ('select_ln168', cpp/accel/Accel.cpp:168) [277]  (0 ns)
	'store' operation ('store_ln160', cpp/accel/Accel.cpp:160) of variable 'storemerge1', cpp/accel/Accel.cpp:168 on array 'line_buffer_m_V' [278]  (1.63 ns)

 <State 15>: 2.87ns
The critical path consists of the following:
	'phi' operation ('cc.V') with incoming values : ('cc.V', cpp/accel/Accel.cpp:163) [245]  (0 ns)
	'add' operation ('add_ln165_2', cpp/accel/Accel.cpp:165) [252]  (1.4 ns)
	'getelementptr' operation ('old_word_buffer_m_V_8', cpp/accel/Accel.cpp:165) [254]  (0 ns)
	'load' operation ('old_word_buffer_m_V_9', cpp/accel/Accel.cpp:165) on array 'old_word_buffer_m_V' [258]  (1.47 ns)

 <State 16>: 3.71ns
The critical path consists of the following:
	'load' operation ('old_word_buffer_m_V_9', cpp/accel/Accel.cpp:165) on array 'old_word_buffer_m_V' [258]  (1.47 ns)
	'select' operation ('select_ln879_2', cpp/accel/Accel.cpp:112) [259]  (0.62 ns)
	'store' operation ('store_ln165', cpp/accel/Accel.cpp:165) of variable 'select_ln879_2', cpp/accel/Accel.cpp:112 on array 'line_buffer_m_V' [260]  (1.63 ns)

 <State 17>: 2.87ns
The critical path consists of the following:
	'phi' operation ('cc.V') with incoming values : ('cc.V', cpp/accel/Accel.cpp:173) [281]  (0 ns)
	'add' operation ('add_ln180_19', cpp/accel/Accel.cpp:175) [288]  (1.4 ns)
	'getelementptr' operation ('word_buffer_m_V_addr_6', cpp/accel/Accel.cpp:175) [290]  (0 ns)
	'load' operation ('word_buffer_m_V_load_6', cpp/accel/Accel.cpp:175) on array 'word_buffer_m_V' [294]  (1.47 ns)

 <State 18>: 3.09ns
The critical path consists of the following:
	'load' operation ('word_buffer_m_V_load_6', cpp/accel/Accel.cpp:175) on array 'word_buffer_m_V' [294]  (1.47 ns)
	'store' operation ('store_ln175', cpp/accel/Accel.cpp:175) of variable 'word_buffer_m_V_load_6', cpp/accel/Accel.cpp:175 on array 'line_buffer_m_V' [295]  (1.63 ns)

 <State 19>: 3.71ns
The critical path consists of the following:
	'load' operation ('word_buffer_m_V_load_7', cpp/accel/Accel.cpp:178) on array 'word_buffer_m_V' [301]  (1.47 ns)
	'select' operation ('select_ln178', cpp/accel/Accel.cpp:178) [302]  (0.62 ns)
	'store' operation ('store_ln178', cpp/accel/Accel.cpp:178) of variable 'select_ln178', cpp/accel/Accel.cpp:178 on array 'line_buffer_m_V' [303]  (1.63 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
