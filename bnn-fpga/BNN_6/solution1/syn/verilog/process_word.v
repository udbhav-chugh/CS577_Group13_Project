// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module process_word (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        word_buffer_m_V_address0,
        word_buffer_m_V_ce0,
        word_buffer_m_V_q0,
        word_buffer_m_V_address1,
        word_buffer_m_V_ce1,
        word_buffer_m_V_q1,
        word_buffer_m_V_offset,
        old_word_buffer_m_V_address0,
        old_word_buffer_m_V_ce0,
        old_word_buffer_m_V_q0,
        old_word_buffer_m_V_address1,
        old_word_buffer_m_V_ce1,
        old_word_buffer_m_V_q1,
        lb_address0,
        lb_ce0,
        lb_q0,
        rb_address0,
        rb_ce0,
        rb_q0,
        line_buffer_m_V_address0,
        line_buffer_m_V_ce0,
        line_buffer_m_V_we0,
        line_buffer_m_V_d0,
        line_buffer_m_V_q0,
        line_buffer_m_V_address1,
        line_buffer_m_V_ce1,
        line_buffer_m_V_we1,
        line_buffer_m_V_d1,
        conv_params_m_V_address0,
        conv_params_m_V_ce0,
        conv_params_m_V_q0,
        conv_out_buffer_m_V_address0,
        conv_out_buffer_m_V_ce0,
        conv_out_buffer_m_V_we0,
        conv_out_buffer_m_V_d0,
        log_width_V,
        words_per_image_V,
        wrd_V
);

parameter    ap_ST_fsm_state1 = 23'd1;
parameter    ap_ST_fsm_state2 = 23'd2;
parameter    ap_ST_fsm_state3 = 23'd4;
parameter    ap_ST_fsm_state4 = 23'd8;
parameter    ap_ST_fsm_state5 = 23'd16;
parameter    ap_ST_fsm_state6 = 23'd32;
parameter    ap_ST_fsm_state7 = 23'd64;
parameter    ap_ST_fsm_state8 = 23'd128;
parameter    ap_ST_fsm_state9 = 23'd256;
parameter    ap_ST_fsm_state10 = 23'd512;
parameter    ap_ST_fsm_state11 = 23'd1024;
parameter    ap_ST_fsm_state12 = 23'd2048;
parameter    ap_ST_fsm_state13 = 23'd4096;
parameter    ap_ST_fsm_state14 = 23'd8192;
parameter    ap_ST_fsm_state15 = 23'd16384;
parameter    ap_ST_fsm_state16 = 23'd32768;
parameter    ap_ST_fsm_state17 = 23'd65536;
parameter    ap_ST_fsm_state18 = 23'd131072;
parameter    ap_ST_fsm_state19 = 23'd262144;
parameter    ap_ST_fsm_state20 = 23'd524288;
parameter    ap_ST_fsm_state21 = 23'd1048576;
parameter    ap_ST_fsm_state22 = 23'd2097152;
parameter    ap_ST_fsm_state23 = 23'd4194304;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] word_buffer_m_V_address0;
output   word_buffer_m_V_ce0;
input  [1:0] word_buffer_m_V_q0;
output  [7:0] word_buffer_m_V_address1;
output   word_buffer_m_V_ce1;
input  [1:0] word_buffer_m_V_q1;
input  [1:0] word_buffer_m_V_offset;
output  [7:0] old_word_buffer_m_V_address0;
output   old_word_buffer_m_V_ce0;
input  [1:0] old_word_buffer_m_V_q0;
output  [7:0] old_word_buffer_m_V_address1;
output   old_word_buffer_m_V_ce1;
input  [1:0] old_word_buffer_m_V_q1;
output  [2:0] lb_address0;
output   lb_ce0;
input  [0:0] lb_q0;
output  [2:0] rb_address0;
output   rb_ce0;
input  [0:0] rb_q0;
output  [8:0] line_buffer_m_V_address0;
output   line_buffer_m_V_ce0;
output   line_buffer_m_V_we0;
output  [1:0] line_buffer_m_V_d0;
input  [1:0] line_buffer_m_V_q0;
output  [8:0] line_buffer_m_V_address1;
output   line_buffer_m_V_ce1;
output   line_buffer_m_V_we1;
output  [1:0] line_buffer_m_V_d1;
output  [4:0] conv_params_m_V_address0;
output   conv_params_m_V_ce0;
input  [0:0] conv_params_m_V_q0;
output  [6:0] conv_out_buffer_m_V_address0;
output   conv_out_buffer_m_V_ce0;
output   conv_out_buffer_m_V_we0;
output  [4:0] conv_out_buffer_m_V_d0;
input  [2:0] log_width_V;
input  [4:0] words_per_image_V;
input  [7:0] wrd_V;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] word_buffer_m_V_address0;
reg word_buffer_m_V_ce0;
reg[7:0] word_buffer_m_V_address1;
reg word_buffer_m_V_ce1;
reg[7:0] old_word_buffer_m_V_address0;
reg old_word_buffer_m_V_ce0;
reg[7:0] old_word_buffer_m_V_address1;
reg old_word_buffer_m_V_ce1;
reg[2:0] lb_address0;
reg lb_ce0;
reg[2:0] rb_address0;
reg rb_ce0;
reg[8:0] line_buffer_m_V_address0;
reg line_buffer_m_V_ce0;
reg line_buffer_m_V_we0;
reg[1:0] line_buffer_m_V_d0;
reg[8:0] line_buffer_m_V_address1;
reg line_buffer_m_V_ce1;
reg line_buffer_m_V_we1;
reg[1:0] line_buffer_m_V_d1;
reg conv_params_m_V_ce0;
reg conv_out_buffer_m_V_ce0;
reg conv_out_buffer_m_V_we0;

(* fsm_encoding = "none" *) reg   [22:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [6:0] zext_ln215_3_fu_666_p1;
reg   [6:0] zext_ln215_3_reg_1799;
wire   [5:0] zext_ln215_4_fu_670_p1;
reg   [5:0] zext_ln215_4_reg_1804;
wire  signed [5:0] sext_ln215_fu_692_p1;
reg  signed [5:0] sext_ln215_reg_1814;
wire   [0:0] first_wrd_fu_716_p2;
reg   [0:0] first_wrd_reg_1819;
wire   [0:0] last_wrd_fu_726_p2;
reg   [0:0] last_wrd_reg_1826;
wire   [5:0] rhs_V_fu_732_p1;
reg   [5:0] rhs_V_reg_1833;
wire   [3:0] trunc_ln68_fu_736_p1;
reg   [3:0] trunc_ln68_reg_1839;
wire   [3:0] bank_V_1_fu_746_p2;
reg   [3:0] bank_V_1_reg_1847;
wire    ap_CS_fsm_state2;
wire   [63:0] zext_ln544_fu_775_p1;
reg   [63:0] zext_ln544_reg_1855;
wire   [0:0] icmp_ln124_fu_740_p2;
wire   [9:0] add_ln180_2_fu_818_p2;
reg   [9:0] add_ln180_2_reg_1863;
reg   [8:0] line_buffer_m_V_addr_2_reg_1869;
reg   [8:0] line_buffer_m_V_addr_4_reg_1874;
wire   [8:0] add_ln138_1_fu_865_p2;
reg   [8:0] add_ln138_1_reg_1879;
wire   [0:0] tmp_5_fu_767_p3;
reg   [7:0] word_buffer_m_V_addr_2_reg_1884;
reg   [7:0] word_buffer_m_V_addr_5_reg_1889;
wire   [8:0] add_ln180_5_fu_927_p2;
reg   [8:0] add_ln180_5_reg_1894;
reg   [7:0] old_word_buffer_m_V_s_reg_1899;
reg   [7:0] old_word_buffer_m_V_1_reg_1904;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln136_fu_949_p2;
wire   [3:0] cc_V_1_fu_991_p2;
wire    ap_CS_fsm_state4;
wire   [1:0] select_ln141_fu_1016_p3;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln128_fu_1024_p2;
wire   [2:0] lb_addr_gep_fu_249_p3;
wire   [2:0] rb_addr_gep_fu_257_p3;
wire   [3:0] cc_V_fu_1058_p2;
wire    ap_CS_fsm_state7;
wire   [1:0] select_ln133_fu_1073_p3;
wire    ap_CS_fsm_state8;
wire   [3:0] bank_V_fu_1087_p2;
reg   [3:0] bank_V_reg_1968;
wire    ap_CS_fsm_state10;
wire   [5:0] ret_V_7_fu_1097_p3;
reg   [5:0] ret_V_7_reg_1973;
wire   [0:0] icmp_ln92_fu_1081_p2;
wire   [63:0] sub_ln74_fu_1130_p2;
reg   [63:0] sub_ln74_reg_1978;
wire   [3:0] cc_V_2_fu_1142_p2;
reg   [3:0] cc_V_2_reg_1986;
wire    ap_CS_fsm_state11;
reg   [6:0] conv_out_buffer_m_V_s_reg_1991;
wire   [0:0] icmp_ln93_fu_1136_p2;
wire   [1:0] kr_V_fu_1175_p2;
reg   [1:0] kr_V_reg_1999;
wire    ap_CS_fsm_state12;
wire   [9:0] add_ln74_2_fu_1214_p2;
reg   [9:0] add_ln74_2_reg_2004;
wire   [0:0] icmp_ln887_fu_1169_p2;
wire   [5:0] sub_ln215_1_fu_1245_p2;
reg   [5:0] sub_ln215_1_reg_2009;
wire   [1:0] kc_V_fu_1257_p2;
reg   [1:0] kc_V_reg_2017;
wire    ap_CS_fsm_state13;
wire   [0:0] icmp_ln887_3_fu_1251_p2;
wire   [4:0] sum_V_fu_1349_p2;
wire    ap_CS_fsm_state14;
wire   [3:0] bank_V_2_fu_1361_p2;
reg   [3:0] bank_V_2_reg_2040;
wire    ap_CS_fsm_state15;
wire   [0:0] tmp_10_fu_1376_p3;
reg   [0:0] tmp_10_reg_2045;
wire   [0:0] icmp_ln155_fu_1355_p2;
wire   [63:0] zext_ln544_5_fu_1384_p1;
reg   [63:0] zext_ln544_5_reg_2049;
wire   [8:0] add_ln180_10_fu_1417_p2;
reg   [8:0] add_ln180_10_reg_2059;
reg   [7:0] word_buffer_m_V_addr_7_reg_2064;
reg   [7:0] word_buffer_m_V_addr_8_reg_2069;
wire   [9:0] sub_ln180_1_fu_1451_p2;
reg   [9:0] sub_ln180_1_reg_2074;
reg   [8:0] line_buffer_m_V_addr_5_reg_2080;
reg   [8:0] line_buffer_m_V_addr_8_reg_2085;
wire   [9:0] add_ln180_12_fu_1473_p2;
reg   [9:0] add_ln180_12_reg_2090;
reg   [8:0] line_buffer_m_V_addr_9_reg_2095;
reg   [8:0] line_buffer_m_V_addr_10_reg_2100;
wire   [8:0] add_ln180_15_fu_1520_p2;
reg   [8:0] add_ln180_15_reg_2105;
reg   [7:0] word_buffer_m_V_addr_3_reg_2110;
reg   [7:0] word_buffer_m_V_addr_4_reg_2115;
wire   [8:0] add_ln171_1_fu_1581_p2;
reg   [8:0] add_ln171_1_reg_2120;
reg   [7:0] old_word_buffer_m_V_6_reg_2125;
reg   [7:0] old_word_buffer_m_V_7_reg_2130;
wire    ap_CS_fsm_state16;
wire   [0:0] icmp_ln161_fu_1603_p2;
wire   [3:0] cc_V_6_fu_1637_p2;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state19;
wire   [0:0] icmp_ln169_fu_1689_p2;
wire   [2:0] lb_addr_3_gep_fu_426_p3;
wire   [2:0] rb_addr_3_gep_fu_434_p3;
wire   [3:0] cc_V_4_fu_1731_p2;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire   [0:0] icmp_ln179_fu_1737_p2;
wire   [9:0] add_ln180_20_fu_1761_p2;
reg   [9:0] add_ln180_20_reg_2189;
wire   [3:0] cc_V_7_fu_1766_p2;
reg   [3:0] cc_V_7_reg_2194;
wire   [2:0] lb_addr_4_gep_fu_458_p3;
wire   [2:0] rb_addr_4_gep_fu_466_p3;
reg   [3:0] p_095_0_reg_483;
wire    ap_CS_fsm_state9;
reg   [3:0] p_0249_0_reg_494;
reg   [3:0] p_027_0_reg_506;
reg   [1:0] storemerge_reg_518;
reg   [3:0] p_087_0_i_reg_528;
reg   [3:0] p_084_0_i_reg_539;
reg   [4:0] sum_0_reg_551;
reg   [1:0] p_097_0_i_i_reg_564;
reg   [4:0] sum_1_reg_575;
reg   [1:0] p_087_0_i_i_reg_587;
reg   [3:0] p_0198_0_reg_598;
wire    ap_CS_fsm_state23;
reg   [3:0] p_0324_0_reg_609;
wire   [1:0] select_ln174_fu_1680_p3;
reg   [1:0] ap_phi_mux_storemerge1_phi_fu_624_p4;
wire    ap_CS_fsm_state18;
wire   [1:0] select_ln166_fu_1652_p3;
reg   [3:0] p_0284_0_reg_631;
reg   [3:0] p_0501_0_reg_643;
wire    ap_CS_fsm_state22;
wire   [63:0] zext_ln180_8_fu_824_p1;
wire   [63:0] zext_ln180_9_fu_835_p1;
wire   [63:0] zext_ln138_2_fu_871_p1;
wire   [63:0] zext_ln141_fu_882_p1;
wire   [63:0] zext_ln180_12_fu_933_p1;
wire   [63:0] zext_ln133_fu_944_p1;
wire   [63:0] zext_ln138_5_fu_964_p1;
wire   [63:0] zext_ln180_17_fu_978_p1;
wire   [63:0] zext_ln180_15_fu_1039_p1;
wire   [63:0] zext_ln180_16_fu_1053_p1;
wire   [63:0] zext_ln180_fu_1164_p1;
wire   [63:0] zext_ln74_4_fu_1282_p1;
wire   [63:0] zext_ln215_8_fu_1306_p1;
wire   [63:0] zext_ln180_20_fu_1423_p1;
wire   [63:0] zext_ln185_fu_1434_p1;
wire   [63:0] zext_ln180_21_fu_1457_p1;
wire   [63:0] zext_ln180_22_fu_1468_p1;
wire   [63:0] zext_ln180_23_fu_1479_p1;
wire   [63:0] zext_ln180_24_fu_1490_p1;
wire   [63:0] zext_ln180_26_fu_1526_p1;
wire   [63:0] zext_ln166_fu_1537_p1;
wire   [63:0] zext_ln171_fu_1587_p1;
wire   [63:0] zext_ln174_fu_1598_p1;
wire   [63:0] zext_ln180_30_fu_1618_p1;
wire   [63:0] zext_ln180_31_fu_1632_p1;
wire   [63:0] zext_ln171_3_fu_1704_p1;
wire   [63:0] zext_ln180_27_fu_1718_p1;
wire   [63:0] zext_ln180_34_fu_1756_p1;
wire   [63:0] zext_ln180_35_fu_1772_p1;
wire   [1:0] select_ln879_fu_983_p3;
wire   [1:0] select_ln140_fu_1002_p3;
wire   [1:0] select_ln132_fu_1064_p3;
wire   [1:0] select_ln165_fu_1643_p3;
wire   [1:0] select_ln173_fu_1666_p3;
wire   [1:0] select_ln879_2_fu_1723_p3;
wire   [1:0] select_ln184_fu_1776_p3;
wire   [1:0] select_ln185_fu_1785_p3;
wire   [4:0] tmp_fu_658_p3;
wire   [3:0] tmp_4_fu_674_p3;
wire   [4:0] zext_ln215_5_fu_682_p1;
wire   [4:0] zext_ln138_fu_654_p1;
wire   [4:0] sub_ln215_fu_686_p2;
wire   [3:0] zext_ln117_fu_696_p1;
wire   [3:0] add_ln117_fu_700_p2;
wire  signed [4:0] sext_ln117_fu_706_p1;
wire   [7:0] zext_ln879_fu_722_p1;
wire   [4:0] slices_per_line_V_fu_710_p2;
wire  signed [3:0] xor_ln68_fu_752_p2;
wire  signed [5:0] sext_ln68_fu_758_p1;
wire   [5:0] s_idx_V_fu_762_p2;
wire   [5:0] zext_ln180_6_fu_779_p1;
wire   [5:0] add_ln180_fu_783_p2;
wire   [4:0] trunc_ln180_fu_788_p1;
wire   [6:0] tmp_6_fu_800_p3;
wire   [9:0] p_shl2_cast_fu_792_p3;
wire   [9:0] zext_ln180_7_fu_808_p1;
wire   [9:0] sub_ln180_fu_812_p2;
wire   [9:0] add_ln180_3_fu_829_p2;
wire   [5:0] add_ln138_fu_840_p2;
wire   [6:0] tmp_8_fu_853_p3;
wire   [8:0] p_shl6_cast_fu_845_p3;
wire   [8:0] zext_ln138_1_fu_861_p1;
wire   [8:0] add_ln141_fu_876_p2;
wire   [3:0] add_ln1353_fu_887_p2;
wire   [3:0] ret_V_fu_892_p2;
wire   [5:0] zext_ln180_10_fu_898_p1;
wire   [5:0] add_ln180_4_fu_902_p2;
wire   [6:0] tmp_7_fu_915_p3;
wire   [8:0] p_shl4_cast_fu_907_p3;
wire   [8:0] zext_ln180_11_fu_923_p1;
wire   [8:0] add_ln133_fu_938_p2;
wire   [8:0] zext_ln138_4_fu_955_p1;
wire   [8:0] add_ln138_2_fu_959_p2;
wire   [9:0] zext_ln138_3_fu_969_p1;
wire   [9:0] add_ln180_8_fu_973_p2;
wire   [0:0] or_ln140_fu_997_p2;
wire   [0:0] or_ln141_fu_1011_p2;
wire   [8:0] zext_ln180_14_fu_1030_p1;
wire   [8:0] add_ln180_6_fu_1034_p2;
wire   [9:0] zext_ln180_13_fu_1044_p1;
wire   [9:0] add_ln180_7_fu_1048_p2;
wire   [2:0] trunc_ln1352_fu_1093_p1;
wire   [5:0] zext_ln74_fu_1105_p1;
wire   [5:0] add_ln74_fu_1109_p2;
wire   [7:0] tmp_9_fu_1118_p3;
wire   [63:0] zext_ln74_2_fu_1126_p1;
wire   [63:0] zext_ln74_1_fu_1114_p1;
wire   [5:0] zext_ln215_fu_1148_p1;
wire   [5:0] ret_V_8_fu_1152_p2;
wire   [7:0] tmp_s_fu_1157_p3;
wire   [63:0] zext_ln544_6_fu_1181_p1;
wire   [63:0] add_ln74_1_fu_1185_p2;
wire   [6:0] trunc_ln74_fu_1190_p1;
wire   [8:0] trunc_ln74_1_fu_1202_p1;
wire   [9:0] p_shl10_cast_fu_1194_p3;
wire   [9:0] p_shl11_cast_fu_1206_p3;
wire   [2:0] zext_ln1354_fu_1220_p1;
wire   [2:0] ret_V_12_fu_1224_p2;
wire  signed [5:0] sext_ln215_1_fu_1230_p1;
wire   [5:0] add_ln215_fu_1234_p2;
wire   [5:0] shl_ln215_fu_1239_p2;
wire   [3:0] zext_ln215_1_fu_1263_p1;
wire   [3:0] ret_V_10_fu_1267_p2;
wire   [9:0] zext_ln74_3_fu_1273_p1;
wire   [9:0] add_ln74_3_fu_1277_p2;
wire   [2:0] zext_ln215_2_fu_1287_p1;
wire   [2:0] ret_V_11_fu_1291_p2;
wire  signed [5:0] sext_ln215_2_fu_1297_p1;
wire   [5:0] add_ln215_1_fu_1301_p2;
wire   [0:0] trunc_ln74_2_fu_1311_p1;
wire   [0:0] ret_V_14_fu_1315_p2;
wire   [0:0] tmp_14_fu_1321_p3;
wire   [0:0] xor_ln841_fu_1329_p2;
reg   [1:0] p_Result_s_fu_1335_p4;
wire  signed [4:0] sext_ln700_fu_1345_p1;
wire   [5:0] lhs_V_fu_1367_p1;
wire   [5:0] ret_V_15_fu_1371_p2;
wire   [5:0] add_ln180_9_fu_1388_p2;
wire   [6:0] tmp_11_fu_1401_p3;
wire   [8:0] zext_ln180_18_fu_1409_p1;
wire   [8:0] p_shl_cast_fu_1393_p3;
wire   [8:0] add_ln185_fu_1428_p2;
wire   [4:0] trunc_ln180_1_fu_1439_p1;
wire   [9:0] p_shl12_cast_fu_1443_p3;
wire   [9:0] zext_ln180_19_fu_1413_p1;
wire   [9:0] add_ln180_11_fu_1462_p2;
wire   [9:0] add_ln180_13_fu_1484_p2;
wire   [5:0] add_ln180_14_fu_1495_p2;
wire   [6:0] tmp_13_fu_1508_p3;
wire   [8:0] p_shl14_cast_fu_1500_p3;
wire   [8:0] zext_ln180_25_fu_1516_p1;
wire   [8:0] add_ln166_fu_1531_p2;
wire   [5:0] ret_V_9_fu_1542_p2;
wire  signed [6:0] sext_ln171_fu_1548_p1;
wire   [6:0] add_ln171_fu_1552_p2;
wire   [5:0] trunc_ln171_fu_1557_p1;
wire   [7:0] tmp_12_fu_1569_p3;
wire  signed [8:0] sext_ln171_1_fu_1577_p1;
wire   [8:0] p_shl16_cast_fu_1561_p3;
wire   [8:0] add_ln174_fu_1592_p2;
wire   [8:0] zext_ln180_29_fu_1609_p1;
wire   [8:0] add_ln180_16_fu_1613_p2;
wire   [9:0] zext_ln180_28_fu_1623_p1;
wire   [9:0] add_ln180_17_fu_1627_p2;
wire   [0:0] or_ln173_fu_1661_p2;
wire   [0:0] or_ln174_fu_1675_p2;
wire   [8:0] zext_ln171_2_fu_1695_p1;
wire   [8:0] add_ln171_2_fu_1699_p2;
wire   [9:0] zext_ln171_1_fu_1709_p1;
wire   [9:0] add_ln180_18_fu_1713_p2;
wire   [8:0] zext_ln180_33_fu_1747_p1;
wire   [8:0] add_ln180_19_fu_1751_p2;
wire   [9:0] zext_ln180_32_fu_1743_p1;
reg   [22:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 23'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln92_fu_1081_p2 == 1'd1))) begin
        p_0198_0_reg_598 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        p_0198_0_reg_598 <= bank_V_2_reg_2040;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_5_fu_767_p3 == 1'd0) & (icmp_ln124_fu_740_p2 == 1'd0))) begin
        p_0249_0_reg_494 <= 4'd1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_0249_0_reg_494 <= cc_V_1_fu_991_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_5_fu_767_p3 == 1'd1) & (icmp_ln124_fu_740_p2 == 1'd0))) begin
        p_027_0_reg_506 <= 4'd1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        p_027_0_reg_506 <= cc_V_fu_1058_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (tmp_10_fu_1376_p3 == 1'd1) & (icmp_ln155_fu_1355_p2 == 1'd0))) begin
        p_0284_0_reg_631 <= 4'd1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        p_0284_0_reg_631 <= cc_V_4_fu_1731_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln155_fu_1355_p2 == 1'd0) & (tmp_10_fu_1376_p3 == 1'd0))) begin
        p_0324_0_reg_609 <= 4'd1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        p_0324_0_reg_609 <= cc_V_6_fu_1637_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        p_0501_0_reg_643 <= cc_V_7_reg_2194;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        p_0501_0_reg_643 <= 4'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln92_fu_1081_p2 == 1'd0))) begin
        p_084_0_i_reg_539 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln887_fu_1169_p2 == 1'd1))) begin
        p_084_0_i_reg_539 <= cc_V_2_reg_1986;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        p_087_0_i_i_reg_587 <= kc_V_reg_2017;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln887_fu_1169_p2 == 1'd0))) begin
        p_087_0_i_i_reg_587 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln124_fu_740_p2 == 1'd1))) begin
        p_087_0_i_reg_528 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln93_fu_1136_p2 == 1'd1))) begin
        p_087_0_i_reg_528 <= bank_V_reg_1968;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        p_095_0_reg_483 <= bank_V_1_reg_1847;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_095_0_reg_483 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln887_3_fu_1251_p2 == 1'd1))) begin
        p_097_0_i_i_reg_564 <= kr_V_reg_1999;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln93_fu_1136_p2 == 1'd0))) begin
        p_097_0_i_i_reg_564 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        storemerge_reg_518 <= select_ln133_fu_1073_p3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        storemerge_reg_518 <= select_ln141_fu_1016_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln887_3_fu_1251_p2 == 1'd1))) begin
        sum_0_reg_551 <= sum_1_reg_575;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln93_fu_1136_p2 == 1'd0))) begin
        sum_0_reg_551 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        sum_1_reg_575 <= sum_V_fu_1349_p2;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln887_fu_1169_p2 == 1'd0))) begin
        sum_1_reg_575 <= sum_0_reg_551;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_5_fu_767_p3 == 1'd0) & (icmp_ln124_fu_740_p2 == 1'd0))) begin
        add_ln138_1_reg_1879[8 : 1] <= add_ln138_1_fu_865_p2[8 : 1];
        word_buffer_m_V_addr_2_reg_1884[7 : 1] <= zext_ln138_2_fu_871_p1[7 : 1];
        word_buffer_m_V_addr_5_reg_1889[7 : 1] <= zext_ln141_fu_882_p1[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (tmp_10_fu_1376_p3 == 1'd1) & (icmp_ln155_fu_1355_p2 == 1'd0))) begin
        add_ln171_1_reg_2120[8 : 1] <= add_ln171_1_fu_1581_p2[8 : 1];
        old_word_buffer_m_V_6_reg_2125[7 : 1] <= zext_ln171_fu_1587_p1[7 : 1];
        old_word_buffer_m_V_7_reg_2130[7 : 1] <= zext_ln174_fu_1598_p1[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln155_fu_1355_p2 == 1'd0))) begin
        add_ln180_10_reg_2059[8 : 1] <= add_ln180_10_fu_1417_p2[8 : 1];
        add_ln180_12_reg_2090[9 : 1] <= add_ln180_12_fu_1473_p2[9 : 1];
        line_buffer_m_V_addr_10_reg_2100[8 : 1] <= zext_ln180_24_fu_1490_p1[8 : 1];
        line_buffer_m_V_addr_5_reg_2080[8 : 1] <= zext_ln180_21_fu_1457_p1[8 : 1];
        line_buffer_m_V_addr_8_reg_2085[8 : 1] <= zext_ln180_22_fu_1468_p1[8 : 1];
        line_buffer_m_V_addr_9_reg_2095[8 : 1] <= zext_ln180_23_fu_1479_p1[8 : 1];
        sub_ln180_1_reg_2074[9 : 1] <= sub_ln180_1_fu_1451_p2[9 : 1];
        tmp_10_reg_2045 <= ret_V_15_fu_1371_p2[32'd5];
        word_buffer_m_V_addr_7_reg_2064[7 : 1] <= zext_ln180_20_fu_1423_p1[7 : 1];
        word_buffer_m_V_addr_8_reg_2069[7 : 1] <= zext_ln185_fu_1434_p1[7 : 1];
        zext_ln544_5_reg_2049[3 : 0] <= zext_ln544_5_fu_1384_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln155_fu_1355_p2 == 1'd0) & (tmp_10_fu_1376_p3 == 1'd0))) begin
        add_ln180_15_reg_2105[8 : 1] <= add_ln180_15_fu_1520_p2[8 : 1];
        word_buffer_m_V_addr_3_reg_2110[7 : 1] <= zext_ln180_26_fu_1526_p1[7 : 1];
        word_buffer_m_V_addr_4_reg_2115[7 : 1] <= zext_ln166_fu_1537_p1[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln179_fu_1737_p2 == 1'd0))) begin
        add_ln180_20_reg_2189 <= add_ln180_20_fu_1761_p2;
        cc_V_7_reg_2194 <= cc_V_7_fu_1766_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln124_fu_740_p2 == 1'd0))) begin
        add_ln180_2_reg_1863[9 : 1] <= add_ln180_2_fu_818_p2[9 : 1];
        line_buffer_m_V_addr_2_reg_1869[8 : 1] <= zext_ln180_8_fu_824_p1[8 : 1];
        line_buffer_m_V_addr_4_reg_1874[8 : 1] <= zext_ln180_9_fu_835_p1[8 : 1];
        zext_ln544_reg_1855[3 : 0] <= zext_ln544_fu_775_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_5_fu_767_p3 == 1'd1) & (icmp_ln124_fu_740_p2 == 1'd0))) begin
        add_ln180_5_reg_1894[8 : 1] <= add_ln180_5_fu_927_p2[8 : 1];
        old_word_buffer_m_V_1_reg_1904[7 : 1] <= zext_ln133_fu_944_p1[7 : 1];
        old_word_buffer_m_V_s_reg_1899[7 : 1] <= zext_ln180_12_fu_933_p1[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln887_fu_1169_p2 == 1'd0))) begin
        add_ln74_2_reg_2004[9 : 1] <= add_ln74_2_fu_1214_p2[9 : 1];
        sub_ln215_1_reg_2009 <= sub_ln215_1_fu_1245_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        bank_V_1_reg_1847 <= bank_V_1_fu_746_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        bank_V_2_reg_2040 <= bank_V_2_fu_1361_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        bank_V_reg_1968 <= bank_V_fu_1087_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        cc_V_2_reg_1986 <= cc_V_2_fu_1142_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln93_fu_1136_p2 == 1'd0))) begin
        conv_out_buffer_m_V_s_reg_1991 <= zext_ln180_fu_1164_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        first_wrd_reg_1819 <= first_wrd_fu_716_p2;
        last_wrd_reg_1826 <= last_wrd_fu_726_p2;
        rhs_V_reg_1833[4 : 0] <= rhs_V_fu_732_p1[4 : 0];
        sext_ln215_reg_1814 <= sext_ln215_fu_692_p1;
        trunc_ln68_reg_1839 <= trunc_ln68_fu_736_p1;
        zext_ln215_3_reg_1799[4 : 3] <= zext_ln215_3_fu_666_p1[4 : 3];
        zext_ln215_4_reg_1804[4 : 3] <= zext_ln215_4_fu_670_p1[4 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        kc_V_reg_2017 <= kc_V_fu_1257_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        kr_V_reg_1999 <= kr_V_fu_1175_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln92_fu_1081_p2 == 1'd0))) begin
        ret_V_7_reg_1973[5 : 3] <= ret_V_7_fu_1097_p3[5 : 3];
        sub_ln74_reg_1978 <= sub_ln74_fu_1130_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state15) & (icmp_ln155_fu_1355_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        if ((tmp_10_reg_2045 == 1'd0)) begin
            ap_phi_mux_storemerge1_phi_fu_624_p4 = select_ln166_fu_1652_p3;
        end else if ((tmp_10_reg_2045 == 1'd1)) begin
            ap_phi_mux_storemerge1_phi_fu_624_p4 = select_ln174_fu_1680_p3;
        end else begin
            ap_phi_mux_storemerge1_phi_fu_624_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_storemerge1_phi_fu_624_p4 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln155_fu_1355_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        conv_out_buffer_m_V_ce0 = 1'b1;
    end else begin
        conv_out_buffer_m_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln887_fu_1169_p2 == 1'd1))) begin
        conv_out_buffer_m_V_we0 = 1'b1;
    end else begin
        conv_out_buffer_m_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        conv_params_m_V_ce0 = 1'b1;
    end else begin
        conv_params_m_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        lb_address0 = lb_addr_4_gep_fu_458_p3;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        lb_address0 = lb_addr_3_gep_fu_426_p3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        lb_address0 = zext_ln544_5_reg_2049;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        lb_address0 = lb_addr_gep_fu_249_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        lb_address0 = zext_ln544_reg_1855;
    end else begin
        lb_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3))) begin
        lb_ce0 = 1'b1;
    end else begin
        lb_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        line_buffer_m_V_address0 = line_buffer_m_V_addr_10_reg_2100;
    end else if ((((1'b1 == ap_CS_fsm_state18) & (tmp_10_reg_2045 == 1'd0)) | ((1'b1 == ap_CS_fsm_state18) & (tmp_10_reg_2045 == 1'd1)))) begin
        line_buffer_m_V_address0 = line_buffer_m_V_addr_5_reg_2080;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        line_buffer_m_V_address0 = zext_ln180_31_fu_1632_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        line_buffer_m_V_address0 = zext_ln74_4_fu_1282_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        line_buffer_m_V_address0 = line_buffer_m_V_addr_4_reg_1874;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        line_buffer_m_V_address0 = zext_ln180_16_fu_1053_p1;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5))) begin
        line_buffer_m_V_address0 = line_buffer_m_V_addr_2_reg_1869;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        line_buffer_m_V_address0 = zext_ln180_17_fu_978_p1;
    end else begin
        line_buffer_m_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        line_buffer_m_V_address1 = line_buffer_m_V_addr_9_reg_2095;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        line_buffer_m_V_address1 = zext_ln180_35_fu_1772_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        line_buffer_m_V_address1 = zext_ln180_27_fu_1718_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        line_buffer_m_V_address1 = line_buffer_m_V_addr_8_reg_2085;
    end else begin
        line_buffer_m_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state18) & (tmp_10_reg_2045 == 1'd0)) | ((1'b1 == ap_CS_fsm_state18) & (tmp_10_reg_2045 == 1'd1)))) begin
        line_buffer_m_V_ce0 = 1'b1;
    end else begin
        line_buffer_m_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state20))) begin
        line_buffer_m_V_ce1 = 1'b1;
    end else begin
        line_buffer_m_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        line_buffer_m_V_d0 = select_ln185_fu_1785_p3;
    end else if (((1'b1 == ap_CS_fsm_state18) & (tmp_10_reg_2045 == 1'd1))) begin
        line_buffer_m_V_d0 = select_ln173_fu_1666_p3;
    end else if (((1'b1 == ap_CS_fsm_state18) & (tmp_10_reg_2045 == 1'd0))) begin
        line_buffer_m_V_d0 = select_ln165_fu_1643_p3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        line_buffer_m_V_d0 = word_buffer_m_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        line_buffer_m_V_d0 = storemerge_reg_518;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        line_buffer_m_V_d0 = select_ln132_fu_1064_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        line_buffer_m_V_d0 = old_word_buffer_m_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        line_buffer_m_V_d0 = select_ln140_fu_1002_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        line_buffer_m_V_d0 = select_ln879_fu_983_p3;
    end else begin
        line_buffer_m_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        line_buffer_m_V_d1 = select_ln184_fu_1776_p3;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        line_buffer_m_V_d1 = word_buffer_m_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        line_buffer_m_V_d1 = select_ln879_2_fu_1723_p3;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        line_buffer_m_V_d1 = ap_phi_mux_storemerge1_phi_fu_624_p4;
    end else begin
        line_buffer_m_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state18) & (tmp_10_reg_2045 == 1'd0)) | ((1'b1 == ap_CS_fsm_state18) & (tmp_10_reg_2045 == 1'd1)))) begin
        line_buffer_m_V_we0 = 1'b1;
    end else begin
        line_buffer_m_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state20))) begin
        line_buffer_m_V_we1 = 1'b1;
    end else begin
        line_buffer_m_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        old_word_buffer_m_V_address0 = old_word_buffer_m_V_7_reg_2130;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln128_fu_1024_p2 == 1'd1))) begin
        old_word_buffer_m_V_address0 = old_word_buffer_m_V_s_reg_1899;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln128_fu_1024_p2 == 1'd0))) begin
        old_word_buffer_m_V_address0 = zext_ln180_15_fu_1039_p1;
    end else begin
        old_word_buffer_m_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln169_fu_1689_p2 == 1'd1))) begin
        old_word_buffer_m_V_address1 = old_word_buffer_m_V_6_reg_2125;
    end else if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln169_fu_1689_p2 == 1'd0) & (first_wrd_reg_1819 == 1'd0))) begin
        old_word_buffer_m_V_address1 = zext_ln171_3_fu_1704_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        old_word_buffer_m_V_address1 = old_word_buffer_m_V_1_reg_1904;
    end else begin
        old_word_buffer_m_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln128_fu_1024_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln128_fu_1024_p2 == 1'd0)))) begin
        old_word_buffer_m_V_ce0 = 1'b1;
    end else begin
        old_word_buffer_m_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln169_fu_1689_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state19) & (icmp_ln169_fu_1689_p2 == 1'd0) & (first_wrd_reg_1819 == 1'd0)))) begin
        old_word_buffer_m_V_ce1 = 1'b1;
    end else begin
        old_word_buffer_m_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        rb_address0 = rb_addr_4_gep_fu_466_p3;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        rb_address0 = rb_addr_3_gep_fu_434_p3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        rb_address0 = zext_ln544_5_reg_2049;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        rb_address0 = rb_addr_gep_fu_257_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        rb_address0 = zext_ln544_reg_1855;
    end else begin
        rb_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3))) begin
        rb_ce0 = 1'b1;
    end else begin
        rb_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln179_fu_1737_p2 == 1'd1))) begin
        word_buffer_m_V_address0 = word_buffer_m_V_addr_7_reg_2064;
    end else if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln179_fu_1737_p2 == 1'd0))) begin
        word_buffer_m_V_address0 = zext_ln180_34_fu_1756_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        word_buffer_m_V_address0 = word_buffer_m_V_addr_4_reg_2115;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln136_fu_949_p2 == 1'd1))) begin
        word_buffer_m_V_address0 = word_buffer_m_V_addr_2_reg_1884;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln136_fu_949_p2 == 1'd0) & (last_wrd_reg_1826 == 1'd0))) begin
        word_buffer_m_V_address0 = zext_ln138_5_fu_964_p1;
    end else begin
        word_buffer_m_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        word_buffer_m_V_address1 = word_buffer_m_V_addr_8_reg_2069;
    end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln161_fu_1603_p2 == 1'd1))) begin
        word_buffer_m_V_address1 = word_buffer_m_V_addr_3_reg_2110;
    end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln161_fu_1603_p2 == 1'd0))) begin
        word_buffer_m_V_address1 = zext_ln180_30_fu_1618_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        word_buffer_m_V_address1 = word_buffer_m_V_addr_5_reg_1889;
    end else begin
        word_buffer_m_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state21) & (icmp_ln179_fu_1737_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state21) & (icmp_ln179_fu_1737_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state3) & (icmp_ln136_fu_949_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state3) & (icmp_ln136_fu_949_p2 == 1'd0) & (last_wrd_reg_1826 == 1'd0)))) begin
        word_buffer_m_V_ce0 = 1'b1;
    end else begin
        word_buffer_m_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln161_fu_1603_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln161_fu_1603_p2 == 1'd0)))) begin
        word_buffer_m_V_ce1 = 1'b1;
    end else begin
        word_buffer_m_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln124_fu_740_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_5_fu_767_p3 == 1'd1) & (icmp_ln124_fu_740_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln136_fu_949_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln128_fu_1024_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln92_fu_1081_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln93_fu_1136_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln887_fu_1169_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln887_3_fu_1251_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln155_fu_1355_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b1 == ap_CS_fsm_state15) & (tmp_10_fu_1376_p3 == 1'd1) & (icmp_ln155_fu_1355_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln161_fu_1603_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln169_fu_1689_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln179_fu_1737_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln117_fu_700_p2 = ($signed(4'd13) + $signed(zext_ln117_fu_696_p1));

assign add_ln133_fu_938_p2 = (add_ln180_5_fu_927_p2 + 9'd9);

assign add_ln1353_fu_887_p2 = ($signed(trunc_ln68_reg_1839) + $signed(xor_ln68_fu_752_p2));

assign add_ln138_1_fu_865_p2 = (p_shl6_cast_fu_845_p3 + zext_ln138_1_fu_861_p1);

assign add_ln138_2_fu_959_p2 = (add_ln138_1_reg_1879 + zext_ln138_4_fu_955_p1);

assign add_ln138_fu_840_p2 = (s_idx_V_fu_762_p2 + zext_ln215_4_reg_1804);

assign add_ln141_fu_876_p2 = (add_ln138_1_fu_865_p2 + 9'd9);

assign add_ln166_fu_1531_p2 = (add_ln180_15_fu_1520_p2 + 9'd9);

assign add_ln171_1_fu_1581_p2 = ($signed(sext_ln171_1_fu_1577_p1) + $signed(p_shl16_cast_fu_1561_p3));

assign add_ln171_2_fu_1699_p2 = (add_ln171_1_reg_2120 + zext_ln171_2_fu_1695_p1);

assign add_ln171_fu_1552_p2 = ($signed(zext_ln215_3_reg_1799) + $signed(sext_ln171_fu_1548_p1));

assign add_ln174_fu_1592_p2 = (9'd9 + add_ln171_1_fu_1581_p2);

assign add_ln180_10_fu_1417_p2 = (zext_ln180_18_fu_1409_p1 + p_shl_cast_fu_1393_p3);

assign add_ln180_11_fu_1462_p2 = (10'd9 + sub_ln180_1_fu_1451_p2);

assign add_ln180_12_fu_1473_p2 = (10'd10 + sub_ln180_1_fu_1451_p2);

assign add_ln180_13_fu_1484_p2 = (10'd19 + sub_ln180_1_fu_1451_p2);

assign add_ln180_14_fu_1495_p2 = (ret_V_15_fu_1371_p2 + zext_ln215_4_reg_1804);

assign add_ln180_15_fu_1520_p2 = (p_shl14_cast_fu_1500_p3 + zext_ln180_25_fu_1516_p1);

assign add_ln180_16_fu_1613_p2 = (add_ln180_15_reg_2105 + zext_ln180_29_fu_1609_p1);

assign add_ln180_17_fu_1627_p2 = (sub_ln180_1_reg_2074 + zext_ln180_28_fu_1623_p1);

assign add_ln180_18_fu_1713_p2 = (sub_ln180_1_reg_2074 + zext_ln171_1_fu_1709_p1);

assign add_ln180_19_fu_1751_p2 = (add_ln180_10_reg_2059 + zext_ln180_33_fu_1747_p1);

assign add_ln180_20_fu_1761_p2 = (add_ln180_12_reg_2090 + zext_ln180_32_fu_1743_p1);

assign add_ln180_2_fu_818_p2 = (10'd20 + sub_ln180_fu_812_p2);

assign add_ln180_3_fu_829_p2 = (10'd29 + sub_ln180_fu_812_p2);

assign add_ln180_4_fu_902_p2 = (zext_ln180_10_fu_898_p1 + zext_ln215_4_reg_1804);

assign add_ln180_5_fu_927_p2 = (p_shl4_cast_fu_907_p3 + zext_ln180_11_fu_923_p1);

assign add_ln180_6_fu_1034_p2 = (add_ln180_5_reg_1894 + zext_ln180_14_fu_1030_p1);

assign add_ln180_7_fu_1048_p2 = (add_ln180_2_reg_1863 + zext_ln180_13_fu_1044_p1);

assign add_ln180_8_fu_973_p2 = (add_ln180_2_reg_1863 + zext_ln138_3_fu_969_p1);

assign add_ln180_9_fu_1388_p2 = (zext_ln215_4_reg_1804 + lhs_V_fu_1367_p1);

assign add_ln180_fu_783_p2 = (zext_ln215_4_reg_1804 + zext_ln180_6_fu_779_p1);

assign add_ln185_fu_1428_p2 = (9'd9 + add_ln180_10_fu_1417_p2);

assign add_ln215_1_fu_1301_p2 = ($signed(sext_ln215_2_fu_1297_p1) + $signed(sub_ln215_1_reg_2009));

assign add_ln215_fu_1234_p2 = ($signed(sext_ln215_1_fu_1230_p1) + $signed(sext_ln215_reg_1814));

assign add_ln74_1_fu_1185_p2 = (zext_ln544_6_fu_1181_p1 + sub_ln74_reg_1978);

assign add_ln74_2_fu_1214_p2 = (p_shl10_cast_fu_1194_p3 + p_shl11_cast_fu_1206_p3);

assign add_ln74_3_fu_1277_p2 = (zext_ln74_3_fu_1273_p1 + add_ln74_2_reg_2004);

assign add_ln74_fu_1109_p2 = (zext_ln74_fu_1105_p1 + zext_ln215_4_reg_1804);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign bank_V_1_fu_746_p2 = (p_095_0_reg_483 + 4'd1);

assign bank_V_2_fu_1361_p2 = (p_0198_0_reg_598 + 4'd1);

assign bank_V_fu_1087_p2 = (p_087_0_i_reg_528 + 4'd1);

assign cc_V_1_fu_991_p2 = (p_0249_0_reg_494 + 4'd1);

assign cc_V_2_fu_1142_p2 = (p_084_0_i_reg_539 + 4'd1);

assign cc_V_4_fu_1731_p2 = (p_0284_0_reg_631 + 4'd1);

assign cc_V_6_fu_1637_p2 = (p_0324_0_reg_609 + 4'd1);

assign cc_V_7_fu_1766_p2 = (p_0501_0_reg_643 + 4'd1);

assign cc_V_fu_1058_p2 = (p_027_0_reg_506 + 4'd1);

assign conv_out_buffer_m_V_address0 = conv_out_buffer_m_V_s_reg_1991;

assign conv_out_buffer_m_V_d0 = sum_0_reg_551;

assign conv_params_m_V_address0 = zext_ln215_8_fu_1306_p1;

assign first_wrd_fu_716_p2 = ((wrd_V == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln124_fu_740_p2 = ((p_095_0_reg_483 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln128_fu_1024_p2 = ((p_027_0_reg_506 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln136_fu_949_p2 = ((p_0249_0_reg_494 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln155_fu_1355_p2 = ((p_0198_0_reg_598 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln161_fu_1603_p2 = ((p_0324_0_reg_609 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln169_fu_1689_p2 = ((p_0284_0_reg_631 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln179_fu_1737_p2 = ((p_0501_0_reg_643 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln887_3_fu_1251_p2 = ((p_087_0_i_i_reg_587 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_1169_p2 = ((p_097_0_i_i_reg_564 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln92_fu_1081_p2 = ((p_087_0_i_reg_528 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln93_fu_1136_p2 = ((p_084_0_i_reg_539 == 4'd8) ? 1'b1 : 1'b0);

assign kc_V_fu_1257_p2 = (p_087_0_i_i_reg_587 + 2'd1);

assign kr_V_fu_1175_p2 = (p_097_0_i_i_reg_564 + 2'd1);

assign last_wrd_fu_726_p2 = ((zext_ln879_fu_722_p1 == wrd_V) ? 1'b1 : 1'b0);

assign lb_addr_3_gep_fu_426_p3 = zext_ln544_5_reg_2049;

assign lb_addr_4_gep_fu_458_p3 = zext_ln544_5_reg_2049;

assign lb_addr_gep_fu_249_p3 = zext_ln544_reg_1855;

assign lhs_V_fu_1367_p1 = p_0198_0_reg_598;

assign or_ln140_fu_997_p2 = (lb_q0 | last_wrd_reg_1826);

assign or_ln141_fu_1011_p2 = (rb_q0 | last_wrd_reg_1826);

assign or_ln173_fu_1661_p2 = (lb_q0 | first_wrd_reg_1819);

assign or_ln174_fu_1675_p2 = (rb_q0 | first_wrd_reg_1819);

always @ (*) begin
    p_Result_s_fu_1335_p4 = line_buffer_m_V_q0;
    p_Result_s_fu_1335_p4[32'd1] = |(xor_ln841_fu_1329_p2);
end

assign p_shl10_cast_fu_1194_p3 = {{trunc_ln74_fu_1190_p1}, {3'd0}};

assign p_shl11_cast_fu_1206_p3 = {{trunc_ln74_1_fu_1202_p1}, {1'd0}};

assign p_shl12_cast_fu_1443_p3 = {{trunc_ln180_1_fu_1439_p1}, {5'd0}};

assign p_shl14_cast_fu_1500_p3 = {{add_ln180_14_fu_1495_p2}, {3'd0}};

assign p_shl16_cast_fu_1561_p3 = {{trunc_ln171_fu_1557_p1}, {3'd0}};

assign p_shl2_cast_fu_792_p3 = {{trunc_ln180_fu_788_p1}, {5'd0}};

assign p_shl4_cast_fu_907_p3 = {{add_ln180_4_fu_902_p2}, {3'd0}};

assign p_shl6_cast_fu_845_p3 = {{add_ln138_fu_840_p2}, {3'd0}};

assign p_shl_cast_fu_1393_p3 = {{add_ln180_9_fu_1388_p2}, {3'd0}};

assign rb_addr_3_gep_fu_434_p3 = zext_ln544_5_reg_2049;

assign rb_addr_4_gep_fu_466_p3 = zext_ln544_5_reg_2049;

assign rb_addr_gep_fu_257_p3 = zext_ln544_reg_1855;

assign ret_V_10_fu_1267_p2 = (p_084_0_i_reg_539 + zext_ln215_1_fu_1263_p1);

assign ret_V_11_fu_1291_p2 = (3'd2 - zext_ln215_2_fu_1287_p1);

assign ret_V_12_fu_1224_p2 = (3'd2 - zext_ln1354_fu_1220_p1);

assign ret_V_14_fu_1315_p2 = (trunc_ln74_2_fu_1311_p1 & conv_params_m_V_q0);

assign ret_V_15_fu_1371_p2 = (lhs_V_fu_1367_p1 - rhs_V_reg_1833);

assign ret_V_7_fu_1097_p3 = {{trunc_ln1352_fu_1093_p1}, {3'd0}};

assign ret_V_8_fu_1152_p2 = (ret_V_7_reg_1973 + zext_ln215_fu_1148_p1);

assign ret_V_9_fu_1542_p2 = (6'd8 + ret_V_15_fu_1371_p2);

assign ret_V_fu_892_p2 = (4'd8 ^ add_ln1353_fu_887_p2);

assign rhs_V_fu_732_p1 = slices_per_line_V_fu_710_p2;

assign s_idx_V_fu_762_p2 = ($signed(rhs_V_reg_1833) + $signed(sext_ln68_fu_758_p1));

assign select_ln132_fu_1064_p3 = ((lb_q0[0:0] === 1'b1) ? 2'd0 : old_word_buffer_m_V_q0);

assign select_ln133_fu_1073_p3 = ((rb_q0[0:0] === 1'b1) ? 2'd0 : old_word_buffer_m_V_q1);

assign select_ln140_fu_1002_p3 = ((or_ln140_fu_997_p2[0:0] === 1'b1) ? 2'd0 : word_buffer_m_V_q0);

assign select_ln141_fu_1016_p3 = ((or_ln141_fu_1011_p2[0:0] === 1'b1) ? 2'd0 : word_buffer_m_V_q1);

assign select_ln165_fu_1643_p3 = ((lb_q0[0:0] === 1'b1) ? 2'd0 : word_buffer_m_V_q1);

assign select_ln166_fu_1652_p3 = ((rb_q0[0:0] === 1'b1) ? 2'd0 : word_buffer_m_V_q0);

assign select_ln173_fu_1666_p3 = ((or_ln173_fu_1661_p2[0:0] === 1'b1) ? 2'd0 : old_word_buffer_m_V_q1);

assign select_ln174_fu_1680_p3 = ((or_ln174_fu_1675_p2[0:0] === 1'b1) ? 2'd0 : old_word_buffer_m_V_q0);

assign select_ln184_fu_1776_p3 = ((lb_q0[0:0] === 1'b1) ? 2'd0 : word_buffer_m_V_q0);

assign select_ln185_fu_1785_p3 = ((rb_q0[0:0] === 1'b1) ? 2'd0 : word_buffer_m_V_q1);

assign select_ln879_2_fu_1723_p3 = ((first_wrd_reg_1819[0:0] === 1'b1) ? 2'd0 : old_word_buffer_m_V_q1);

assign select_ln879_fu_983_p3 = ((last_wrd_reg_1826[0:0] === 1'b1) ? 2'd0 : word_buffer_m_V_q0);

assign sext_ln117_fu_706_p1 = $signed(add_ln117_fu_700_p2);

assign sext_ln171_1_fu_1577_p1 = $signed(tmp_12_fu_1569_p3);

assign sext_ln171_fu_1548_p1 = $signed(ret_V_9_fu_1542_p2);

assign sext_ln215_1_fu_1230_p1 = $signed(ret_V_12_fu_1224_p2);

assign sext_ln215_2_fu_1297_p1 = $signed(ret_V_11_fu_1291_p2);

assign sext_ln215_fu_692_p1 = $signed(sub_ln215_fu_686_p2);

assign sext_ln68_fu_758_p1 = xor_ln68_fu_752_p2;

assign sext_ln700_fu_1345_p1 = $signed(p_Result_s_fu_1335_p4);

assign shl_ln215_fu_1239_p2 = add_ln215_fu_1234_p2 << 6'd2;

assign slices_per_line_V_fu_710_p2 = 5'd1 << sext_ln117_fu_706_p1;

assign sub_ln180_1_fu_1451_p2 = (p_shl12_cast_fu_1443_p3 - zext_ln180_19_fu_1413_p1);

assign sub_ln180_fu_812_p2 = (p_shl2_cast_fu_792_p3 - zext_ln180_7_fu_808_p1);

assign sub_ln215_1_fu_1245_p2 = (shl_ln215_fu_1239_p2 - add_ln215_fu_1234_p2);

assign sub_ln215_fu_686_p2 = (zext_ln215_5_fu_682_p1 - zext_ln138_fu_654_p1);

assign sub_ln74_fu_1130_p2 = (zext_ln74_2_fu_1126_p1 - zext_ln74_1_fu_1114_p1);

assign sum_V_fu_1349_p2 = ($signed(sext_ln700_fu_1345_p1) + $signed(sum_1_reg_575));

assign tmp_10_fu_1376_p3 = ret_V_15_fu_1371_p2[32'd5];

assign tmp_11_fu_1401_p3 = {{add_ln180_9_fu_1388_p2}, {1'd0}};

assign tmp_12_fu_1569_p3 = {{add_ln171_fu_1552_p2}, {1'd0}};

assign tmp_13_fu_1508_p3 = {{add_ln180_14_fu_1495_p2}, {1'd0}};

assign tmp_14_fu_1321_p3 = line_buffer_m_V_q0[32'd1];

assign tmp_4_fu_674_p3 = {{word_buffer_m_V_offset}, {2'd0}};

assign tmp_5_fu_767_p3 = s_idx_V_fu_762_p2[32'd5];

assign tmp_6_fu_800_p3 = {{add_ln180_fu_783_p2}, {1'd0}};

assign tmp_7_fu_915_p3 = {{add_ln180_4_fu_902_p2}, {1'd0}};

assign tmp_8_fu_853_p3 = {{add_ln138_fu_840_p2}, {1'd0}};

assign tmp_9_fu_1118_p3 = {{add_ln74_fu_1109_p2}, {2'd0}};

assign tmp_fu_658_p3 = {{word_buffer_m_V_offset}, {3'd0}};

assign tmp_s_fu_1157_p3 = {{word_buffer_m_V_offset}, {ret_V_8_fu_1152_p2}};

assign trunc_ln1352_fu_1093_p1 = p_087_0_i_reg_528[2:0];

assign trunc_ln171_fu_1557_p1 = add_ln171_fu_1552_p2[5:0];

assign trunc_ln180_1_fu_1439_p1 = add_ln180_9_fu_1388_p2[4:0];

assign trunc_ln180_fu_788_p1 = add_ln180_fu_783_p2[4:0];

assign trunc_ln68_fu_736_p1 = slices_per_line_V_fu_710_p2[3:0];

assign trunc_ln74_1_fu_1202_p1 = add_ln74_1_fu_1185_p2[8:0];

assign trunc_ln74_2_fu_1311_p1 = line_buffer_m_V_q0[0:0];

assign trunc_ln74_fu_1190_p1 = add_ln74_1_fu_1185_p2[6:0];

assign xor_ln68_fu_752_p2 = (p_095_0_reg_483 ^ 4'd8);

assign xor_ln841_fu_1329_p2 = (tmp_14_fu_1321_p3 ^ ret_V_14_fu_1315_p2);

assign zext_ln117_fu_696_p1 = log_width_V;

assign zext_ln133_fu_944_p1 = add_ln133_fu_938_p2;

assign zext_ln1354_fu_1220_p1 = p_097_0_i_i_reg_564;

assign zext_ln138_1_fu_861_p1 = tmp_8_fu_853_p3;

assign zext_ln138_2_fu_871_p1 = add_ln138_1_fu_865_p2;

assign zext_ln138_3_fu_969_p1 = p_0249_0_reg_494;

assign zext_ln138_4_fu_955_p1 = p_0249_0_reg_494;

assign zext_ln138_5_fu_964_p1 = add_ln138_2_fu_959_p2;

assign zext_ln138_fu_654_p1 = word_buffer_m_V_offset;

assign zext_ln141_fu_882_p1 = add_ln141_fu_876_p2;

assign zext_ln166_fu_1537_p1 = add_ln166_fu_1531_p2;

assign zext_ln171_1_fu_1709_p1 = p_0284_0_reg_631;

assign zext_ln171_2_fu_1695_p1 = p_0284_0_reg_631;

assign zext_ln171_3_fu_1704_p1 = add_ln171_2_fu_1699_p2;

assign zext_ln171_fu_1587_p1 = add_ln171_1_fu_1581_p2;

assign zext_ln174_fu_1598_p1 = add_ln174_fu_1592_p2;

assign zext_ln180_10_fu_898_p1 = ret_V_fu_892_p2;

assign zext_ln180_11_fu_923_p1 = tmp_7_fu_915_p3;

assign zext_ln180_12_fu_933_p1 = add_ln180_5_fu_927_p2;

assign zext_ln180_13_fu_1044_p1 = p_027_0_reg_506;

assign zext_ln180_14_fu_1030_p1 = p_027_0_reg_506;

assign zext_ln180_15_fu_1039_p1 = add_ln180_6_fu_1034_p2;

assign zext_ln180_16_fu_1053_p1 = add_ln180_7_fu_1048_p2;

assign zext_ln180_17_fu_978_p1 = add_ln180_8_fu_973_p2;

assign zext_ln180_18_fu_1409_p1 = tmp_11_fu_1401_p3;

assign zext_ln180_19_fu_1413_p1 = tmp_11_fu_1401_p3;

assign zext_ln180_20_fu_1423_p1 = add_ln180_10_fu_1417_p2;

assign zext_ln180_21_fu_1457_p1 = sub_ln180_1_fu_1451_p2;

assign zext_ln180_22_fu_1468_p1 = add_ln180_11_fu_1462_p2;

assign zext_ln180_23_fu_1479_p1 = add_ln180_12_fu_1473_p2;

assign zext_ln180_24_fu_1490_p1 = add_ln180_13_fu_1484_p2;

assign zext_ln180_25_fu_1516_p1 = tmp_13_fu_1508_p3;

assign zext_ln180_26_fu_1526_p1 = add_ln180_15_fu_1520_p2;

assign zext_ln180_27_fu_1718_p1 = add_ln180_18_fu_1713_p2;

assign zext_ln180_28_fu_1623_p1 = p_0324_0_reg_609;

assign zext_ln180_29_fu_1609_p1 = p_0324_0_reg_609;

assign zext_ln180_30_fu_1618_p1 = add_ln180_16_fu_1613_p2;

assign zext_ln180_31_fu_1632_p1 = add_ln180_17_fu_1627_p2;

assign zext_ln180_32_fu_1743_p1 = p_0501_0_reg_643;

assign zext_ln180_33_fu_1747_p1 = p_0501_0_reg_643;

assign zext_ln180_34_fu_1756_p1 = add_ln180_19_fu_1751_p2;

assign zext_ln180_35_fu_1772_p1 = add_ln180_20_reg_2189;

assign zext_ln180_6_fu_779_p1 = p_095_0_reg_483;

assign zext_ln180_7_fu_808_p1 = tmp_6_fu_800_p3;

assign zext_ln180_8_fu_824_p1 = add_ln180_2_fu_818_p2;

assign zext_ln180_9_fu_835_p1 = add_ln180_3_fu_829_p2;

assign zext_ln180_fu_1164_p1 = tmp_s_fu_1157_p3;

assign zext_ln185_fu_1434_p1 = add_ln185_fu_1428_p2;

assign zext_ln215_1_fu_1263_p1 = p_087_0_i_i_reg_587;

assign zext_ln215_2_fu_1287_p1 = p_087_0_i_i_reg_587;

assign zext_ln215_3_fu_666_p1 = tmp_fu_658_p3;

assign zext_ln215_4_fu_670_p1 = tmp_fu_658_p3;

assign zext_ln215_5_fu_682_p1 = tmp_4_fu_674_p3;

assign zext_ln215_8_fu_1306_p1 = add_ln215_1_fu_1301_p2;

assign zext_ln215_fu_1148_p1 = p_084_0_i_reg_539;

assign zext_ln544_5_fu_1384_p1 = p_0198_0_reg_598;

assign zext_ln544_6_fu_1181_p1 = p_097_0_i_i_reg_564;

assign zext_ln544_fu_775_p1 = p_095_0_reg_483;

assign zext_ln74_1_fu_1114_p1 = add_ln74_fu_1109_p2;

assign zext_ln74_2_fu_1126_p1 = tmp_9_fu_1118_p3;

assign zext_ln74_3_fu_1273_p1 = ret_V_10_fu_1267_p2;

assign zext_ln74_4_fu_1282_p1 = add_ln74_3_fu_1277_p2;

assign zext_ln74_fu_1105_p1 = p_087_0_i_reg_528;

assign zext_ln879_fu_722_p1 = words_per_image_V;

always @ (posedge ap_clk) begin
    zext_ln215_3_reg_1799[2:0] <= 3'b000;
    zext_ln215_3_reg_1799[6:5] <= 2'b00;
    zext_ln215_4_reg_1804[2:0] <= 3'b000;
    zext_ln215_4_reg_1804[5] <= 1'b0;
    rhs_V_reg_1833[5] <= 1'b0;
    zext_ln544_reg_1855[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    add_ln180_2_reg_1863[0] <= 1'b0;
    line_buffer_m_V_addr_2_reg_1869[0] <= 1'b0;
    line_buffer_m_V_addr_4_reg_1874[0] <= 1'b1;
    add_ln138_1_reg_1879[0] <= 1'b0;
    word_buffer_m_V_addr_2_reg_1884[0] <= 1'b0;
    word_buffer_m_V_addr_5_reg_1889[0] <= 1'b1;
    add_ln180_5_reg_1894[0] <= 1'b0;
    old_word_buffer_m_V_s_reg_1899[0] <= 1'b0;
    old_word_buffer_m_V_1_reg_1904[0] <= 1'b1;
    ret_V_7_reg_1973[2:0] <= 3'b000;
    add_ln74_2_reg_2004[0] <= 1'b0;
    zext_ln544_5_reg_2049[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    add_ln180_10_reg_2059[0] <= 1'b0;
    word_buffer_m_V_addr_7_reg_2064[0] <= 1'b0;
    word_buffer_m_V_addr_8_reg_2069[0] <= 1'b1;
    sub_ln180_1_reg_2074[0] <= 1'b0;
    line_buffer_m_V_addr_5_reg_2080[0] <= 1'b0;
    line_buffer_m_V_addr_8_reg_2085[0] <= 1'b1;
    add_ln180_12_reg_2090[0] <= 1'b0;
    line_buffer_m_V_addr_9_reg_2095[0] <= 1'b0;
    line_buffer_m_V_addr_10_reg_2100[0] <= 1'b1;
    add_ln180_15_reg_2105[0] <= 1'b0;
    word_buffer_m_V_addr_3_reg_2110[0] <= 1'b0;
    word_buffer_m_V_addr_4_reg_2115[0] <= 1'b1;
    add_ln171_1_reg_2120[0] <= 1'b0;
    old_word_buffer_m_V_6_reg_2125[0] <= 1'b0;
    old_word_buffer_m_V_7_reg_2130[0] <= 1'b1;
end

endmodule //process_word
