-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bin_dense is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    wt_mem_V_4_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    wt_mem_V_4_ce0 : OUT STD_LOGIC;
    wt_mem_V_4_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    kh_mem_V_4_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    kh_mem_V_4_ce0 : OUT STD_LOGIC;
    kh_mem_V_4_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    dmem_V_4_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    dmem_V_4_ce0 : OUT STD_LOGIC;
    dmem_V_4_we0 : OUT STD_LOGIC;
    dmem_V_4_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dmem_V_4_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    layer_type_V : IN STD_LOGIC_VECTOR (1 downto 0);
    d_i_idx_V : IN STD_LOGIC_VECTOR (0 downto 0);
    d_o_idx_V : IN STD_LOGIC_VECTOR (0 downto 0);
    o_index_V_4 : IN STD_LOGIC_VECTOR (15 downto 0);
    n_inputs : IN STD_LOGIC_VECTOR (15 downto 0);
    n_outputs : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of bin_dense is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv16_C000 : STD_LOGIC_VECTOR (15 downto 0) := "1100000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv56_0 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv13_925 : STD_LOGIC_VECTOR (12 downto 0) := "0100100100101";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv9_40 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_const_lv16_80 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal icmp_ln879_fu_507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_2422 : STD_LOGIC_VECTOR (0 downto 0);
    signal lhs_V_fu_513_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal lhs_V_reg_2430 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln209_fu_517_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln209_reg_2435 : STD_LOGIC_VECTOR (5 downto 0);
    signal dmem_V_3_addr_1_reg_2440 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1352_1_fu_542_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln1352_1_reg_2445 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln1352_fu_546_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln1352_reg_2450 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln1599_fu_550_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln1599_reg_2455 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal o_V_fu_560_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal o_V_reg_2463 : STD_LOGIC_VECTOR (15 downto 0);
    signal dmem_V_3_addr_reg_2468 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln605_fu_555_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal o_offset_V_fu_630_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal o_offset_V_reg_2476 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal o_word_V_4_reg_2481 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_V_s_reg_2491 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln887_fu_635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln544_cast_reg_2496 : STD_LOGIC_VECTOR (13 downto 0);
    signal j_V_fu_695_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_V_reg_2509 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal add_ln620_1_fu_705_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln620_1_reg_2514 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln887_17_fu_689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln180_fu_740_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln180_reg_2529 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_reg_2535 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_69_reg_2540 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_70_reg_2546 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_71_reg_2552 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_72_reg_2558 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_73_reg_2564 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_74_reg_2570 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_75_reg_2576 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_76_reg_2582 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_77_reg_2588 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_78_reg_2594 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_79_reg_2600 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_80_reg_2606 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_81_reg_2612 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_82_reg_2618 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln1355_fu_1296_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln1355_reg_2624 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_83_reg_2631 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_84_reg_2636 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_85_reg_2642 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_86_reg_2648 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_87_reg_2654 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_88_reg_2660 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_89_reg_2666 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_90_reg_2672 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_91_reg_2678 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_92_reg_2684 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_93_reg_2690 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_94_reg_2696 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_95_reg_2702 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_96_reg_2708 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_97_reg_2714 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_98_reg_2720 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_100_reg_2727 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_101_reg_2733 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_102_reg_2739 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_103_reg_2745 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_104_reg_2751 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_105_reg_2757 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_106_reg_2763 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln68_fu_1790_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln68_reg_2770 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln700_fu_1800_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln700_reg_2775 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_V_1_fu_1999_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal sum_V_fu_2017_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln887_18_fu_1993_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_V_fu_2023_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal kh_off_V_1_fu_2044_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal kh_off_V_1_reg_2803 : STD_LOGIC_VECTOR (0 downto 0);
    signal kh_word_V_2_reg_2808 : STD_LOGIC_VECTOR (63 downto 0);
    signal ki_V_2_fu_2062_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ki_V_2_reg_2814 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_8_fu_2379_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal r_V_8_reg_2819 : STD_LOGIC_VECTOR (35 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal icmp_ln816_fu_2205_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln816_reg_2824 : STD_LOGIC_VECTOR (0 downto 0);
    signal prediction_V_2_fu_2356_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal best_out_V_2_fu_2371_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_reg_384 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_12_reg_396 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_01227_0_reg_408 : STD_LOGIC_VECTOR (15 downto 0);
    signal phi_mul1_reg_420 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_V_5_reg_432 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0259_0_reg_444 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0354_0_reg_456 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal phi_mul_reg_467 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_0263_1_reg_478 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0765_0_reg_490 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln180_fu_529_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln608_fu_607_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_10_fu_680_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln620_1_fu_716_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln619_fu_735_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_fu_2039_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum_m_1_V_fu_278 : STD_LOGIC_VECTOR (15 downto 0);
    signal sum_m_1_V_6_fu_1976_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sum_m_1_V_3_fu_282 : STD_LOGIC_VECTOR (15 downto 0);
    signal sum_m_1_V_5_fu_1969_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln879_9_fu_612_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_9_fu_617_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal o_word_V_3_fu_2341_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_521_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_31_fu_534_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal rhs_V_fu_566_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln1353_fu_570_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_fu_575_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_22_fu_580_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln6_fu_588_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_32_fu_598_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln209_2_fu_626_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln215_fu_640_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal ret_V_24_fu_644_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal ret_V_2_fu_670_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln887_fu_685_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln620_fu_711_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln620_fu_701_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln619_fu_721_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_36_fu_726_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_27_fu_744_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_fu_750_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_758_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_766_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_774_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_782_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_790_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_798_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_806_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_814_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_822_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_830_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_fu_838_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_fu_846_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_854_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_fu_862_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_870_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_fu_878_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_fu_886_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_fu_894_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_fu_902_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_910_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_fu_918_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_fu_926_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_fu_934_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_fu_942_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_fu_950_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_fu_958_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_64_fu_966_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_fu_974_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_fu_982_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_fu_990_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_fu_998_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_3_fu_1006_p64 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln1355_fu_1136_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_V_6_fu_1140_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_V_4_fu_1460_p32 : STD_LOGIC_VECTOR (61 downto 0);
    signal ret_V_5_fu_1514_p32 : STD_LOGIC_VECTOR (61 downto 0);
    signal zext_ln1355_2_fu_1564_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln1355_1_fu_1510_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal x_V_fu_1672_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_99_fu_1684_p4 : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln68_3_fu_1568_p31 : STD_LOGIC_VECTOR (59 downto 0);
    signal trunc_ln68_4_fu_1617_p31 : STD_LOGIC_VECTOR (59 downto 0);
    signal zext_ln68_1_fu_1694_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal add_ln68_fu_1698_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal add_ln68_2_fu_1666_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln68_1_fu_1704_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal zext_ln700_fu_1678_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln9_fu_1710_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln700_15_fu_1794_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln700_1_fu_1681_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal x_V_3_fu_1806_p16 : STD_LOGIC_VECTOR (59 downto 0);
    signal r_V_fu_1836_p14 : STD_LOGIC_VECTOR (51 downto 0);
    signal r_V_6_fu_1859_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal zext_ln1503_fu_1863_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal zext_ln68_fu_1832_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal x_V_4_fu_1873_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal r_V_5_fu_1879_p4 : STD_LOGIC_VECTOR (44 downto 0);
    signal r_V_7_fu_1889_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal x_V_5_fu_1893_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal add_ln700_16_fu_1867_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal trunc_ln1503_1_fu_1909_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln1503_2_fu_1919_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1503_1_fu_1899_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln_fu_1902_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1503_1_fu_1935_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1503_fu_1929_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1503_2_fu_1941_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln3_fu_1947_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1503_3_fu_1955_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sum_m_0_V_fu_1959_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln68_fu_1965_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln700_fu_2005_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln700_fu_2009_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_1_fu_2029_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Result_7_fu_2052_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_s_fu_2048_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal kh_off_V_fu_2070_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln728_fu_2106_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln_fu_2110_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal icmp_ln879_10_fu_2074_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_11_fu_2084_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln879_fu_2145_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln879_fu_2157_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_12_fu_2100_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln879_3_fu_2163_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln879_3_fu_2169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_6_fu_2125_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_4_fu_2090_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln879_fu_2151_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_fu_2080_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_7_fu_2135_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln879_3_fu_2183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln879_fu_2175_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln879_6_fu_2189_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal nc_V_4_fu_2197_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_33_fu_2214_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_34_fu_2223_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln879_8_fu_2232_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal rhs_V_1_fu_2239_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal sext_ln728_fu_2247_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal zext_ln703_fu_2211_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal ret_V_28_fu_2251_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal out_V_fu_2257_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln700_fu_2273_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln728_1_fu_2277_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal bvh_d_index_fu_2291_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_s_fu_2294_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln7_fu_2310_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Result_8_fu_2297_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln879_13_fu_2267_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_fu_2285_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1494_fu_2330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1494_1_fu_2336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal o_word_V_2_fu_2324_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal prediction_V_fu_2306_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal prediction_V_1_fu_2349_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal best_out_V_fu_2320_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal best_out_V_1_fu_2364_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);

    component top_mul_mul_20s_1bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (19 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;



begin
    top_mul_mul_20s_1bkb_U1 : component top_mul_mul_20s_1bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 16,
        dout_WIDTH => 36)
    port map (
        din0 => shl_ln_fu_2110_p3,
        din1 => ki_V_2_reg_2814,
        dout => r_V_8_fu_2379_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    p_01227_0_reg_408_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                p_01227_0_reg_408 <= o_V_reg_2463;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                p_01227_0_reg_408 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    p_0259_0_reg_444_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln887_18_fu_1993_p2 = ap_const_lv1_1))) then 
                p_0259_0_reg_444 <= i_V_fu_2023_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                p_0259_0_reg_444 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    p_0263_1_reg_478_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln887_17_fu_689_p2 = ap_const_lv1_1))) then 
                p_0263_1_reg_478 <= tmp_V_5_reg_432;
            elsif (((icmp_ln887_18_fu_1993_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                p_0263_1_reg_478 <= sum_V_fu_2017_p2;
            end if; 
        end if;
    end process;

    p_0354_0_reg_456_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                p_0354_0_reg_456 <= j_V_reg_2509;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln887_fu_635_p2 = ap_const_lv1_1))) then 
                p_0354_0_reg_456 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    p_0765_0_reg_490_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln887_17_fu_689_p2 = ap_const_lv1_1))) then 
                p_0765_0_reg_490 <= ap_const_lv2_0;
            elsif (((icmp_ln887_18_fu_1993_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                p_0765_0_reg_490 <= j_V_1_fu_1999_p2;
            end if; 
        end if;
    end process;

    p_Val2_12_reg_396_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                p_Val2_12_reg_396 <= best_out_V_2_fu_2371_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                p_Val2_12_reg_396 <= ap_const_lv16_C000;
            end if; 
        end if;
    end process;

    p_Val2_s_reg_384_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                p_Val2_s_reg_384 <= prediction_V_2_fu_2356_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                p_Val2_s_reg_384 <= ap_const_lv8_FF;
            end if; 
        end if;
    end process;

    phi_mul1_reg_420_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                phi_mul1_reg_420 <= add_ln1599_reg_2455;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                phi_mul1_reg_420 <= ap_const_lv22_0;
            end if; 
        end if;
    end process;

    phi_mul_reg_467_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                phi_mul_reg_467 <= add_ln620_1_reg_2514;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln887_fu_635_p2 = ap_const_lv1_1))) then 
                phi_mul_reg_467 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    tmp_V_5_reg_432_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln887_18_fu_1993_p2 = ap_const_lv1_1))) then 
                tmp_V_5_reg_432 <= p_0263_1_reg_478;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                tmp_V_5_reg_432 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln1599_reg_2455 <= add_ln1599_fu_550_p2;
                o_V_reg_2463 <= o_V_fu_560_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_17_fu_689_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                add_ln620_1_reg_2514 <= add_ln620_1_fu_705_p2;
                trunc_ln180_reg_2529 <= trunc_ln180_fu_740_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                add_ln700_reg_2775 <= add_ln700_fu_1800_p2;
                tmp_100_reg_2727 <= add_ln68_1_fu_1704_p2(59 downto 56);
                tmp_101_reg_2733 <= add_ln68_1_fu_1704_p2(51 downto 48);
                tmp_102_reg_2739 <= add_ln68_1_fu_1704_p2(43 downto 40);
                tmp_103_reg_2745 <= add_ln68_1_fu_1704_p2(35 downto 32);
                tmp_104_reg_2751 <= add_ln68_1_fu_1704_p2(27 downto 24);
                tmp_105_reg_2757 <= add_ln68_1_fu_1704_p2(19 downto 16);
                tmp_106_reg_2763 <= add_ln68_1_fu_1704_p2(11 downto 8);
                trunc_ln68_reg_2770 <= trunc_ln68_fu_1790_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    dmem_V_3_addr_1_reg_2440(11) <= zext_ln180_fu_529_p1(12 - 1 downto 0)(11);
                icmp_ln879_reg_2422 <= icmp_ln879_fu_507_p2;
                    lhs_V_reg_2430(15 downto 0) <= lhs_V_fu_513_p1(15 downto 0);
                trunc_ln209_reg_2435 <= trunc_ln209_fu_517_p1;
                    zext_ln1352_1_reg_2445(1) <= zext_ln1352_1_fu_542_p1(1);
                    zext_ln1352_reg_2450(15 downto 0) <= zext_ln1352_fu_546_p1(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln605_fu_555_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                dmem_V_3_addr_reg_2468 <= zext_ln608_fu_607_p1(12 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln879_reg_2422 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                icmp_ln816_reg_2824 <= icmp_ln816_fu_2205_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                j_V_reg_2509 <= j_V_fu_695_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                kh_off_V_1_reg_2803 <= kh_off_V_1_fu_2044_p1;
                kh_word_V_2_reg_2808 <= kh_mem_V_4_q0;
                ki_V_2_reg_2814 <= ki_V_2_fu_2062_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln879_reg_2422 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                o_offset_V_reg_2476 <= o_offset_V_fu_630_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                o_word_V_4_reg_2481 <= dmem_V_4_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                r_V_8_reg_2819 <= r_V_8_fu_2379_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln887_fu_635_p2 = ap_const_lv1_1))) then
                ret_V_s_reg_2491 <= p_0259_0_reg_444(15 downto 7);
                zext_ln544_cast_reg_2496 <= ret_V_24_fu_644_p2(20 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                sum_m_1_V_3_fu_282 <= sum_m_1_V_5_fu_1969_p3;
                sum_m_1_V_fu_278 <= sum_m_1_V_6_fu_1976_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                tmp_35_reg_2535 <= x_V_6_fu_1140_p2(61 downto 60);
                tmp_69_reg_2540 <= x_V_6_fu_1140_p2(57 downto 56);
                tmp_70_reg_2546 <= x_V_6_fu_1140_p2(53 downto 52);
                tmp_71_reg_2552 <= x_V_6_fu_1140_p2(49 downto 48);
                tmp_72_reg_2558 <= x_V_6_fu_1140_p2(45 downto 44);
                tmp_73_reg_2564 <= x_V_6_fu_1140_p2(41 downto 40);
                tmp_74_reg_2570 <= x_V_6_fu_1140_p2(37 downto 36);
                tmp_75_reg_2576 <= x_V_6_fu_1140_p2(33 downto 32);
                tmp_76_reg_2582 <= x_V_6_fu_1140_p2(29 downto 28);
                tmp_77_reg_2588 <= x_V_6_fu_1140_p2(25 downto 24);
                tmp_78_reg_2594 <= x_V_6_fu_1140_p2(21 downto 20);
                tmp_79_reg_2600 <= x_V_6_fu_1140_p2(17 downto 16);
                tmp_80_reg_2606 <= x_V_6_fu_1140_p2(13 downto 12);
                tmp_81_reg_2612 <= x_V_6_fu_1140_p2(9 downto 8);
                tmp_82_reg_2618 <= x_V_6_fu_1140_p2(5 downto 4);
                tmp_83_reg_2631 <= x_V_6_fu_1140_p2(63 downto 62);
                tmp_84_reg_2636 <= x_V_6_fu_1140_p2(59 downto 58);
                tmp_85_reg_2642 <= x_V_6_fu_1140_p2(55 downto 54);
                tmp_86_reg_2648 <= x_V_6_fu_1140_p2(51 downto 50);
                tmp_87_reg_2654 <= x_V_6_fu_1140_p2(47 downto 46);
                tmp_88_reg_2660 <= x_V_6_fu_1140_p2(43 downto 42);
                tmp_89_reg_2666 <= x_V_6_fu_1140_p2(39 downto 38);
                tmp_90_reg_2672 <= x_V_6_fu_1140_p2(35 downto 34);
                tmp_91_reg_2678 <= x_V_6_fu_1140_p2(31 downto 30);
                tmp_92_reg_2684 <= x_V_6_fu_1140_p2(27 downto 26);
                tmp_93_reg_2690 <= x_V_6_fu_1140_p2(23 downto 22);
                tmp_94_reg_2696 <= x_V_6_fu_1140_p2(19 downto 18);
                tmp_95_reg_2702 <= x_V_6_fu_1140_p2(15 downto 14);
                tmp_96_reg_2708 <= x_V_6_fu_1140_p2(11 downto 10);
                tmp_97_reg_2714 <= x_V_6_fu_1140_p2(7 downto 6);
                tmp_98_reg_2720 <= x_V_6_fu_1140_p2(3 downto 2);
                trunc_ln1355_reg_2624 <= trunc_ln1355_fu_1296_p1;
            end if;
        end if;
    end process;
    lhs_V_reg_2430(16) <= '0';
    dmem_V_3_addr_1_reg_2440(10 downto 0) <= "00000000000";
    zext_ln1352_1_reg_2445(0) <= '0';
    zext_ln1352_1_reg_2445(2) <= '0';
    zext_ln1352_reg_2450(21 downto 16) <= "000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln605_fu_555_p2, ap_CS_fsm_state4, icmp_ln887_fu_635_p2, ap_CS_fsm_state5, icmp_ln887_17_fu_689_p2, ap_CS_fsm_state9, icmp_ln887_18_fu_1993_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln605_fu_555_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln887_fu_635_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln887_17_fu_689_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln887_18_fu_1993_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    add_ln1353_fu_570_p2 <= std_logic_vector(unsigned(o_index_V_4) + unsigned(p_01227_0_reg_408));
    add_ln1503_1_fu_1935_p2 <= std_logic_vector(unsigned(zext_ln1503_1_fu_1899_p1) + unsigned(trunc_ln_fu_1902_p3));
    add_ln1503_2_fu_1941_p2 <= std_logic_vector(unsigned(add_ln1503_1_fu_1935_p2) + unsigned(add_ln1503_fu_1929_p2));
    add_ln1503_fu_1929_p2 <= std_logic_vector(unsigned(trunc_ln1503_1_fu_1909_p4) + unsigned(trunc_ln1503_2_fu_1919_p4));
    add_ln1599_fu_550_p2 <= std_logic_vector(unsigned(phi_mul1_reg_420) + unsigned(zext_ln1352_reg_2450));
    add_ln619_fu_721_p2 <= std_logic_vector(unsigned(zext_ln620_fu_701_p1) + unsigned(zext_ln1352_1_reg_2445));
    add_ln620_1_fu_705_p2 <= std_logic_vector(unsigned(ap_const_lv13_925) + unsigned(phi_mul_reg_467));
    add_ln620_fu_711_p2 <= std_logic_vector(unsigned(zext_ln544_cast_reg_2496) + unsigned(zext_ln887_fu_685_p1));
    add_ln68_1_fu_1704_p2 <= std_logic_vector(unsigned(zext_ln68_1_fu_1694_p1) + unsigned(add_ln68_fu_1698_p2));
    add_ln68_2_fu_1666_p2 <= std_logic_vector(unsigned(ret_V_4_fu_1460_p32) + unsigned(ret_V_5_fu_1514_p32));
    add_ln68_fu_1698_p2 <= std_logic_vector(unsigned(trunc_ln68_3_fu_1568_p31) + unsigned(trunc_ln68_4_fu_1617_p31));
    add_ln700_15_fu_1794_p2 <= std_logic_vector(unsigned(zext_ln700_fu_1678_p1) + unsigned(trunc_ln9_fu_1710_p4));
    add_ln700_16_fu_1867_p2 <= std_logic_vector(unsigned(x_V_3_fu_1806_p16) + unsigned(r_V_6_fu_1859_p1));
    add_ln700_fu_1800_p2 <= std_logic_vector(unsigned(add_ln700_15_fu_1794_p2) + unsigned(zext_ln700_1_fu_1681_p1));
    and_ln879_3_fu_2169_p2 <= (xor_ln879_3_fu_2163_p2 and icmp_ln879_12_fu_2100_p2);
    and_ln879_fu_2151_p2 <= (xor_ln879_fu_2145_p2 and icmp_ln879_11_fu_2084_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln605_fu_555_p2)
    begin
        if ((((icmp_ln605_fu_555_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln605_fu_555_p2)
    begin
        if (((icmp_ln605_fu_555_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    best_out_V_1_fu_2364_p3 <= 
        p_Val2_12_reg_396 when (icmp_ln879_reg_2422(0) = '1') else 
        best_out_V_fu_2320_p1;
    best_out_V_2_fu_2371_p3 <= 
        best_out_V_1_fu_2364_p3 when (or_ln1494_1_fu_2336_p2(0) = '1') else 
        p_Val2_12_reg_396;
        best_out_V_fu_2320_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln7_fu_2310_p4),16));

    bvh_d_index_fu_2291_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(o_offset_V_reg_2476),32));

    dmem_V_4_address0_assign_proc : process(dmem_V_3_addr_1_reg_2440, ap_CS_fsm_state2, dmem_V_3_addr_reg_2468, icmp_ln605_fu_555_p2, ap_CS_fsm_state5, ap_CS_fsm_state12, zext_ln608_fu_607_p1, zext_ln619_fu_735_p1, icmp_ln879_9_fu_612_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dmem_V_4_address0 <= dmem_V_3_addr_reg_2468;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            dmem_V_4_address0 <= zext_ln619_fu_735_p1(12 - 1 downto 0);
        elsif (((icmp_ln605_fu_555_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln879_9_fu_612_p2 = ap_const_lv1_1))) then 
            dmem_V_4_address0 <= dmem_V_3_addr_1_reg_2440;
        elsif (((icmp_ln605_fu_555_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            dmem_V_4_address0 <= zext_ln608_fu_607_p1(12 - 1 downto 0);
        else 
            dmem_V_4_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    dmem_V_4_ce0_assign_proc : process(ap_CS_fsm_state2, icmp_ln605_fu_555_p2, ap_CS_fsm_state5, ap_CS_fsm_state12, icmp_ln879_9_fu_612_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state5) or ((icmp_ln605_fu_555_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((icmp_ln605_fu_555_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln879_9_fu_612_p2 = ap_const_lv1_1)))) then 
            dmem_V_4_ce0 <= ap_const_logic_1;
        else 
            dmem_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dmem_V_4_d0_assign_proc : process(ap_CS_fsm_state2, icmp_ln605_fu_555_p2, ap_CS_fsm_state12, icmp_ln879_9_fu_612_p2, p_Result_9_fu_617_p3, o_word_V_3_fu_2341_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dmem_V_4_d0 <= o_word_V_3_fu_2341_p3;
        elsif (((icmp_ln605_fu_555_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln879_9_fu_612_p2 = ap_const_lv1_1))) then 
            dmem_V_4_d0 <= p_Result_9_fu_617_p3;
        else 
            dmem_V_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dmem_V_4_we0_assign_proc : process(ap_CS_fsm_state2, icmp_ln605_fu_555_p2, ap_CS_fsm_state12, icmp_ln879_9_fu_612_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((icmp_ln605_fu_555_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln879_9_fu_612_p2 = ap_const_lv1_1)))) then 
            dmem_V_4_we0 <= ap_const_logic_1;
        else 
            dmem_V_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    i_V_fu_2023_p2 <= std_logic_vector(unsigned(p_0259_0_reg_444) + unsigned(ap_const_lv16_80));
    icmp_ln1494_fu_2285_p2 <= "1" when (signed(sext_ln700_fu_2273_p1) > signed(shl_ln728_1_fu_2277_p3)) else "0";
    icmp_ln605_fu_555_p2 <= "1" when (p_01227_0_reg_408 = n_outputs) else "0";
    icmp_ln816_fu_2205_p2 <= "1" when (signed(tmp_V_5_reg_432) < signed(nc_V_4_fu_2197_p3)) else "0";
    icmp_ln879_10_fu_2074_p2 <= "1" when (kh_off_V_fu_2070_p1 = ap_const_lv2_0) else "0";
    icmp_ln879_11_fu_2084_p2 <= "1" when (kh_off_V_fu_2070_p1 = ap_const_lv2_1) else "0";
    icmp_ln879_12_fu_2100_p2 <= "1" when (kh_off_V_fu_2070_p1 = ap_const_lv2_2) else "0";
    icmp_ln879_13_fu_2267_p2 <= "1" when (p_01227_0_reg_408 = ap_const_lv16_0) else "0";
    icmp_ln879_9_fu_612_p2 <= "1" when (layer_type_V = ap_const_lv2_3) else "0";
    icmp_ln879_fu_507_p2 <= "1" when (layer_type_V = ap_const_lv2_2) else "0";
    icmp_ln887_17_fu_689_p2 <= "1" when (p_0354_0_reg_456 = ap_const_lv2_2) else "0";
    icmp_ln887_18_fu_1993_p2 <= "1" when (p_0765_0_reg_490 = ap_const_lv2_2) else "0";
    icmp_ln887_fu_635_p2 <= "1" when (unsigned(p_0259_0_reg_444) < unsigned(n_inputs)) else "0";
    j_V_1_fu_1999_p2 <= std_logic_vector(unsigned(p_0765_0_reg_490) + unsigned(ap_const_lv2_1));
    j_V_fu_695_p2 <= std_logic_vector(unsigned(p_0354_0_reg_456) + unsigned(ap_const_lv2_1));

    kh_mem_V_4_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state10, zext_ln544_10_fu_680_p1, zext_ln544_fu_2039_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            kh_mem_V_4_address0 <= zext_ln544_fu_2039_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            kh_mem_V_4_address0 <= zext_ln544_10_fu_680_p1(6 - 1 downto 0);
        else 
            kh_mem_V_4_address0 <= "XXXXXX";
        end if; 
    end process;


    kh_mem_V_4_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            kh_mem_V_4_ce0 <= ap_const_logic_1;
        else 
            kh_mem_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kh_off_V_1_fu_2044_p1 <= p_01227_0_reg_408(1 - 1 downto 0);
    kh_off_V_fu_2070_p1 <= p_01227_0_reg_408(2 - 1 downto 0);
    ki_V_2_fu_2062_p3 <= 
        p_Result_7_fu_2052_p4 when (kh_off_V_1_fu_2044_p1(0) = '1') else 
        p_Result_s_fu_2048_p1;
    lhs_V_fu_513_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(o_index_V_4),17));
    nc_V_4_fu_2197_p3 <= 
        select_ln879_fu_2175_p3 when (or_ln879_3_fu_2183_p2(0) = '1') else 
        select_ln879_6_fu_2189_p3;
    o_V_fu_560_p2 <= std_logic_vector(unsigned(p_01227_0_reg_408) + unsigned(ap_const_lv16_1));
    o_offset_V_fu_630_p2 <= std_logic_vector(unsigned(trunc_ln209_reg_2435) + unsigned(trunc_ln209_2_fu_626_p1));
    o_word_V_2_fu_2324_p3 <= 
        p_Result_8_fu_2297_p4 when (icmp_ln879_reg_2422(0) = '1') else 
        o_word_V_4_reg_2481;
    o_word_V_3_fu_2341_p3 <= 
        o_word_V_2_fu_2324_p3 when (or_ln1494_1_fu_2336_p2(0) = '1') else 
        o_word_V_4_reg_2481;
    or_ln1494_1_fu_2336_p2 <= (or_ln1494_fu_2330_p2 or icmp_ln879_reg_2422);
    or_ln1494_fu_2330_p2 <= (icmp_ln879_13_fu_2267_p2 or icmp_ln1494_fu_2285_p2);
    or_ln879_3_fu_2183_p2 <= (and_ln879_fu_2151_p2 or and_ln879_3_fu_2169_p2);
    or_ln879_fu_2157_p2 <= (icmp_ln879_11_fu_2084_p2 or icmp_ln879_10_fu_2074_p2);
    out_V_fu_2257_p4 <= ret_V_28_fu_2251_p2(33 downto 14);
    p_Repl2_s_fu_2294_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln816_reg_2824),32));
    p_Result_7_fu_2052_p4 <= kh_mem_V_4_q0(47 downto 32);
    
    p_Result_8_fu_2297_p4_proc : process(o_word_V_4_reg_2481, bvh_d_index_fu_2291_p1, p_Repl2_s_fu_2294_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        p_Result_8_fu_2297_p4 <= o_word_V_4_reg_2481;
        if to_integer(unsigned(bvh_d_index_fu_2291_p1)) >= o_word_V_4_reg_2481'low and to_integer(unsigned(bvh_d_index_fu_2291_p1)) <= o_word_V_4_reg_2481'high then
            result(0) := '0';
            for i in p_Repl2_s_fu_2294_p1'range loop
                result(0) := result(0) or p_Repl2_s_fu_2294_p1(i);
            end loop;
            p_Result_8_fu_2297_p4(to_integer(unsigned(bvh_d_index_fu_2291_p1))) <= result(0);
        end if;
    end process;

    p_Result_9_fu_617_p3 <= (ap_const_lv56_0 & p_Val2_s_reg_384);
    p_Result_s_fu_2048_p1 <= kh_mem_V_4_q0(16 - 1 downto 0);
    prediction_V_1_fu_2349_p3 <= 
        p_Val2_s_reg_384 when (icmp_ln879_reg_2422(0) = '1') else 
        prediction_V_fu_2306_p1;
    prediction_V_2_fu_2356_p3 <= 
        prediction_V_1_fu_2349_p3 when (or_ln1494_1_fu_2336_p2(0) = '1') else 
        p_Val2_s_reg_384;
    prediction_V_fu_2306_p1 <= p_01227_0_reg_408(8 - 1 downto 0);
    r_V_5_fu_1879_p4 <= x_V_4_fu_1873_p2(60 downto 16);
    r_V_6_fu_1859_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_fu_1836_p14),60));
    r_V_7_fu_1889_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_5_fu_1879_p4),61));
    r_V_fu_1836_p14 <= ((((((((((((tmp_100_reg_2727 & ap_const_lv4_0) & tmp_101_reg_2733) & ap_const_lv4_0) & tmp_102_reg_2739) & ap_const_lv4_0) & tmp_103_reg_2745) & ap_const_lv4_0) & tmp_104_reg_2751) & ap_const_lv4_0) & tmp_105_reg_2757) & ap_const_lv4_0) & tmp_106_reg_2763);
    ret_V_1_fu_2029_p4 <= p_01227_0_reg_408(15 downto 2);
    ret_V_22_fu_580_p3 <= add_ln1353_fu_570_p2(6 downto 6);
    ret_V_24_fu_644_p2 <= std_logic_vector(unsigned(phi_mul1_reg_420) + unsigned(zext_ln215_fu_640_p1));
    ret_V_27_fu_744_p2 <= (wt_mem_V_4_q0 xor dmem_V_4_q0);
    ret_V_28_fu_2251_p2 <= std_logic_vector(signed(sext_ln728_fu_2247_p1) + signed(zext_ln703_fu_2211_p1));
    ret_V_2_fu_670_p4 <= p_01227_0_reg_408(15 downto 1);
    ret_V_3_fu_1006_p64 <= ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((tmp_37_fu_750_p3 & ap_const_lv1_0) & tmp_38_fu_758_p3) & ap_const_lv1_0) & tmp_39_fu_766_p3) & ap_const_lv1_0) & tmp_40_fu_774_p3) & ap_const_lv1_0) & tmp_41_fu_782_p3) & ap_const_lv1_0) & tmp_42_fu_790_p3) & ap_const_lv1_0) & tmp_43_fu_798_p3) & ap_const_lv1_0) & tmp_44_fu_806_p3) & ap_const_lv1_0) & tmp_45_fu_814_p3) & ap_const_lv1_0) & tmp_46_fu_822_p3) & ap_const_lv1_0) & tmp_47_fu_830_p3) & ap_const_lv1_0) & tmp_48_fu_838_p3) & ap_const_lv1_0) & tmp_49_fu_846_p3) & ap_const_lv1_0) & tmp_50_fu_854_p3) & ap_const_lv1_0) & tmp_51_fu_862_p3) & ap_const_lv1_0) & tmp_52_fu_870_p3) & ap_const_lv1_0) & tmp_53_fu_878_p3) & ap_const_lv1_0) & tmp_54_fu_886_p3) & ap_const_lv1_0) & tmp_55_fu_894_p3) & ap_const_lv1_0) & tmp_56_fu_902_p3) & ap_const_lv1_0) & tmp_57_fu_910_p3) & ap_const_lv1_0) & tmp_58_fu_918_p3) & ap_const_lv1_0) & tmp_59_fu_926_p3) & ap_const_lv1_0) & tmp_60_fu_934_p3) & ap_const_lv1_0) & tmp_61_fu_942_p3) & ap_const_lv1_0) & tmp_62_fu_950_p3) & ap_const_lv1_0) & tmp_63_fu_958_p3) & ap_const_lv1_0) & tmp_64_fu_966_p3) & ap_const_lv1_0) & tmp_65_fu_974_p3) & ap_const_lv1_0) & tmp_66_fu_982_p3) & ap_const_lv1_0) & tmp_67_fu_990_p3) & ap_const_lv1_0) & tmp_68_fu_998_p3);
    ret_V_4_fu_1460_p32 <= ((((((((((((((((((((((((((((((tmp_35_reg_2535 & ap_const_lv2_0) & tmp_69_reg_2540) & ap_const_lv2_0) & tmp_70_reg_2546) & ap_const_lv2_0) & tmp_71_reg_2552) & ap_const_lv2_0) & tmp_72_reg_2558) & ap_const_lv2_0) & tmp_73_reg_2564) & ap_const_lv2_0) & tmp_74_reg_2570) & ap_const_lv2_0) & tmp_75_reg_2576) & ap_const_lv2_0) & tmp_76_reg_2582) & ap_const_lv2_0) & tmp_77_reg_2588) & ap_const_lv2_0) & tmp_78_reg_2594) & ap_const_lv2_0) & tmp_79_reg_2600) & ap_const_lv2_0) & tmp_80_reg_2606) & ap_const_lv2_0) & tmp_81_reg_2612) & ap_const_lv2_0) & tmp_82_reg_2618) & ap_const_lv2_0) & trunc_ln1355_reg_2624);
    ret_V_5_fu_1514_p32 <= ((((((((((((((((((((((((((((((tmp_83_reg_2631 & ap_const_lv2_0) & tmp_84_reg_2636) & ap_const_lv2_0) & tmp_85_reg_2642) & ap_const_lv2_0) & tmp_86_reg_2648) & ap_const_lv2_0) & tmp_87_reg_2654) & ap_const_lv2_0) & tmp_88_reg_2660) & ap_const_lv2_0) & tmp_89_reg_2666) & ap_const_lv2_0) & tmp_90_reg_2672) & ap_const_lv2_0) & tmp_91_reg_2678) & ap_const_lv2_0) & tmp_92_reg_2684) & ap_const_lv2_0) & tmp_93_reg_2690) & ap_const_lv2_0) & tmp_94_reg_2696) & ap_const_lv2_0) & tmp_95_reg_2702) & ap_const_lv2_0) & tmp_96_reg_2708) & ap_const_lv2_0) & tmp_97_reg_2714) & ap_const_lv2_0) & tmp_98_reg_2720);
    ret_V_fu_575_p2 <= std_logic_vector(unsigned(lhs_V_reg_2430) + unsigned(rhs_V_fu_566_p1));
    rhs_V_1_fu_2239_p3 <= (select_ln879_8_fu_2232_p3 & ap_const_lv12_0);
    rhs_V_fu_566_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_01227_0_reg_408),17));
    select_ln700_fu_2009_p3 <= 
        sum_m_1_V_3_fu_282 when (trunc_ln700_fu_2005_p1(0) = '1') else 
        sum_m_1_V_fu_278;
    select_ln879_6_fu_2189_p3 <= 
        tmp_V_fu_2080_p1 when (icmp_ln879_10_fu_2074_p2(0) = '1') else 
        tmp_V_7_fu_2135_p4;
    select_ln879_8_fu_2232_p3 <= 
        tmp_33_fu_2214_p4 when (kh_off_V_1_reg_2803(0) = '1') else 
        tmp_34_fu_2223_p4;
    select_ln879_fu_2175_p3 <= 
        tmp_V_6_fu_2125_p4 when (and_ln879_3_fu_2169_p2(0) = '1') else 
        tmp_V_4_fu_2090_p4;
        sext_ln68_fu_1965_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sum_m_0_V_fu_1959_p2),16));

        sext_ln700_fu_2273_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(out_V_fu_2257_p4),22));

        sext_ln728_fu_2247_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_1_fu_2239_p3),37));

    shl_ln3_fu_1947_p3 <= (add_ln1503_2_fu_1941_p2 & ap_const_lv1_0);
    shl_ln728_1_fu_2277_p3 <= (p_Val2_12_reg_396 & ap_const_lv6_0);
    shl_ln_fu_2110_p3 <= (trunc_ln728_fu_2106_p1 & ap_const_lv10_0);
    sum_V_fu_2017_p2 <= std_logic_vector(unsigned(select_ln700_fu_2009_p3) + unsigned(p_0263_1_reg_478));
    sum_m_0_V_fu_1959_p2 <= std_logic_vector(unsigned(ap_const_lv9_40) - unsigned(zext_ln1503_3_fu_1955_p1));
    sum_m_1_V_5_fu_1969_p3 <= 
        sext_ln68_fu_1965_p1 when (trunc_ln180_reg_2529(0) = '1') else 
        sum_m_1_V_3_fu_282;
    sum_m_1_V_6_fu_1976_p3 <= 
        sum_m_1_V_fu_278 when (trunc_ln180_reg_2529(0) = '1') else 
        sext_ln68_fu_1965_p1;
    tmp_31_fu_534_p3 <= (d_i_idx_V & ap_const_lv1_0);
    tmp_32_fu_598_p4 <= ((d_o_idx_V & ret_V_22_fu_580_p3) & trunc_ln6_fu_588_p4);
    tmp_33_fu_2214_p4 <= kh_word_V_2_reg_2808(63 downto 48);
    tmp_34_fu_2223_p4 <= kh_word_V_2_reg_2808(31 downto 16);
    tmp_36_fu_726_p4 <= ((add_ln619_fu_721_p2 & ap_const_lv1_0) & ret_V_s_reg_2491);
    tmp_37_fu_750_p3 <= ret_V_27_fu_744_p2(63 downto 63);
    tmp_38_fu_758_p3 <= ret_V_27_fu_744_p2(61 downto 61);
    tmp_39_fu_766_p3 <= ret_V_27_fu_744_p2(59 downto 59);
    tmp_40_fu_774_p3 <= ret_V_27_fu_744_p2(57 downto 57);
    tmp_41_fu_782_p3 <= ret_V_27_fu_744_p2(55 downto 55);
    tmp_42_fu_790_p3 <= ret_V_27_fu_744_p2(53 downto 53);
    tmp_43_fu_798_p3 <= ret_V_27_fu_744_p2(51 downto 51);
    tmp_44_fu_806_p3 <= ret_V_27_fu_744_p2(49 downto 49);
    tmp_45_fu_814_p3 <= ret_V_27_fu_744_p2(47 downto 47);
    tmp_46_fu_822_p3 <= ret_V_27_fu_744_p2(45 downto 45);
    tmp_47_fu_830_p3 <= ret_V_27_fu_744_p2(43 downto 43);
    tmp_48_fu_838_p3 <= ret_V_27_fu_744_p2(41 downto 41);
    tmp_49_fu_846_p3 <= ret_V_27_fu_744_p2(39 downto 39);
    tmp_50_fu_854_p3 <= ret_V_27_fu_744_p2(37 downto 37);
    tmp_51_fu_862_p3 <= ret_V_27_fu_744_p2(35 downto 35);
    tmp_52_fu_870_p3 <= ret_V_27_fu_744_p2(33 downto 33);
    tmp_53_fu_878_p3 <= ret_V_27_fu_744_p2(31 downto 31);
    tmp_54_fu_886_p3 <= ret_V_27_fu_744_p2(29 downto 29);
    tmp_55_fu_894_p3 <= ret_V_27_fu_744_p2(27 downto 27);
    tmp_56_fu_902_p3 <= ret_V_27_fu_744_p2(25 downto 25);
    tmp_57_fu_910_p3 <= ret_V_27_fu_744_p2(23 downto 23);
    tmp_58_fu_918_p3 <= ret_V_27_fu_744_p2(21 downto 21);
    tmp_59_fu_926_p3 <= ret_V_27_fu_744_p2(19 downto 19);
    tmp_60_fu_934_p3 <= ret_V_27_fu_744_p2(17 downto 17);
    tmp_61_fu_942_p3 <= ret_V_27_fu_744_p2(15 downto 15);
    tmp_62_fu_950_p3 <= ret_V_27_fu_744_p2(13 downto 13);
    tmp_63_fu_958_p3 <= ret_V_27_fu_744_p2(11 downto 11);
    tmp_64_fu_966_p3 <= ret_V_27_fu_744_p2(9 downto 9);
    tmp_65_fu_974_p3 <= ret_V_27_fu_744_p2(7 downto 7);
    tmp_66_fu_982_p3 <= ret_V_27_fu_744_p2(5 downto 5);
    tmp_67_fu_990_p3 <= ret_V_27_fu_744_p2(3 downto 3);
    tmp_68_fu_998_p3 <= ret_V_27_fu_744_p2(1 downto 1);
    tmp_99_fu_1684_p4 <= x_V_fu_1672_p2(62 downto 4);
    tmp_V_4_fu_2090_p4 <= kh_mem_V_4_q0(31 downto 16);
    tmp_V_6_fu_2125_p4 <= kh_mem_V_4_q0(47 downto 32);
    tmp_V_7_fu_2135_p4 <= kh_mem_V_4_q0(63 downto 48);
    tmp_V_fu_2080_p1 <= kh_mem_V_4_q0(16 - 1 downto 0);
    tmp_s_fu_521_p3 <= (d_o_idx_V & ap_const_lv11_0);
    trunc_ln1355_fu_1296_p1 <= x_V_6_fu_1140_p2(2 - 1 downto 0);
    trunc_ln1503_1_fu_1909_p4 <= x_V_5_fu_1893_p2(38 downto 32);
    trunc_ln1503_2_fu_1919_p4 <= add_ln700_16_fu_1867_p2(22 downto 16);
    trunc_ln180_fu_740_p1 <= p_0354_0_reg_456(1 - 1 downto 0);
    trunc_ln209_2_fu_626_p1 <= p_01227_0_reg_408(6 - 1 downto 0);
    trunc_ln209_fu_517_p1 <= o_index_V_4(6 - 1 downto 0);
    trunc_ln68_3_fu_1568_p31 <= (((((((((((((((((((((((((((((ap_const_lv2_0 & tmp_69_reg_2540) & ap_const_lv2_0) & tmp_70_reg_2546) & ap_const_lv2_0) & tmp_71_reg_2552) & ap_const_lv2_0) & tmp_72_reg_2558) & ap_const_lv2_0) & tmp_73_reg_2564) & ap_const_lv2_0) & tmp_74_reg_2570) & ap_const_lv2_0) & tmp_75_reg_2576) & ap_const_lv2_0) & tmp_76_reg_2582) & ap_const_lv2_0) & tmp_77_reg_2588) & ap_const_lv2_0) & tmp_78_reg_2594) & ap_const_lv2_0) & tmp_79_reg_2600) & ap_const_lv2_0) & tmp_80_reg_2606) & ap_const_lv2_0) & tmp_81_reg_2612) & ap_const_lv2_0) & tmp_82_reg_2618) & ap_const_lv2_0) & trunc_ln1355_reg_2624);
    trunc_ln68_4_fu_1617_p31 <= (((((((((((((((((((((((((((((ap_const_lv2_0 & tmp_84_reg_2636) & ap_const_lv2_0) & tmp_85_reg_2642) & ap_const_lv2_0) & tmp_86_reg_2648) & ap_const_lv2_0) & tmp_87_reg_2654) & ap_const_lv2_0) & tmp_88_reg_2660) & ap_const_lv2_0) & tmp_89_reg_2666) & ap_const_lv2_0) & tmp_90_reg_2672) & ap_const_lv2_0) & tmp_91_reg_2678) & ap_const_lv2_0) & tmp_92_reg_2684) & ap_const_lv2_0) & tmp_93_reg_2690) & ap_const_lv2_0) & tmp_94_reg_2696) & ap_const_lv2_0) & tmp_95_reg_2702) & ap_const_lv2_0) & tmp_96_reg_2708) & ap_const_lv2_0) & tmp_97_reg_2714) & ap_const_lv2_0) & tmp_98_reg_2720);
    trunc_ln68_fu_1790_p1 <= add_ln68_1_fu_1704_p2(4 - 1 downto 0);
    trunc_ln6_fu_588_p4 <= ret_V_fu_575_p2(16 downto 7);
    trunc_ln700_fu_2005_p1 <= p_0765_0_reg_490(1 - 1 downto 0);
    trunc_ln728_fu_2106_p1 <= tmp_V_5_reg_432(10 - 1 downto 0);
    trunc_ln7_fu_2310_p4 <= ret_V_28_fu_2251_p2(33 downto 20);
    trunc_ln9_fu_1710_p4 <= add_ln68_2_fu_1666_p2(7 downto 4);
    trunc_ln_fu_1902_p3 <= (ap_const_lv3_0 & tmp_106_reg_2763);
    wt_mem_V_4_address0 <= zext_ln620_1_fu_716_p1(13 - 1 downto 0);

    wt_mem_V_4_ce0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            wt_mem_V_4_ce0 <= ap_const_logic_1;
        else 
            wt_mem_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_V_3_fu_1806_p16 <= ((((((((((((((tmp_100_reg_2727 & ap_const_lv4_0) & tmp_101_reg_2733) & ap_const_lv4_0) & tmp_102_reg_2739) & ap_const_lv4_0) & tmp_103_reg_2745) & ap_const_lv4_0) & tmp_104_reg_2751) & ap_const_lv4_0) & tmp_105_reg_2757) & ap_const_lv4_0) & tmp_106_reg_2763) & ap_const_lv4_0) & trunc_ln68_reg_2770);
    x_V_4_fu_1873_p2 <= std_logic_vector(unsigned(zext_ln1503_fu_1863_p1) + unsigned(zext_ln68_fu_1832_p1));
    x_V_5_fu_1893_p2 <= std_logic_vector(unsigned(r_V_7_fu_1889_p1) + unsigned(x_V_4_fu_1873_p2));
    x_V_6_fu_1140_p2 <= std_logic_vector(unsigned(ret_V_27_fu_744_p2) - unsigned(zext_ln1355_fu_1136_p1));
    x_V_fu_1672_p2 <= std_logic_vector(unsigned(zext_ln1355_2_fu_1564_p1) + unsigned(zext_ln1355_1_fu_1510_p1));
    xor_ln879_3_fu_2163_p2 <= (or_ln879_fu_2157_p2 xor ap_const_lv1_1);
    xor_ln879_fu_2145_p2 <= (icmp_ln879_10_fu_2074_p2 xor ap_const_lv1_1);
    zext_ln1352_1_fu_542_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_31_fu_534_p3),3));
    zext_ln1352_fu_546_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_inputs),22));
    zext_ln1355_1_fu_1510_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_4_fu_1460_p32),63));
    zext_ln1355_2_fu_1564_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_5_fu_1514_p32),63));
    zext_ln1355_fu_1136_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_3_fu_1006_p64),64));
    zext_ln1503_1_fu_1899_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln700_reg_2775),7));
    zext_ln1503_3_fu_1955_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln3_fu_1947_p3),9));
    zext_ln1503_fu_1863_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_fu_1836_p14),61));
    zext_ln180_fu_529_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_521_p3),64));
    zext_ln215_fu_640_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0259_0_reg_444),22));
    zext_ln544_10_fu_680_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_2_fu_670_p4),64));
    zext_ln544_fu_2039_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_1_fu_2029_p4),64));
    zext_ln608_fu_607_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_32_fu_598_p4),64));
    zext_ln619_fu_735_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_36_fu_726_p4),64));
    zext_ln620_1_fu_716_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln620_fu_711_p2),64));
    zext_ln620_fu_701_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0354_0_reg_456),3));
    zext_ln68_1_fu_1694_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_99_fu_1684_p4),60));
    zext_ln68_fu_1832_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_V_3_fu_1806_p16),61));
    zext_ln700_1_fu_1681_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_98_reg_2720),4));
    zext_ln700_fu_1678_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1355_reg_2624),4));
    zext_ln703_fu_2211_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_8_reg_2819),37));
    zext_ln887_fu_685_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_mul_reg_467),14));
end behav;
