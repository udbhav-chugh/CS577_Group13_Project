// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv3x3b (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        line_buffer_m_0_0_0_V_address0,
        line_buffer_m_0_0_0_V_ce0,
        line_buffer_m_0_0_0_V_q0,
        line_buffer_m_0_0_0_V_address1,
        line_buffer_m_0_0_0_V_ce1,
        line_buffer_m_0_0_0_V_q1,
        line_buffer_m_0_0_1_V_address0,
        line_buffer_m_0_0_1_V_ce0,
        line_buffer_m_0_0_1_V_q0,
        line_buffer_m_0_0_1_V_address1,
        line_buffer_m_0_0_1_V_ce1,
        line_buffer_m_0_0_1_V_q1,
        line_buffer_m_0_1_0_0_V_address0,
        line_buffer_m_0_1_0_0_V_ce0,
        line_buffer_m_0_1_0_0_V_q0,
        line_buffer_m_0_1_0_0_V_address1,
        line_buffer_m_0_1_0_0_V_ce1,
        line_buffer_m_0_1_0_0_V_q1,
        line_buffer_m_0_1_1_0_V_address0,
        line_buffer_m_0_1_1_0_V_ce0,
        line_buffer_m_0_1_1_0_V_q0,
        line_buffer_m_0_1_1_0_V_address1,
        line_buffer_m_0_1_1_0_V_ce1,
        line_buffer_m_0_1_1_0_V_q1,
        line_buffer_m_1_0_0_V_address0,
        line_buffer_m_1_0_0_V_ce0,
        line_buffer_m_1_0_0_V_q0,
        line_buffer_m_1_0_0_V_address1,
        line_buffer_m_1_0_0_V_ce1,
        line_buffer_m_1_0_0_V_q1,
        line_buffer_m_1_0_1_V_address0,
        line_buffer_m_1_0_1_V_ce0,
        line_buffer_m_1_0_1_V_q0,
        line_buffer_m_1_0_1_V_address1,
        line_buffer_m_1_0_1_V_ce1,
        line_buffer_m_1_0_1_V_q1,
        line_buffer_m_1_1_0_0_V_address0,
        line_buffer_m_1_1_0_0_V_ce0,
        line_buffer_m_1_1_0_0_V_q0,
        line_buffer_m_1_1_0_0_V_address1,
        line_buffer_m_1_1_0_0_V_ce1,
        line_buffer_m_1_1_0_0_V_q1,
        line_buffer_m_1_1_1_0_V_address0,
        line_buffer_m_1_1_1_0_V_ce0,
        line_buffer_m_1_1_1_0_V_q0,
        line_buffer_m_1_1_1_0_V_address1,
        line_buffer_m_1_1_1_0_V_ce1,
        line_buffer_m_1_1_1_0_V_q1,
        conv_params_m_0_0_s,
        conv_params_m_0_1_s,
        conv_params_m_0_2_s,
        conv_params_m_1_0_s,
        conv_params_m_1_1_s,
        conv_params_m_1_2_s,
        conv_params_m_2_0_s,
        conv_params_m_2_1_s,
        conv_params_m_2_2_s,
        bank_V,
        cc_V,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
output  [5:0] line_buffer_m_0_0_0_V_address0;
output   line_buffer_m_0_0_0_V_ce0;
input  [1:0] line_buffer_m_0_0_0_V_q0;
output  [5:0] line_buffer_m_0_0_0_V_address1;
output   line_buffer_m_0_0_0_V_ce1;
input  [1:0] line_buffer_m_0_0_0_V_q1;
output  [5:0] line_buffer_m_0_0_1_V_address0;
output   line_buffer_m_0_0_1_V_ce0;
input  [1:0] line_buffer_m_0_0_1_V_q0;
output  [5:0] line_buffer_m_0_0_1_V_address1;
output   line_buffer_m_0_0_1_V_ce1;
input  [1:0] line_buffer_m_0_0_1_V_q1;
output  [4:0] line_buffer_m_0_1_0_0_V_address0;
output   line_buffer_m_0_1_0_0_V_ce0;
input  [1:0] line_buffer_m_0_1_0_0_V_q0;
output  [4:0] line_buffer_m_0_1_0_0_V_address1;
output   line_buffer_m_0_1_0_0_V_ce1;
input  [1:0] line_buffer_m_0_1_0_0_V_q1;
output  [4:0] line_buffer_m_0_1_1_0_V_address0;
output   line_buffer_m_0_1_1_0_V_ce0;
input  [1:0] line_buffer_m_0_1_1_0_V_q0;
output  [4:0] line_buffer_m_0_1_1_0_V_address1;
output   line_buffer_m_0_1_1_0_V_ce1;
input  [1:0] line_buffer_m_0_1_1_0_V_q1;
output  [5:0] line_buffer_m_1_0_0_V_address0;
output   line_buffer_m_1_0_0_V_ce0;
input  [1:0] line_buffer_m_1_0_0_V_q0;
output  [5:0] line_buffer_m_1_0_0_V_address1;
output   line_buffer_m_1_0_0_V_ce1;
input  [1:0] line_buffer_m_1_0_0_V_q1;
output  [5:0] line_buffer_m_1_0_1_V_address0;
output   line_buffer_m_1_0_1_V_ce0;
input  [1:0] line_buffer_m_1_0_1_V_q0;
output  [5:0] line_buffer_m_1_0_1_V_address1;
output   line_buffer_m_1_0_1_V_ce1;
input  [1:0] line_buffer_m_1_0_1_V_q1;
output  [4:0] line_buffer_m_1_1_0_0_V_address0;
output   line_buffer_m_1_1_0_0_V_ce0;
input  [1:0] line_buffer_m_1_1_0_0_V_q0;
output  [4:0] line_buffer_m_1_1_0_0_V_address1;
output   line_buffer_m_1_1_0_0_V_ce1;
input  [1:0] line_buffer_m_1_1_0_0_V_q1;
output  [4:0] line_buffer_m_1_1_1_0_V_address0;
output   line_buffer_m_1_1_1_0_V_ce0;
input  [1:0] line_buffer_m_1_1_1_0_V_q0;
output  [4:0] line_buffer_m_1_1_1_0_V_address1;
output   line_buffer_m_1_1_1_0_V_ce1;
input  [1:0] line_buffer_m_1_1_1_0_V_q1;
input  [0:0] conv_params_m_0_0_s;
input  [0:0] conv_params_m_0_1_s;
input  [0:0] conv_params_m_0_2_s;
input  [0:0] conv_params_m_1_0_s;
input  [0:0] conv_params_m_1_1_s;
input  [0:0] conv_params_m_1_2_s;
input  [0:0] conv_params_m_2_0_s;
input  [0:0] conv_params_m_2_1_s;
input  [0:0] conv_params_m_2_2_s;
input  [3:0] bank_V;
input  [3:0] cc_V;
output  [4:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] line_buffer_m_0_0_0_V_address0;
reg line_buffer_m_0_0_0_V_ce0;
reg[5:0] line_buffer_m_0_0_0_V_address1;
reg line_buffer_m_0_0_0_V_ce1;
reg[5:0] line_buffer_m_0_0_1_V_address0;
reg line_buffer_m_0_0_1_V_ce0;
reg[5:0] line_buffer_m_0_0_1_V_address1;
reg line_buffer_m_0_0_1_V_ce1;
reg[4:0] line_buffer_m_0_1_0_0_V_address0;
reg line_buffer_m_0_1_0_0_V_ce0;
reg line_buffer_m_0_1_0_0_V_ce1;
reg[4:0] line_buffer_m_0_1_1_0_V_address0;
reg line_buffer_m_0_1_1_0_V_ce0;
reg line_buffer_m_0_1_1_0_V_ce1;
reg[5:0] line_buffer_m_1_0_0_V_address0;
reg line_buffer_m_1_0_0_V_ce0;
reg[5:0] line_buffer_m_1_0_0_V_address1;
reg line_buffer_m_1_0_0_V_ce1;
reg[5:0] line_buffer_m_1_0_1_V_address0;
reg line_buffer_m_1_0_1_V_ce0;
reg[5:0] line_buffer_m_1_0_1_V_address1;
reg line_buffer_m_1_0_1_V_ce1;
reg[4:0] line_buffer_m_1_1_0_0_V_address0;
reg line_buffer_m_1_1_0_0_V_ce0;
reg line_buffer_m_1_1_0_0_V_ce1;
reg[4:0] line_buffer_m_1_1_1_0_V_address0;
reg line_buffer_m_1_1_1_0_V_ce0;
reg line_buffer_m_1_1_1_0_V_ce1;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire   [0:0] trunc_ln79_fu_516_p1;
reg   [0:0] trunc_ln79_reg_1437;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [2:0] tmp_fu_534_p3;
reg   [2:0] tmp_reg_1444;
wire   [5:0] add_ln79_fu_558_p2;
reg   [5:0] add_ln79_reg_1449;
wire   [4:0] add_ln79_2_fu_576_p2;
reg   [4:0] add_ln79_2_reg_1454;
wire   [0:0] trunc_ln79_1_fu_582_p1;
reg   [0:0] trunc_ln79_1_reg_1459;
wire   [1:0] tmp_411_fu_586_p4;
reg   [1:0] tmp_411_reg_1466;
wire   [2:0] tmp_414_fu_638_p4;
reg   [2:0] tmp_414_reg_1511;
reg   [2:0] tmp_417_reg_1556;
wire   [6:0] add_ln79_1_fu_723_p2;
reg   [6:0] add_ln79_1_reg_1563;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
wire   [0:0] and_ln79_fu_751_p2;
reg   [0:0] and_ln79_reg_1589;
wire   [0:0] and_ln79_1_fu_769_p2;
reg   [0:0] and_ln79_1_reg_1598;
wire   [0:0] and_ln79_2_fu_782_p2;
reg   [0:0] and_ln79_2_reg_1607;
reg   [1:0] tmp_421_fu_974_p4;
reg   [1:0] tmp_421_reg_1657;
reg   [1:0] line_buffer_m_1_1_47_reg_1662;
wire   [1:0] select_ln79_13_fu_992_p3;
reg   [1:0] select_ln79_13_reg_1667;
wire   [2:0] add_ln700_fu_1000_p2;
reg   [2:0] add_ln700_reg_1672;
reg   [0:0] conv_params_m_0_2_3_reg_1677;
reg   [0:0] conv_params_m_0_1_3_reg_1682;
reg   [0:0] conv_params_m_0_0_3_reg_1687;
reg   [1:0] line_buffer_m_1_0_97_reg_1732;
wire   [1:0] select_ln79_19_fu_1209_p3;
reg   [1:0] select_ln79_19_reg_1737;
wire   [3:0] add_ln700_4_fu_1229_p2;
reg   [3:0] add_ln700_4_reg_1742;
wire   [2:0] add_ln700_5_fu_1235_p2;
reg   [2:0] add_ln700_5_reg_1747;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage2_subdone;
reg   [0:0] ap_port_reg_conv_params_m_0_0_s;
reg   [0:0] ap_port_reg_conv_params_m_0_1_s;
reg   [0:0] ap_port_reg_conv_params_m_0_2_s;
reg   [0:0] ap_port_reg_conv_params_m_1_0_s;
reg   [0:0] ap_port_reg_conv_params_m_1_1_s;
reg   [0:0] ap_port_reg_conv_params_m_1_2_s;
reg   [0:0] ap_port_reg_conv_params_m_2_0_s;
reg   [0:0] ap_port_reg_conv_params_m_2_1_s;
reg   [0:0] ap_port_reg_conv_params_m_2_2_s;
wire   [63:0] zext_ln79_7_fu_610_p1;
wire   [63:0] zext_ln79_9_fu_624_p1;
wire   [63:0] zext_ln79_13_fu_662_p1;
wire   [63:0] zext_ln79_15_fu_676_p1;
wire   [63:0] zext_ln79_8_fu_738_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln79_19_fu_905_p1;
wire   [63:0] zext_ln79_21_fu_918_p1;
wire   [63:0] zext_ln79_14_fu_1014_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln79_20_fu_1030_p1;
wire   [1:0] lshr_ln_fu_520_p4;
wire   [4:0] tmp_7_fu_542_p3;
wire   [5:0] zext_ln79_1_fu_550_p1;
wire   [5:0] zext_ln79_2_fu_554_p1;
wire   [3:0] tmp_10_fu_564_p3;
wire   [4:0] zext_ln79_3_fu_572_p1;
wire   [4:0] zext_ln79_fu_530_p1;
wire   [5:0] zext_ln79_6_fu_600_p1;
wire   [5:0] add_ln79_3_fu_604_p2;
wire   [4:0] zext_ln79_4_fu_596_p1;
wire   [4:0] add_ln79_5_fu_618_p2;
wire   [3:0] add_ln1353_fu_632_p2;
wire   [5:0] zext_ln79_12_fu_652_p1;
wire   [5:0] add_ln79_6_fu_656_p2;
wire   [4:0] zext_ln79_10_fu_648_p1;
wire   [4:0] add_ln79_8_fu_670_p2;
wire   [3:0] add_ln1353_1_fu_684_p2;
wire   [2:0] or_ln79_fu_700_p2;
wire   [6:0] p_shl1_cast_fu_713_p4;
wire   [6:0] tmp_9_cast_fu_705_p3;
wire   [6:0] zext_ln79_5_fu_729_p1;
wire   [6:0] add_ln79_4_fu_732_p2;
wire   [0:0] xor_ln79_fu_746_p2;
wire   [0:0] xor_ln79_1_fu_764_p2;
wire   [1:0] select_ln79_fu_756_p3;
wire   [1:0] select_ln79_1_fu_774_p3;
wire   [1:0] select_ln79_2_fu_786_p3;
wire   [0:0] trunc_ln215_fu_794_p1;
wire   [0:0] and_ln1355_fu_798_p2;
wire   [0:0] tmp_412_fu_804_p3;
wire   [0:0] xor_ln841_fu_812_p2;
reg   [1:0] tmp_413_fu_818_p4;
wire   [1:0] select_ln79_3_fu_832_p3;
wire   [1:0] select_ln79_4_fu_840_p3;
wire   [1:0] select_ln79_5_fu_848_p3;
wire   [0:0] trunc_ln215_1_fu_856_p1;
wire   [0:0] and_ln1355_1_fu_860_p2;
wire   [0:0] tmp_415_fu_866_p3;
wire   [0:0] xor_ln841_1_fu_874_p2;
reg   [1:0] tmp_416_fu_880_p4;
wire   [5:0] zext_ln79_18_fu_897_p1;
wire   [5:0] add_ln79_9_fu_900_p2;
wire   [4:0] zext_ln79_16_fu_894_p1;
wire   [4:0] add_ln79_11_fu_913_p2;
wire   [1:0] select_ln79_9_fu_926_p3;
wire   [1:0] select_ln79_10_fu_934_p3;
wire   [1:0] select_ln79_11_fu_942_p3;
wire   [0:0] trunc_ln215_3_fu_950_p1;
wire   [0:0] and_ln1355_3_fu_954_p2;
wire   [0:0] tmp_420_fu_960_p3;
wire   [0:0] xor_ln841_3_fu_968_p2;
wire   [1:0] select_ln79_12_fu_984_p3;
wire  signed [2:0] sext_ln1353_fu_828_p1;
wire  signed [2:0] sext_ln1353_1_fu_890_p1;
wire   [6:0] zext_ln79_11_fu_1006_p1;
wire   [6:0] add_ln79_7_fu_1009_p2;
wire   [6:0] zext_ln79_17_fu_1022_p1;
wire   [6:0] add_ln79_10_fu_1025_p2;
wire   [1:0] select_ln79_6_fu_1038_p3;
wire   [1:0] select_ln79_7_fu_1045_p3;
wire   [1:0] select_ln79_8_fu_1052_p3;
wire   [0:0] trunc_ln215_2_fu_1059_p1;
wire   [0:0] and_ln1355_2_fu_1063_p2;
wire   [0:0] tmp_418_fu_1069_p3;
wire   [0:0] xor_ln841_2_fu_1077_p2;
reg   [1:0] tmp_419_fu_1083_p4;
wire   [1:0] select_ln79_14_fu_1100_p3;
wire   [0:0] trunc_ln215_4_fu_1105_p1;
wire   [0:0] and_ln1355_4_fu_1109_p2;
wire   [0:0] tmp_422_fu_1115_p3;
wire   [0:0] xor_ln841_4_fu_1123_p2;
reg   [1:0] tmp_423_fu_1129_p4;
wire   [1:0] select_ln79_15_fu_1143_p3;
wire   [1:0] select_ln79_16_fu_1150_p3;
wire   [1:0] select_ln79_17_fu_1157_p3;
wire   [0:0] trunc_ln215_5_fu_1164_p1;
wire   [0:0] and_ln1355_5_fu_1168_p2;
wire   [0:0] tmp_424_fu_1174_p3;
wire   [0:0] xor_ln841_5_fu_1182_p2;
reg   [1:0] tmp_425_fu_1188_p4;
wire   [1:0] select_ln79_18_fu_1202_p3;
wire  signed [2:0] sext_ln79_fu_1093_p1;
wire  signed [2:0] sext_ln79_1_fu_1097_p1;
wire   [2:0] add_ln700_3_fu_1219_p2;
wire  signed [3:0] sext_ln700_2_fu_1225_p1;
wire  signed [3:0] sext_ln700_1_fu_1216_p1;
wire  signed [2:0] sext_ln79_2_fu_1139_p1;
wire  signed [2:0] sext_ln79_3_fu_1198_p1;
wire   [1:0] select_ln79_20_fu_1241_p3;
wire   [0:0] trunc_ln215_6_fu_1246_p1;
wire   [0:0] and_ln1355_6_fu_1250_p2;
wire   [0:0] tmp_426_fu_1255_p3;
wire   [0:0] xor_ln841_6_fu_1263_p2;
reg   [1:0] tmp_427_fu_1269_p4;
wire   [1:0] select_ln79_21_fu_1283_p3;
wire   [1:0] select_ln79_22_fu_1290_p3;
wire   [1:0] select_ln79_23_fu_1297_p3;
wire   [0:0] trunc_ln215_7_fu_1304_p1;
wire   [0:0] and_ln1355_7_fu_1308_p2;
wire   [0:0] tmp_428_fu_1313_p3;
wire   [0:0] xor_ln841_7_fu_1321_p2;
reg   [1:0] tmp_429_fu_1327_p4;
wire   [1:0] select_ln79_24_fu_1341_p3;
wire   [1:0] select_ln79_25_fu_1348_p3;
wire   [1:0] select_ln79_26_fu_1355_p3;
wire   [0:0] trunc_ln215_8_fu_1362_p1;
wire   [0:0] and_ln1355_8_fu_1366_p2;
wire   [0:0] tmp_430_fu_1371_p3;
wire   [0:0] xor_ln841_8_fu_1379_p2;
reg   [1:0] tmp_431_fu_1385_p4;
wire  signed [2:0] sext_ln79_5_fu_1337_p1;
wire  signed [2:0] sext_ln700_fu_1395_p1;
wire   [2:0] add_ln700_6_fu_1405_p2;
wire  signed [3:0] sext_ln700_5_fu_1411_p1;
wire  signed [3:0] sext_ln79_4_fu_1279_p1;
wire   [3:0] add_ln700_7_fu_1415_p2;
wire  signed [4:0] sext_ln700_6_fu_1421_p1;
wire  signed [4:0] sext_ln700_4_fu_1402_p1;
wire   [4:0] add_ln700_8_fu_1425_p2;
wire  signed [4:0] sext_ln700_3_fu_1399_p1;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
reg    ap_reset_start_pp0;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage1_subdone;
wire    ap_enable_pp0;
reg    ap_condition_970;
reg    ap_condition_976;
reg    ap_condition_980;
reg    ap_condition_985;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln700_4_reg_1742 <= add_ln700_4_fu_1229_p2;
        add_ln700_5_reg_1747 <= add_ln700_5_fu_1235_p2;
        conv_params_m_0_0_3_reg_1687 <= ap_port_reg_conv_params_m_0_0_s;
        conv_params_m_0_1_3_reg_1682 <= ap_port_reg_conv_params_m_0_1_s;
        conv_params_m_0_2_3_reg_1677 <= ap_port_reg_conv_params_m_0_2_s;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln700_reg_1672 <= add_ln700_fu_1000_p2;
        add_ln79_1_reg_1563[6 : 1] <= add_ln79_1_fu_723_p2[6 : 1];
        and_ln79_1_reg_1598 <= and_ln79_1_fu_769_p2;
        and_ln79_2_reg_1607 <= and_ln79_2_fu_782_p2;
        and_ln79_reg_1589 <= and_ln79_fu_751_p2;
        select_ln79_13_reg_1667 <= select_ln79_13_fu_992_p3;
        tmp_421_reg_1657 <= tmp_421_fu_974_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln79_2_reg_1454 <= add_ln79_2_fu_576_p2;
        add_ln79_reg_1449[5 : 1] <= add_ln79_fu_558_p2[5 : 1];
        tmp_411_reg_1466 <= {{cc_V[2:1]}};
        tmp_414_reg_1511 <= {{add_ln1353_fu_632_p2[3:1]}};
        tmp_417_reg_1556 <= {{add_ln1353_1_fu_684_p2[3:1]}};
        tmp_reg_1444[2 : 1] <= tmp_fu_534_p3[2 : 1];
        trunc_ln79_1_reg_1459 <= trunc_ln79_1_fu_582_p1;
        trunc_ln79_reg_1437 <= trunc_ln79_fu_516_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_port_reg_conv_params_m_0_0_s <= conv_params_m_0_0_s;
        ap_port_reg_conv_params_m_0_1_s <= conv_params_m_0_1_s;
        ap_port_reg_conv_params_m_0_2_s <= conv_params_m_0_2_s;
        ap_port_reg_conv_params_m_1_0_s <= conv_params_m_1_0_s;
        ap_port_reg_conv_params_m_1_1_s <= conv_params_m_1_1_s;
        ap_port_reg_conv_params_m_1_2_s <= conv_params_m_1_2_s;
        ap_port_reg_conv_params_m_2_0_s <= conv_params_m_2_0_s;
        ap_port_reg_conv_params_m_2_1_s <= conv_params_m_2_1_s;
        ap_port_reg_conv_params_m_2_2_s <= conv_params_m_2_2_s;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        line_buffer_m_1_0_97_reg_1732 <= line_buffer_m_1_0_1_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        line_buffer_m_1_1_47_reg_1662 <= line_buffer_m_1_1_0_0_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage2_11001) & (1'd0 == and_ln79_2_reg_1607) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        select_ln79_19_reg_1737 <= select_ln79_19_fu_1209_p3;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0_0to0 == 1'b1) & (ap_start == 1'b1))) begin
        ap_reset_start_pp0 = 1'b1;
    end else begin
        ap_reset_start_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_976)) begin
            line_buffer_m_0_0_0_V_address0 = zext_ln79_20_fu_1030_p1;
        end else if ((1'b1 == ap_condition_970)) begin
            line_buffer_m_0_0_0_V_address0 = zext_ln79_14_fu_1014_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buffer_m_0_0_0_V_address0 = zext_ln79_19_fu_905_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            line_buffer_m_0_0_0_V_address0 = zext_ln79_7_fu_610_p1;
        end else begin
            line_buffer_m_0_0_0_V_address0 = 'bx;
        end
    end else begin
        line_buffer_m_0_0_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buffer_m_0_0_0_V_address1 = zext_ln79_8_fu_738_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            line_buffer_m_0_0_0_V_address1 = zext_ln79_13_fu_662_p1;
        end else begin
            line_buffer_m_0_0_0_V_address1 = 'bx;
        end
    end else begin
        line_buffer_m_0_0_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage2_11001) & (1'd0 == and_ln79_2_reg_1607) & (1'd0 == and_ln79_1_reg_1598) & (1'd0 == and_ln79_reg_1589) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage2_11001) & (1'd0 == and_ln79_2_reg_1607) & (1'd0 == and_ln79_1_reg_1598) & (1'd1 == and_ln79_reg_1589) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        line_buffer_m_0_0_0_V_ce0 = 1'b1;
    end else begin
        line_buffer_m_0_0_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        line_buffer_m_0_0_0_V_ce1 = 1'b1;
    end else begin
        line_buffer_m_0_0_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_970)) begin
            line_buffer_m_0_0_1_V_address0 = zext_ln79_20_fu_1030_p1;
        end else if ((1'b1 == ap_condition_976)) begin
            line_buffer_m_0_0_1_V_address0 = zext_ln79_14_fu_1014_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buffer_m_0_0_1_V_address0 = zext_ln79_19_fu_905_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            line_buffer_m_0_0_1_V_address0 = zext_ln79_7_fu_610_p1;
        end else begin
            line_buffer_m_0_0_1_V_address0 = 'bx;
        end
    end else begin
        line_buffer_m_0_0_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buffer_m_0_0_1_V_address1 = zext_ln79_8_fu_738_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            line_buffer_m_0_0_1_V_address1 = zext_ln79_13_fu_662_p1;
        end else begin
            line_buffer_m_0_0_1_V_address1 = 'bx;
        end
    end else begin
        line_buffer_m_0_0_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage2_11001) & (1'd0 == and_ln79_2_reg_1607) & (1'd0 == and_ln79_1_reg_1598) & (1'd0 == and_ln79_reg_1589) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage2_11001) & (1'd0 == and_ln79_2_reg_1607) & (1'd0 == and_ln79_1_reg_1598) & (1'd1 == and_ln79_reg_1589) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        line_buffer_m_0_0_1_V_ce0 = 1'b1;
    end else begin
        line_buffer_m_0_0_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        line_buffer_m_0_0_1_V_ce1 = 1'b1;
    end else begin
        line_buffer_m_0_0_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buffer_m_0_1_0_0_V_address0 = zext_ln79_21_fu_918_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            line_buffer_m_0_1_0_0_V_address0 = zext_ln79_9_fu_624_p1;
        end else begin
            line_buffer_m_0_1_0_0_V_address0 = 'bx;
        end
    end else begin
        line_buffer_m_0_1_0_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        line_buffer_m_0_1_0_0_V_ce0 = 1'b1;
    end else begin
        line_buffer_m_0_1_0_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_buffer_m_0_1_0_0_V_ce1 = 1'b1;
    end else begin
        line_buffer_m_0_1_0_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buffer_m_0_1_1_0_V_address0 = zext_ln79_21_fu_918_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            line_buffer_m_0_1_1_0_V_address0 = zext_ln79_9_fu_624_p1;
        end else begin
            line_buffer_m_0_1_1_0_V_address0 = 'bx;
        end
    end else begin
        line_buffer_m_0_1_1_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        line_buffer_m_0_1_1_0_V_ce0 = 1'b1;
    end else begin
        line_buffer_m_0_1_1_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_buffer_m_0_1_1_0_V_ce1 = 1'b1;
    end else begin
        line_buffer_m_0_1_1_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_985)) begin
            line_buffer_m_1_0_0_V_address0 = zext_ln79_20_fu_1030_p1;
        end else if ((1'b1 == ap_condition_980)) begin
            line_buffer_m_1_0_0_V_address0 = zext_ln79_14_fu_1014_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buffer_m_1_0_0_V_address0 = zext_ln79_19_fu_905_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            line_buffer_m_1_0_0_V_address0 = zext_ln79_7_fu_610_p1;
        end else begin
            line_buffer_m_1_0_0_V_address0 = 'bx;
        end
    end else begin
        line_buffer_m_1_0_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buffer_m_1_0_0_V_address1 = zext_ln79_8_fu_738_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            line_buffer_m_1_0_0_V_address1 = zext_ln79_13_fu_662_p1;
        end else begin
            line_buffer_m_1_0_0_V_address1 = 'bx;
        end
    end else begin
        line_buffer_m_1_0_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage2_11001) & (1'd1 == and_ln79_2_reg_1607) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage2_11001) & (1'd0 == and_ln79_2_reg_1607) & (1'd1 == and_ln79_1_reg_1598) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        line_buffer_m_1_0_0_V_ce0 = 1'b1;
    end else begin
        line_buffer_m_1_0_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        line_buffer_m_1_0_0_V_ce1 = 1'b1;
    end else begin
        line_buffer_m_1_0_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_980)) begin
            line_buffer_m_1_0_1_V_address0 = zext_ln79_20_fu_1030_p1;
        end else if ((1'b1 == ap_condition_985)) begin
            line_buffer_m_1_0_1_V_address0 = zext_ln79_14_fu_1014_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buffer_m_1_0_1_V_address0 = zext_ln79_19_fu_905_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            line_buffer_m_1_0_1_V_address0 = zext_ln79_7_fu_610_p1;
        end else begin
            line_buffer_m_1_0_1_V_address0 = 'bx;
        end
    end else begin
        line_buffer_m_1_0_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buffer_m_1_0_1_V_address1 = zext_ln79_8_fu_738_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            line_buffer_m_1_0_1_V_address1 = zext_ln79_13_fu_662_p1;
        end else begin
            line_buffer_m_1_0_1_V_address1 = 'bx;
        end
    end else begin
        line_buffer_m_1_0_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage2_11001) & (1'd1 == and_ln79_2_reg_1607) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage2_11001) & (1'd0 == and_ln79_2_reg_1607) & (1'd1 == and_ln79_1_reg_1598) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        line_buffer_m_1_0_1_V_ce0 = 1'b1;
    end else begin
        line_buffer_m_1_0_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        line_buffer_m_1_0_1_V_ce1 = 1'b1;
    end else begin
        line_buffer_m_1_0_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buffer_m_1_1_0_0_V_address0 = zext_ln79_21_fu_918_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            line_buffer_m_1_1_0_0_V_address0 = zext_ln79_9_fu_624_p1;
        end else begin
            line_buffer_m_1_1_0_0_V_address0 = 'bx;
        end
    end else begin
        line_buffer_m_1_1_0_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        line_buffer_m_1_1_0_0_V_ce0 = 1'b1;
    end else begin
        line_buffer_m_1_1_0_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_buffer_m_1_1_0_0_V_ce1 = 1'b1;
    end else begin
        line_buffer_m_1_1_0_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buffer_m_1_1_1_0_V_address0 = zext_ln79_21_fu_918_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            line_buffer_m_1_1_1_0_V_address0 = zext_ln79_9_fu_624_p1;
        end else begin
            line_buffer_m_1_1_1_0_V_address0 = 'bx;
        end
    end else begin
        line_buffer_m_1_1_1_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        line_buffer_m_1_1_1_0_V_ce0 = 1'b1;
    end else begin
        line_buffer_m_1_1_1_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_buffer_m_1_1_1_0_V_ce1 = 1'b1;
    end else begin
        line_buffer_m_1_1_1_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_reset_start_pp0 == 1'b1)) & (ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_reset_start_pp0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_reset_idle_pp0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1353_1_fu_684_p2 = (4'd2 + cc_V);

assign add_ln1353_fu_632_p2 = (4'd1 + cc_V);

assign add_ln700_3_fu_1219_p2 = ($signed(sext_ln79_fu_1093_p1) + $signed(sext_ln79_1_fu_1097_p1));

assign add_ln700_4_fu_1229_p2 = ($signed(sext_ln700_2_fu_1225_p1) + $signed(sext_ln700_1_fu_1216_p1));

assign add_ln700_5_fu_1235_p2 = ($signed(sext_ln79_2_fu_1139_p1) + $signed(sext_ln79_3_fu_1198_p1));

assign add_ln700_6_fu_1405_p2 = ($signed(sext_ln79_5_fu_1337_p1) + $signed(sext_ln700_fu_1395_p1));

assign add_ln700_7_fu_1415_p2 = ($signed(sext_ln700_5_fu_1411_p1) + $signed(sext_ln79_4_fu_1279_p1));

assign add_ln700_8_fu_1425_p2 = ($signed(sext_ln700_6_fu_1421_p1) + $signed(sext_ln700_4_fu_1402_p1));

assign add_ln700_fu_1000_p2 = ($signed(sext_ln1353_fu_828_p1) + $signed(sext_ln1353_1_fu_890_p1));

assign add_ln79_10_fu_1025_p2 = (zext_ln79_17_fu_1022_p1 + add_ln79_1_reg_1563);

assign add_ln79_11_fu_913_p2 = (zext_ln79_16_fu_894_p1 + add_ln79_2_reg_1454);

assign add_ln79_1_fu_723_p2 = (p_shl1_cast_fu_713_p4 + tmp_9_cast_fu_705_p3);

assign add_ln79_2_fu_576_p2 = (zext_ln79_3_fu_572_p1 + zext_ln79_fu_530_p1);

assign add_ln79_3_fu_604_p2 = (zext_ln79_6_fu_600_p1 + add_ln79_fu_558_p2);

assign add_ln79_4_fu_732_p2 = (zext_ln79_5_fu_729_p1 + add_ln79_1_fu_723_p2);

assign add_ln79_5_fu_618_p2 = (zext_ln79_4_fu_596_p1 + add_ln79_2_fu_576_p2);

assign add_ln79_6_fu_656_p2 = (zext_ln79_12_fu_652_p1 + add_ln79_fu_558_p2);

assign add_ln79_7_fu_1009_p2 = (zext_ln79_11_fu_1006_p1 + add_ln79_1_reg_1563);

assign add_ln79_8_fu_670_p2 = (zext_ln79_10_fu_648_p1 + add_ln79_2_fu_576_p2);

assign add_ln79_9_fu_900_p2 = (zext_ln79_18_fu_897_p1 + add_ln79_reg_1449);

assign add_ln79_fu_558_p2 = (zext_ln79_1_fu_550_p1 + zext_ln79_2_fu_554_p1);

assign and_ln1355_1_fu_860_p2 = (trunc_ln215_1_fu_856_p1 & ap_port_reg_conv_params_m_2_1_s);

assign and_ln1355_2_fu_1063_p2 = (trunc_ln215_2_fu_1059_p1 & ap_port_reg_conv_params_m_2_0_s);

assign and_ln1355_3_fu_954_p2 = (trunc_ln215_3_fu_950_p1 & ap_port_reg_conv_params_m_1_2_s);

assign and_ln1355_4_fu_1109_p2 = (trunc_ln215_4_fu_1105_p1 & ap_port_reg_conv_params_m_1_1_s);

assign and_ln1355_5_fu_1168_p2 = (trunc_ln215_5_fu_1164_p1 & ap_port_reg_conv_params_m_1_0_s);

assign and_ln1355_6_fu_1250_p2 = (trunc_ln215_6_fu_1246_p1 & conv_params_m_0_2_3_reg_1677);

assign and_ln1355_7_fu_1308_p2 = (trunc_ln215_7_fu_1304_p1 & conv_params_m_0_1_3_reg_1682);

assign and_ln1355_8_fu_1366_p2 = (trunc_ln215_8_fu_1362_p1 & conv_params_m_0_0_3_reg_1687);

assign and_ln1355_fu_798_p2 = (trunc_ln215_fu_794_p1 & ap_port_reg_conv_params_m_2_2_s);

assign and_ln79_1_fu_769_p2 = (xor_ln79_1_fu_764_p2 & trunc_ln79_reg_1437);

assign and_ln79_2_fu_782_p2 = (trunc_ln79_reg_1437 & trunc_ln79_1_reg_1459);

assign and_ln79_fu_751_p2 = (xor_ln79_fu_746_p2 & trunc_ln79_1_reg_1459);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_subdone = (1'b0 == ap_ce);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_970 = ((1'b0 == ap_block_pp0_stage2) & (1'd0 == and_ln79_2_reg_1607) & (1'd0 == and_ln79_1_reg_1598) & (1'd1 == and_ln79_reg_1589) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

always @ (*) begin
    ap_condition_976 = ((1'b0 == ap_block_pp0_stage2) & (1'd0 == and_ln79_2_reg_1607) & (1'd0 == and_ln79_1_reg_1598) & (1'd0 == and_ln79_reg_1589) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

always @ (*) begin
    ap_condition_980 = ((1'b0 == ap_block_pp0_stage2) & (1'd1 == and_ln79_2_reg_1607) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

always @ (*) begin
    ap_condition_985 = ((1'b0 == ap_block_pp0_stage2) & (1'd0 == and_ln79_2_reg_1607) & (1'd1 == and_ln79_1_reg_1598) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_return = ($signed(add_ln700_8_fu_1425_p2) + $signed(sext_ln700_3_fu_1399_p1));

assign line_buffer_m_0_1_0_0_V_address1 = zext_ln79_15_fu_676_p1;

assign line_buffer_m_0_1_1_0_V_address1 = zext_ln79_15_fu_676_p1;

assign line_buffer_m_1_1_0_0_V_address1 = zext_ln79_15_fu_676_p1;

assign line_buffer_m_1_1_1_0_V_address1 = zext_ln79_15_fu_676_p1;

assign lshr_ln_fu_520_p4 = {{bank_V[2:1]}};

assign or_ln79_fu_700_p2 = (tmp_reg_1444 | 3'd1);

assign p_shl1_cast_fu_713_p4 = {{{{2'd0}, {or_ln79_fu_700_p2}}}, {2'd0}};

assign select_ln79_10_fu_934_p3 = ((and_ln79_1_fu_769_p2[0:0] === 1'b1) ? line_buffer_m_1_1_0_0_V_q0 : select_ln79_9_fu_926_p3);

assign select_ln79_11_fu_942_p3 = ((and_ln79_2_fu_782_p2[0:0] === 1'b1) ? line_buffer_m_1_1_1_0_V_q0 : select_ln79_10_fu_934_p3);

assign select_ln79_12_fu_984_p3 = ((and_ln79_fu_751_p2[0:0] === 1'b1) ? line_buffer_m_0_1_0_0_V_q1 : line_buffer_m_0_1_1_0_V_q1);

assign select_ln79_13_fu_992_p3 = ((and_ln79_1_fu_769_p2[0:0] === 1'b1) ? line_buffer_m_1_1_1_0_V_q1 : select_ln79_12_fu_984_p3);

assign select_ln79_14_fu_1100_p3 = ((and_ln79_2_reg_1607[0:0] === 1'b1) ? line_buffer_m_1_1_47_reg_1662 : select_ln79_13_reg_1667);

assign select_ln79_15_fu_1143_p3 = ((and_ln79_reg_1589[0:0] === 1'b1) ? line_buffer_m_0_1_1_0_V_q0 : line_buffer_m_0_1_0_0_V_q0);

assign select_ln79_16_fu_1150_p3 = ((and_ln79_1_reg_1598[0:0] === 1'b1) ? line_buffer_m_1_1_0_0_V_q0 : select_ln79_15_fu_1143_p3);

assign select_ln79_17_fu_1157_p3 = ((and_ln79_2_reg_1607[0:0] === 1'b1) ? line_buffer_m_1_1_1_0_V_q0 : select_ln79_16_fu_1150_p3);

assign select_ln79_18_fu_1202_p3 = ((and_ln79_reg_1589[0:0] === 1'b1) ? line_buffer_m_0_0_1_V_q1 : line_buffer_m_0_0_0_V_q1);

assign select_ln79_19_fu_1209_p3 = ((and_ln79_1_reg_1598[0:0] === 1'b1) ? line_buffer_m_1_0_0_V_q1 : select_ln79_18_fu_1202_p3);

assign select_ln79_1_fu_774_p3 = ((and_ln79_1_fu_769_p2[0:0] === 1'b1) ? line_buffer_m_1_0_0_V_q0 : select_ln79_fu_756_p3);

assign select_ln79_20_fu_1241_p3 = ((and_ln79_2_reg_1607[0:0] === 1'b1) ? line_buffer_m_1_0_97_reg_1732 : select_ln79_19_reg_1737);

assign select_ln79_21_fu_1283_p3 = ((and_ln79_reg_1589[0:0] === 1'b1) ? line_buffer_m_0_0_0_V_q0 : line_buffer_m_0_0_1_V_q0);

assign select_ln79_22_fu_1290_p3 = ((and_ln79_1_reg_1598[0:0] === 1'b1) ? line_buffer_m_1_0_1_V_q0 : select_ln79_21_fu_1283_p3);

assign select_ln79_23_fu_1297_p3 = ((and_ln79_2_reg_1607[0:0] === 1'b1) ? line_buffer_m_1_0_0_V_q0 : select_ln79_22_fu_1290_p3);

assign select_ln79_24_fu_1341_p3 = ((and_ln79_reg_1589[0:0] === 1'b1) ? line_buffer_m_0_0_1_V_q0 : line_buffer_m_0_0_0_V_q0);

assign select_ln79_25_fu_1348_p3 = ((and_ln79_1_reg_1598[0:0] === 1'b1) ? line_buffer_m_1_0_0_V_q0 : select_ln79_24_fu_1341_p3);

assign select_ln79_26_fu_1355_p3 = ((and_ln79_2_reg_1607[0:0] === 1'b1) ? line_buffer_m_1_0_1_V_q0 : select_ln79_25_fu_1348_p3);

assign select_ln79_2_fu_786_p3 = ((and_ln79_2_fu_782_p2[0:0] === 1'b1) ? line_buffer_m_1_0_1_V_q0 : select_ln79_1_fu_774_p3);

assign select_ln79_3_fu_832_p3 = ((and_ln79_fu_751_p2[0:0] === 1'b1) ? line_buffer_m_0_0_0_V_q1 : line_buffer_m_0_0_1_V_q1);

assign select_ln79_4_fu_840_p3 = ((and_ln79_1_fu_769_p2[0:0] === 1'b1) ? line_buffer_m_1_0_1_V_q1 : select_ln79_3_fu_832_p3);

assign select_ln79_5_fu_848_p3 = ((and_ln79_2_fu_782_p2[0:0] === 1'b1) ? line_buffer_m_1_0_0_V_q1 : select_ln79_4_fu_840_p3);

assign select_ln79_6_fu_1038_p3 = ((and_ln79_reg_1589[0:0] === 1'b1) ? line_buffer_m_0_0_1_V_q0 : line_buffer_m_0_0_0_V_q0);

assign select_ln79_7_fu_1045_p3 = ((and_ln79_1_reg_1598[0:0] === 1'b1) ? line_buffer_m_1_0_0_V_q0 : select_ln79_6_fu_1038_p3);

assign select_ln79_8_fu_1052_p3 = ((and_ln79_2_reg_1607[0:0] === 1'b1) ? line_buffer_m_1_0_1_V_q0 : select_ln79_7_fu_1045_p3);

assign select_ln79_9_fu_926_p3 = ((and_ln79_fu_751_p2[0:0] === 1'b1) ? line_buffer_m_0_1_1_0_V_q0 : line_buffer_m_0_1_0_0_V_q0);

assign select_ln79_fu_756_p3 = ((and_ln79_fu_751_p2[0:0] === 1'b1) ? line_buffer_m_0_0_1_V_q0 : line_buffer_m_0_0_0_V_q0);

assign sext_ln1353_1_fu_890_p1 = $signed(tmp_416_fu_880_p4);

assign sext_ln1353_fu_828_p1 = $signed(tmp_413_fu_818_p4);

assign sext_ln700_1_fu_1216_p1 = $signed(add_ln700_reg_1672);

assign sext_ln700_2_fu_1225_p1 = $signed(add_ln700_3_fu_1219_p2);

assign sext_ln700_3_fu_1399_p1 = $signed(add_ln700_4_reg_1742);

assign sext_ln700_4_fu_1402_p1 = $signed(add_ln700_5_reg_1747);

assign sext_ln700_5_fu_1411_p1 = $signed(add_ln700_6_fu_1405_p2);

assign sext_ln700_6_fu_1421_p1 = $signed(add_ln700_7_fu_1415_p2);

assign sext_ln700_fu_1395_p1 = $signed(tmp_431_fu_1385_p4);

assign sext_ln79_1_fu_1097_p1 = $signed(tmp_421_reg_1657);

assign sext_ln79_2_fu_1139_p1 = $signed(tmp_423_fu_1129_p4);

assign sext_ln79_3_fu_1198_p1 = $signed(tmp_425_fu_1188_p4);

assign sext_ln79_4_fu_1279_p1 = $signed(tmp_427_fu_1269_p4);

assign sext_ln79_5_fu_1337_p1 = $signed(tmp_429_fu_1327_p4);

assign sext_ln79_fu_1093_p1 = $signed(tmp_419_fu_1083_p4);

assign tmp_10_fu_564_p3 = {{lshr_ln_fu_520_p4}, {2'd0}};

assign tmp_411_fu_586_p4 = {{cc_V[2:1]}};

assign tmp_412_fu_804_p3 = select_ln79_2_fu_786_p3[32'd1];

always @ (*) begin
    tmp_413_fu_818_p4 = select_ln79_2_fu_786_p3;
    tmp_413_fu_818_p4[32'd1] = |(xor_ln841_fu_812_p2);
end

assign tmp_414_fu_638_p4 = {{add_ln1353_fu_632_p2[3:1]}};

assign tmp_415_fu_866_p3 = select_ln79_5_fu_848_p3[32'd1];

always @ (*) begin
    tmp_416_fu_880_p4 = select_ln79_5_fu_848_p3;
    tmp_416_fu_880_p4[32'd1] = |(xor_ln841_1_fu_874_p2);
end

assign tmp_418_fu_1069_p3 = select_ln79_8_fu_1052_p3[32'd1];

always @ (*) begin
    tmp_419_fu_1083_p4 = select_ln79_8_fu_1052_p3;
    tmp_419_fu_1083_p4[32'd1] = |(xor_ln841_2_fu_1077_p2);
end

assign tmp_420_fu_960_p3 = select_ln79_11_fu_942_p3[32'd1];

always @ (*) begin
    tmp_421_fu_974_p4 = select_ln79_11_fu_942_p3;
    tmp_421_fu_974_p4[32'd1] = |(xor_ln841_3_fu_968_p2);
end

assign tmp_422_fu_1115_p3 = select_ln79_14_fu_1100_p3[32'd1];

always @ (*) begin
    tmp_423_fu_1129_p4 = select_ln79_14_fu_1100_p3;
    tmp_423_fu_1129_p4[32'd1] = |(xor_ln841_4_fu_1123_p2);
end

assign tmp_424_fu_1174_p3 = select_ln79_17_fu_1157_p3[32'd1];

always @ (*) begin
    tmp_425_fu_1188_p4 = select_ln79_17_fu_1157_p3;
    tmp_425_fu_1188_p4[32'd1] = |(xor_ln841_5_fu_1182_p2);
end

assign tmp_426_fu_1255_p3 = select_ln79_20_fu_1241_p3[32'd1];

always @ (*) begin
    tmp_427_fu_1269_p4 = select_ln79_20_fu_1241_p3;
    tmp_427_fu_1269_p4[32'd1] = |(xor_ln841_6_fu_1263_p2);
end

assign tmp_428_fu_1313_p3 = select_ln79_23_fu_1297_p3[32'd1];

always @ (*) begin
    tmp_429_fu_1327_p4 = select_ln79_23_fu_1297_p3;
    tmp_429_fu_1327_p4[32'd1] = |(xor_ln841_7_fu_1321_p2);
end

assign tmp_430_fu_1371_p3 = select_ln79_26_fu_1355_p3[32'd1];

always @ (*) begin
    tmp_431_fu_1385_p4 = select_ln79_26_fu_1355_p3;
    tmp_431_fu_1385_p4[32'd1] = |(xor_ln841_8_fu_1379_p2);
end

assign tmp_7_fu_542_p3 = {{lshr_ln_fu_520_p4}, {3'd0}};

assign tmp_9_cast_fu_705_p3 = {{4'd0}, {or_ln79_fu_700_p2}};

assign tmp_fu_534_p3 = {{lshr_ln_fu_520_p4}, {1'd0}};

assign trunc_ln215_1_fu_856_p1 = select_ln79_5_fu_848_p3[0:0];

assign trunc_ln215_2_fu_1059_p1 = select_ln79_8_fu_1052_p3[0:0];

assign trunc_ln215_3_fu_950_p1 = select_ln79_11_fu_942_p3[0:0];

assign trunc_ln215_4_fu_1105_p1 = select_ln79_14_fu_1100_p3[0:0];

assign trunc_ln215_5_fu_1164_p1 = select_ln79_17_fu_1157_p3[0:0];

assign trunc_ln215_6_fu_1246_p1 = select_ln79_20_fu_1241_p3[0:0];

assign trunc_ln215_7_fu_1304_p1 = select_ln79_23_fu_1297_p3[0:0];

assign trunc_ln215_8_fu_1362_p1 = select_ln79_26_fu_1355_p3[0:0];

assign trunc_ln215_fu_794_p1 = select_ln79_2_fu_786_p3[0:0];

assign trunc_ln79_1_fu_582_p1 = cc_V[0:0];

assign trunc_ln79_fu_516_p1 = bank_V[0:0];

assign xor_ln79_1_fu_764_p2 = (trunc_ln79_1_reg_1459 ^ 1'd1);

assign xor_ln79_fu_746_p2 = (trunc_ln79_reg_1437 ^ 1'd1);

assign xor_ln841_1_fu_874_p2 = (tmp_415_fu_866_p3 ^ and_ln1355_1_fu_860_p2);

assign xor_ln841_2_fu_1077_p2 = (tmp_418_fu_1069_p3 ^ and_ln1355_2_fu_1063_p2);

assign xor_ln841_3_fu_968_p2 = (tmp_420_fu_960_p3 ^ and_ln1355_3_fu_954_p2);

assign xor_ln841_4_fu_1123_p2 = (tmp_422_fu_1115_p3 ^ and_ln1355_4_fu_1109_p2);

assign xor_ln841_5_fu_1182_p2 = (tmp_424_fu_1174_p3 ^ and_ln1355_5_fu_1168_p2);

assign xor_ln841_6_fu_1263_p2 = (tmp_426_fu_1255_p3 ^ and_ln1355_6_fu_1250_p2);

assign xor_ln841_7_fu_1321_p2 = (tmp_428_fu_1313_p3 ^ and_ln1355_7_fu_1308_p2);

assign xor_ln841_8_fu_1379_p2 = (tmp_430_fu_1371_p3 ^ and_ln1355_8_fu_1366_p2);

assign xor_ln841_fu_812_p2 = (tmp_412_fu_804_p3 ^ and_ln1355_fu_798_p2);

assign zext_ln79_10_fu_648_p1 = tmp_414_fu_638_p4;

assign zext_ln79_11_fu_1006_p1 = tmp_414_reg_1511;

assign zext_ln79_12_fu_652_p1 = tmp_414_fu_638_p4;

assign zext_ln79_13_fu_662_p1 = add_ln79_6_fu_656_p2;

assign zext_ln79_14_fu_1014_p1 = add_ln79_7_fu_1009_p2;

assign zext_ln79_15_fu_676_p1 = add_ln79_8_fu_670_p2;

assign zext_ln79_16_fu_894_p1 = tmp_417_reg_1556;

assign zext_ln79_17_fu_1022_p1 = tmp_417_reg_1556;

assign zext_ln79_18_fu_897_p1 = tmp_417_reg_1556;

assign zext_ln79_19_fu_905_p1 = add_ln79_9_fu_900_p2;

assign zext_ln79_1_fu_550_p1 = tmp_7_fu_542_p3;

assign zext_ln79_20_fu_1030_p1 = add_ln79_10_fu_1025_p2;

assign zext_ln79_21_fu_918_p1 = add_ln79_11_fu_913_p2;

assign zext_ln79_2_fu_554_p1 = tmp_fu_534_p3;

assign zext_ln79_3_fu_572_p1 = tmp_10_fu_564_p3;

assign zext_ln79_4_fu_596_p1 = tmp_411_fu_586_p4;

assign zext_ln79_5_fu_729_p1 = tmp_411_reg_1466;

assign zext_ln79_6_fu_600_p1 = tmp_411_fu_586_p4;

assign zext_ln79_7_fu_610_p1 = add_ln79_3_fu_604_p2;

assign zext_ln79_8_fu_738_p1 = add_ln79_4_fu_732_p2;

assign zext_ln79_9_fu_624_p1 = add_ln79_5_fu_618_p2;

assign zext_ln79_fu_530_p1 = lshr_ln_fu_520_p4;

always @ (posedge ap_clk) begin
    tmp_reg_1444[0] <= 1'b0;
    add_ln79_reg_1449[0] <= 1'b0;
    add_ln79_1_reg_1563[0] <= 1'b1;
end

endmodule //conv3x3b
