// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv3x3b (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        line_buffer_m_V_address0,
        line_buffer_m_V_ce0,
        line_buffer_m_V_q0,
        line_buffer_m_V_address1,
        line_buffer_m_V_ce1,
        line_buffer_m_V_q1,
        line_buffer_m_V_offset,
        conv_params_m_0_0_s,
        conv_params_m_0_0_10,
        conv_params_m_0_1_s,
        conv_params_m_0_1_10,
        conv_params_m_0_2_s,
        conv_params_m_0_2_10,
        conv_params_m_1_0_s,
        conv_params_m_1_0_10,
        conv_params_m_1_1_s,
        conv_params_m_1_1_10,
        conv_params_m_1_2_s,
        conv_params_m_1_2_10,
        conv_params_m_2_0_s,
        conv_params_m_2_0_10,
        conv_params_m_2_1_s,
        conv_params_m_2_1_10,
        conv_params_m_2_2_s,
        conv_params_m_2_2_10,
        conv_params_m_V_offset,
        bank_V,
        cc_V,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 5'd1;
parameter    ap_ST_fsm_pp0_stage1 = 5'd2;
parameter    ap_ST_fsm_pp0_stage2 = 5'd4;
parameter    ap_ST_fsm_pp0_stage3 = 5'd8;
parameter    ap_ST_fsm_pp0_stage4 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
output  [9:0] line_buffer_m_V_address0;
output   line_buffer_m_V_ce0;
input  [1:0] line_buffer_m_V_q0;
output  [9:0] line_buffer_m_V_address1;
output   line_buffer_m_V_ce1;
input  [1:0] line_buffer_m_V_q1;
input  [0:0] line_buffer_m_V_offset;
input  [0:0] conv_params_m_0_0_s;
input  [0:0] conv_params_m_0_0_10;
input  [0:0] conv_params_m_0_1_s;
input  [0:0] conv_params_m_0_1_10;
input  [0:0] conv_params_m_0_2_s;
input  [0:0] conv_params_m_0_2_10;
input  [0:0] conv_params_m_1_0_s;
input  [0:0] conv_params_m_1_0_10;
input  [0:0] conv_params_m_1_1_s;
input  [0:0] conv_params_m_1_1_10;
input  [0:0] conv_params_m_1_2_s;
input  [0:0] conv_params_m_1_2_10;
input  [0:0] conv_params_m_2_0_s;
input  [0:0] conv_params_m_2_0_10;
input  [0:0] conv_params_m_2_1_s;
input  [0:0] conv_params_m_2_1_10;
input  [0:0] conv_params_m_2_2_s;
input  [0:0] conv_params_m_2_2_10;
input  [0:0] conv_params_m_V_offset;
input  [3:0] bank_V;
input  [3:0] cc_V;
output  [4:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] line_buffer_m_V_address0;
reg line_buffer_m_V_ce0;
reg[9:0] line_buffer_m_V_address1;
reg line_buffer_m_V_ce1;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
reg   [3:0] cc_V_read_reg_941;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [10:0] sub_ln79_fu_343_p2;
reg   [10:0] sub_ln79_reg_946;
wire   [10:0] zext_ln79_3_fu_349_p1;
reg   [10:0] zext_ln79_3_reg_953;
wire   [10:0] zext_ln79_7_fu_370_p1;
reg   [10:0] zext_ln79_7_reg_964;
reg   [0:0] conv_params_m_V_offs_reg_975;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
wire   [10:0] add_ln79_1_fu_385_p2;
reg   [10:0] add_ln79_1_reg_986;
wire   [10:0] zext_ln79_11_fu_497_p1;
reg   [10:0] zext_ln79_11_reg_997;
wire   [2:0] add_ln700_fu_511_p2;
reg   [2:0] add_ln700_reg_1008;
wire   [10:0] add_ln79_5_fu_522_p2;
reg   [10:0] add_ln79_5_reg_1013;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire   [10:0] add_ln79_8_fu_536_p2;
reg   [10:0] add_ln79_8_reg_1023;
wire   [10:0] add_ln79_11_fu_550_p2;
reg   [10:0] add_ln79_11_reg_1033;
wire   [3:0] add_ln700_4_fu_658_p2;
reg   [3:0] add_ln700_4_reg_1038;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire   [2:0] add_ln700_5_fu_762_p2;
reg   [2:0] add_ln700_5_reg_1053;
reg   [0:0] conv_params_m_0_0_11_reg_1058;
reg   [0:0] conv_params_m_0_0_12_reg_1063;
reg   [1:0] tmp_109_fu_803_p4;
reg   [1:0] tmp_109_reg_1073;
reg   [1:0] tmp_111_fu_844_p4;
reg   [1:0] tmp_111_reg_1078;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage4_subdone;
reg   [0:0] ap_port_reg_conv_params_m_0_0_s;
reg   [0:0] ap_port_reg_conv_params_m_0_0_10;
reg   [0:0] ap_port_reg_conv_params_m_0_1_s;
reg   [0:0] ap_port_reg_conv_params_m_0_1_10;
reg   [0:0] ap_port_reg_conv_params_m_0_2_s;
reg   [0:0] ap_port_reg_conv_params_m_0_2_10;
reg   [0:0] ap_port_reg_conv_params_m_1_0_s;
reg   [0:0] ap_port_reg_conv_params_m_1_0_10;
reg   [0:0] ap_port_reg_conv_params_m_1_1_s;
reg   [0:0] ap_port_reg_conv_params_m_1_1_10;
reg   [0:0] ap_port_reg_conv_params_m_1_2_s;
reg   [0:0] ap_port_reg_conv_params_m_1_2_10;
reg   [0:0] ap_port_reg_conv_params_m_2_0_s;
reg   [0:0] ap_port_reg_conv_params_m_2_0_10;
reg   [0:0] ap_port_reg_conv_params_m_2_1_s;
reg   [0:0] ap_port_reg_conv_params_m_2_1_10;
reg   [0:0] ap_port_reg_conv_params_m_2_2_s;
reg   [0:0] ap_port_reg_conv_params_m_2_2_10;
reg   [0:0] ap_port_reg_conv_params_m_V_offset;
wire   [63:0] zext_ln79_4_fu_359_p1;
wire   [63:0] zext_ln79_8_fu_380_p1;
wire   [63:0] zext_ln79_5_fu_395_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln79_12_fu_506_p1;
wire   [63:0] zext_ln79_9_fu_531_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln79_13_fu_545_p1;
wire   [63:0] zext_ln79_6_fu_664_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln79_10_fu_668_p1;
wire   [63:0] zext_ln79_14_fu_768_p1;
wire    ap_block_pp0_stage4;
wire   [3:0] tmp_fu_297_p3;
wire   [4:0] zext_ln79_fu_309_p1;
wire   [4:0] zext_ln79_cast_fu_305_p1;
wire   [4:0] add_ln79_fu_313_p2;
wire   [9:0] tmp_94_fu_319_p3;
wire   [5:0] tmp_95_fu_331_p3;
wire   [10:0] zext_ln79_1_fu_327_p1;
wire   [10:0] zext_ln79_2_fu_339_p1;
wire   [10:0] add_ln79_3_fu_353_p2;
wire   [3:0] add_ln1353_fu_364_p2;
wire   [10:0] add_ln79_6_fu_374_p2;
wire   [10:0] add_ln79_4_fu_390_p2;
wire   [0:0] trunc_ln215_fu_400_p1;
wire   [0:0] select_ln215_fu_404_p3;
wire   [0:0] and_ln1355_fu_412_p2;
wire   [0:0] tmp_96_fu_418_p3;
wire   [0:0] xor_ln841_fu_426_p2;
reg   [1:0] tmp_97_fu_432_p4;
wire   [0:0] trunc_ln215_1_fu_446_p1;
wire   [0:0] select_ln215_1_fu_450_p3;
wire   [0:0] and_ln1355_1_fu_458_p2;
wire   [0:0] tmp_98_fu_464_p3;
wire   [0:0] xor_ln841_1_fu_472_p2;
reg   [1:0] tmp_99_fu_478_p4;
wire   [3:0] add_ln1353_14_fu_492_p2;
wire   [10:0] add_ln79_9_fu_501_p2;
wire  signed [2:0] sext_ln1353_fu_442_p1;
wire  signed [2:0] sext_ln1353_1_fu_488_p1;
wire   [10:0] add_ln79_2_fu_517_p2;
wire   [10:0] add_ln79_7_fu_527_p2;
wire   [10:0] add_ln79_10_fu_541_p2;
wire   [0:0] trunc_ln215_2_fu_555_p1;
wire   [0:0] select_ln215_2_fu_559_p3;
wire   [0:0] and_ln1355_2_fu_566_p2;
wire   [0:0] tmp_100_fu_572_p3;
wire   [0:0] xor_ln841_2_fu_580_p2;
reg   [1:0] tmp_101_fu_586_p4;
wire   [0:0] trunc_ln215_3_fu_600_p1;
wire   [0:0] select_ln215_3_fu_604_p3;
wire   [0:0] and_ln1355_3_fu_611_p2;
wire   [0:0] tmp_102_fu_617_p3;
wire   [0:0] xor_ln841_3_fu_625_p2;
reg   [1:0] tmp_103_fu_631_p4;
wire  signed [2:0] sext_ln79_fu_596_p1;
wire  signed [2:0] sext_ln79_1_fu_641_p1;
wire   [2:0] add_ln700_3_fu_648_p2;
wire  signed [3:0] sext_ln700_2_fu_654_p1;
wire  signed [3:0] sext_ln700_1_fu_645_p1;
wire   [0:0] trunc_ln215_4_fu_672_p1;
wire   [0:0] select_ln215_4_fu_676_p3;
wire   [0:0] and_ln1355_4_fu_683_p2;
wire   [0:0] tmp_104_fu_689_p3;
wire   [0:0] xor_ln841_4_fu_697_p2;
reg   [1:0] tmp_105_fu_703_p4;
wire   [0:0] trunc_ln215_5_fu_717_p1;
wire   [0:0] select_ln215_5_fu_721_p3;
wire   [0:0] and_ln1355_5_fu_728_p2;
wire   [0:0] tmp_106_fu_734_p3;
wire   [0:0] xor_ln841_5_fu_742_p2;
reg   [1:0] tmp_107_fu_748_p4;
wire  signed [2:0] sext_ln79_2_fu_713_p1;
wire  signed [2:0] sext_ln79_3_fu_758_p1;
wire   [0:0] trunc_ln215_6_fu_772_p1;
wire   [0:0] select_ln215_6_fu_776_p3;
wire   [0:0] and_ln1355_6_fu_783_p2;
wire   [0:0] tmp_108_fu_789_p3;
wire   [0:0] xor_ln841_6_fu_797_p2;
wire   [0:0] trunc_ln215_7_fu_813_p1;
wire   [0:0] select_ln215_7_fu_817_p3;
wire   [0:0] and_ln1355_7_fu_824_p2;
wire   [0:0] tmp_110_fu_830_p3;
wire   [0:0] xor_ln841_7_fu_838_p2;
wire   [0:0] trunc_ln215_8_fu_860_p1;
wire   [0:0] select_ln215_8_fu_864_p3;
wire   [0:0] and_ln1355_8_fu_869_p2;
wire   [0:0] tmp_112_fu_875_p3;
wire   [0:0] xor_ln841_8_fu_883_p2;
reg   [1:0] tmp_113_fu_889_p4;
wire  signed [2:0] sext_ln79_5_fu_857_p1;
wire  signed [2:0] sext_ln700_fu_899_p1;
wire   [2:0] add_ln700_6_fu_909_p2;
wire  signed [3:0] sext_ln700_5_fu_915_p1;
wire  signed [3:0] sext_ln79_4_fu_854_p1;
wire   [3:0] add_ln700_7_fu_919_p2;
wire  signed [4:0] sext_ln700_6_fu_925_p1;
wire  signed [4:0] sext_ln700_4_fu_906_p1;
wire   [4:0] add_ln700_8_fu_929_p2;
wire  signed [4:0] sext_ln700_3_fu_903_p1;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_ln700_4_reg_1038 <= add_ln700_4_fu_658_p2;
        add_ln79_11_reg_1033 <= add_ln79_11_fu_550_p2;
        add_ln79_5_reg_1013 <= add_ln79_5_fu_522_p2;
        add_ln79_8_reg_1023 <= add_ln79_8_fu_536_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        add_ln700_5_reg_1053 <= add_ln700_5_fu_762_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln700_reg_1008 <= add_ln700_fu_511_p2;
        add_ln79_1_reg_986[10 : 1] <= add_ln79_1_fu_385_p2[10 : 1];
        conv_params_m_V_offs_reg_975 <= ap_port_reg_conv_params_m_V_offset;
        zext_ln79_11_reg_997[3 : 0] <= zext_ln79_11_fu_497_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_port_reg_conv_params_m_0_0_10 <= conv_params_m_0_0_10;
        ap_port_reg_conv_params_m_0_0_s <= conv_params_m_0_0_s;
        ap_port_reg_conv_params_m_0_1_10 <= conv_params_m_0_1_10;
        ap_port_reg_conv_params_m_0_1_s <= conv_params_m_0_1_s;
        ap_port_reg_conv_params_m_0_2_10 <= conv_params_m_0_2_10;
        ap_port_reg_conv_params_m_0_2_s <= conv_params_m_0_2_s;
        ap_port_reg_conv_params_m_1_0_10 <= conv_params_m_1_0_10;
        ap_port_reg_conv_params_m_1_0_s <= conv_params_m_1_0_s;
        ap_port_reg_conv_params_m_1_1_10 <= conv_params_m_1_1_10;
        ap_port_reg_conv_params_m_1_1_s <= conv_params_m_1_1_s;
        ap_port_reg_conv_params_m_1_2_10 <= conv_params_m_1_2_10;
        ap_port_reg_conv_params_m_1_2_s <= conv_params_m_1_2_s;
        ap_port_reg_conv_params_m_2_0_10 <= conv_params_m_2_0_10;
        ap_port_reg_conv_params_m_2_0_s <= conv_params_m_2_0_s;
        ap_port_reg_conv_params_m_2_1_10 <= conv_params_m_2_1_10;
        ap_port_reg_conv_params_m_2_1_s <= conv_params_m_2_1_s;
        ap_port_reg_conv_params_m_2_2_10 <= conv_params_m_2_2_10;
        ap_port_reg_conv_params_m_2_2_s <= conv_params_m_2_2_s;
        ap_port_reg_conv_params_m_V_offset <= conv_params_m_V_offset;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cc_V_read_reg_941 <= cc_V;
        sub_ln79_reg_946[10 : 1] <= sub_ln79_fu_343_p2[10 : 1];
        zext_ln79_3_reg_953[3 : 0] <= zext_ln79_3_fu_349_p1[3 : 0];
        zext_ln79_7_reg_964[3 : 0] <= zext_ln79_7_fu_370_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        conv_params_m_0_0_11_reg_1058 <= ap_port_reg_conv_params_m_0_0_10;
        conv_params_m_0_0_12_reg_1063 <= ap_port_reg_conv_params_m_0_0_s;
        tmp_109_reg_1073 <= tmp_109_fu_803_p4;
        tmp_111_reg_1078 <= tmp_111_fu_844_p4;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            line_buffer_m_V_address0 = zext_ln79_14_fu_768_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            line_buffer_m_V_address0 = zext_ln79_6_fu_664_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            line_buffer_m_V_address0 = zext_ln79_9_fu_531_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buffer_m_V_address0 = zext_ln79_12_fu_506_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            line_buffer_m_V_address0 = zext_ln79_4_fu_359_p1;
        end else begin
            line_buffer_m_V_address0 = 'bx;
        end
    end else begin
        line_buffer_m_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            line_buffer_m_V_address1 = zext_ln79_10_fu_668_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            line_buffer_m_V_address1 = zext_ln79_13_fu_545_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            line_buffer_m_V_address1 = zext_ln79_5_fu_395_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            line_buffer_m_V_address1 = zext_ln79_8_fu_380_p1;
        end else begin
            line_buffer_m_V_address1 = 'bx;
        end
    end else begin
        line_buffer_m_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        line_buffer_m_V_ce0 = 1'b1;
    end else begin
        line_buffer_m_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        line_buffer_m_V_ce1 = 1'b1;
    end else begin
        line_buffer_m_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1353_14_fu_492_p2 = (4'd2 + cc_V_read_reg_941);

assign add_ln1353_fu_364_p2 = (4'd1 + cc_V);

assign add_ln700_3_fu_648_p2 = ($signed(sext_ln79_fu_596_p1) + $signed(sext_ln79_1_fu_641_p1));

assign add_ln700_4_fu_658_p2 = ($signed(sext_ln700_2_fu_654_p1) + $signed(sext_ln700_1_fu_645_p1));

assign add_ln700_5_fu_762_p2 = ($signed(sext_ln79_2_fu_713_p1) + $signed(sext_ln79_3_fu_758_p1));

assign add_ln700_6_fu_909_p2 = ($signed(sext_ln79_5_fu_857_p1) + $signed(sext_ln700_fu_899_p1));

assign add_ln700_7_fu_919_p2 = ($signed(sext_ln700_5_fu_915_p1) + $signed(sext_ln79_4_fu_854_p1));

assign add_ln700_8_fu_929_p2 = ($signed(sext_ln700_6_fu_925_p1) + $signed(sext_ln700_4_fu_906_p1));

assign add_ln700_fu_511_p2 = ($signed(sext_ln1353_fu_442_p1) + $signed(sext_ln1353_1_fu_488_p1));

assign add_ln79_10_fu_541_p2 = (zext_ln79_11_reg_997 + add_ln79_1_reg_986);

assign add_ln79_11_fu_550_p2 = (zext_ln79_11_reg_997 + add_ln79_2_fu_517_p2);

assign add_ln79_1_fu_385_p2 = (11'd10 + sub_ln79_reg_946);

assign add_ln79_2_fu_517_p2 = (11'd20 + sub_ln79_reg_946);

assign add_ln79_3_fu_353_p2 = (zext_ln79_3_fu_349_p1 + sub_ln79_fu_343_p2);

assign add_ln79_4_fu_390_p2 = (zext_ln79_3_reg_953 + add_ln79_1_fu_385_p2);

assign add_ln79_5_fu_522_p2 = (zext_ln79_3_reg_953 + add_ln79_2_fu_517_p2);

assign add_ln79_6_fu_374_p2 = (zext_ln79_7_fu_370_p1 + sub_ln79_fu_343_p2);

assign add_ln79_7_fu_527_p2 = (zext_ln79_7_reg_964 + add_ln79_1_reg_986);

assign add_ln79_8_fu_536_p2 = (zext_ln79_7_reg_964 + add_ln79_2_fu_517_p2);

assign add_ln79_9_fu_501_p2 = (zext_ln79_11_fu_497_p1 + sub_ln79_reg_946);

assign add_ln79_fu_313_p2 = (zext_ln79_fu_309_p1 + zext_ln79_cast_fu_305_p1);

assign and_ln1355_1_fu_458_p2 = (trunc_ln215_1_fu_446_p1 & select_ln215_1_fu_450_p3);

assign and_ln1355_2_fu_566_p2 = (trunc_ln215_2_fu_555_p1 & select_ln215_2_fu_559_p3);

assign and_ln1355_3_fu_611_p2 = (trunc_ln215_3_fu_600_p1 & select_ln215_3_fu_604_p3);

assign and_ln1355_4_fu_683_p2 = (trunc_ln215_4_fu_672_p1 & select_ln215_4_fu_676_p3);

assign and_ln1355_5_fu_728_p2 = (trunc_ln215_5_fu_717_p1 & select_ln215_5_fu_721_p3);

assign and_ln1355_6_fu_783_p2 = (trunc_ln215_6_fu_772_p1 & select_ln215_6_fu_776_p3);

assign and_ln1355_7_fu_824_p2 = (trunc_ln215_7_fu_813_p1 & select_ln215_7_fu_817_p3);

assign and_ln1355_8_fu_869_p2 = (trunc_ln215_8_fu_860_p1 & select_ln215_8_fu_864_p3);

assign and_ln1355_fu_412_p2 = (trunc_ln215_fu_400_p1 & select_ln215_fu_404_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_subdone = (1'b0 == ap_ce);
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_subdone = (1'b0 == ap_ce);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_return = ($signed(add_ln700_8_fu_929_p2) + $signed(sext_ln700_3_fu_903_p1));

assign select_ln215_1_fu_450_p3 = ((ap_port_reg_conv_params_m_V_offset[0:0] === 1'b1) ? ap_port_reg_conv_params_m_2_1_10 : ap_port_reg_conv_params_m_2_1_s);

assign select_ln215_2_fu_559_p3 = ((conv_params_m_V_offs_reg_975[0:0] === 1'b1) ? ap_port_reg_conv_params_m_2_0_10 : ap_port_reg_conv_params_m_2_0_s);

assign select_ln215_3_fu_604_p3 = ((conv_params_m_V_offs_reg_975[0:0] === 1'b1) ? ap_port_reg_conv_params_m_1_2_10 : ap_port_reg_conv_params_m_1_2_s);

assign select_ln215_4_fu_676_p3 = ((conv_params_m_V_offs_reg_975[0:0] === 1'b1) ? ap_port_reg_conv_params_m_1_1_10 : ap_port_reg_conv_params_m_1_1_s);

assign select_ln215_5_fu_721_p3 = ((conv_params_m_V_offs_reg_975[0:0] === 1'b1) ? ap_port_reg_conv_params_m_1_0_10 : ap_port_reg_conv_params_m_1_0_s);

assign select_ln215_6_fu_776_p3 = ((conv_params_m_V_offs_reg_975[0:0] === 1'b1) ? ap_port_reg_conv_params_m_0_2_10 : ap_port_reg_conv_params_m_0_2_s);

assign select_ln215_7_fu_817_p3 = ((conv_params_m_V_offs_reg_975[0:0] === 1'b1) ? ap_port_reg_conv_params_m_0_1_10 : ap_port_reg_conv_params_m_0_1_s);

assign select_ln215_8_fu_864_p3 = ((conv_params_m_V_offs_reg_975[0:0] === 1'b1) ? conv_params_m_0_0_11_reg_1058 : conv_params_m_0_0_12_reg_1063);

assign select_ln215_fu_404_p3 = ((ap_port_reg_conv_params_m_V_offset[0:0] === 1'b1) ? ap_port_reg_conv_params_m_2_2_10 : ap_port_reg_conv_params_m_2_2_s);

assign sext_ln1353_1_fu_488_p1 = $signed(tmp_99_fu_478_p4);

assign sext_ln1353_fu_442_p1 = $signed(tmp_97_fu_432_p4);

assign sext_ln700_1_fu_645_p1 = $signed(add_ln700_reg_1008);

assign sext_ln700_2_fu_654_p1 = $signed(add_ln700_3_fu_648_p2);

assign sext_ln700_3_fu_903_p1 = $signed(add_ln700_4_reg_1038);

assign sext_ln700_4_fu_906_p1 = $signed(add_ln700_5_reg_1053);

assign sext_ln700_5_fu_915_p1 = $signed(add_ln700_6_fu_909_p2);

assign sext_ln700_6_fu_925_p1 = $signed(add_ln700_7_fu_919_p2);

assign sext_ln700_fu_899_p1 = $signed(tmp_113_fu_889_p4);

assign sext_ln79_1_fu_641_p1 = $signed(tmp_103_fu_631_p4);

assign sext_ln79_2_fu_713_p1 = $signed(tmp_105_fu_703_p4);

assign sext_ln79_3_fu_758_p1 = $signed(tmp_107_fu_748_p4);

assign sext_ln79_4_fu_854_p1 = $signed(tmp_109_reg_1073);

assign sext_ln79_5_fu_857_p1 = $signed(tmp_111_reg_1078);

assign sext_ln79_fu_596_p1 = $signed(tmp_101_fu_586_p4);

assign sub_ln79_fu_343_p2 = (zext_ln79_1_fu_327_p1 - zext_ln79_2_fu_339_p1);

assign tmp_100_fu_572_p3 = line_buffer_m_V_q0[32'd1];

always @ (*) begin
    tmp_101_fu_586_p4 = line_buffer_m_V_q0;
    tmp_101_fu_586_p4[32'd1] = |(xor_ln841_2_fu_580_p2);
end

assign tmp_102_fu_617_p3 = line_buffer_m_V_q1[32'd1];

always @ (*) begin
    tmp_103_fu_631_p4 = line_buffer_m_V_q1;
    tmp_103_fu_631_p4[32'd1] = |(xor_ln841_3_fu_625_p2);
end

assign tmp_104_fu_689_p3 = line_buffer_m_V_q0[32'd1];

always @ (*) begin
    tmp_105_fu_703_p4 = line_buffer_m_V_q0;
    tmp_105_fu_703_p4[32'd1] = |(xor_ln841_4_fu_697_p2);
end

assign tmp_106_fu_734_p3 = line_buffer_m_V_q1[32'd1];

always @ (*) begin
    tmp_107_fu_748_p4 = line_buffer_m_V_q1;
    tmp_107_fu_748_p4[32'd1] = |(xor_ln841_5_fu_742_p2);
end

assign tmp_108_fu_789_p3 = line_buffer_m_V_q0[32'd1];

always @ (*) begin
    tmp_109_fu_803_p4 = line_buffer_m_V_q0;
    tmp_109_fu_803_p4[32'd1] = |(xor_ln841_6_fu_797_p2);
end

assign tmp_110_fu_830_p3 = line_buffer_m_V_q1[32'd1];

always @ (*) begin
    tmp_111_fu_844_p4 = line_buffer_m_V_q1;
    tmp_111_fu_844_p4[32'd1] = |(xor_ln841_7_fu_838_p2);
end

assign tmp_112_fu_875_p3 = line_buffer_m_V_q0[32'd1];

always @ (*) begin
    tmp_113_fu_889_p4 = line_buffer_m_V_q0;
    tmp_113_fu_889_p4[32'd1] = |(xor_ln841_8_fu_883_p2);
end

assign tmp_94_fu_319_p3 = {{add_ln79_fu_313_p2}, {5'd0}};

assign tmp_95_fu_331_p3 = {{add_ln79_fu_313_p2}, {1'd0}};

assign tmp_96_fu_418_p3 = line_buffer_m_V_q0[32'd1];

always @ (*) begin
    tmp_97_fu_432_p4 = line_buffer_m_V_q0;
    tmp_97_fu_432_p4[32'd1] = |(xor_ln841_fu_426_p2);
end

assign tmp_98_fu_464_p3 = line_buffer_m_V_q1[32'd1];

always @ (*) begin
    tmp_99_fu_478_p4 = line_buffer_m_V_q1;
    tmp_99_fu_478_p4[32'd1] = |(xor_ln841_1_fu_472_p2);
end

assign tmp_fu_297_p3 = {{line_buffer_m_V_offset}, {3'd0}};

assign trunc_ln215_1_fu_446_p1 = line_buffer_m_V_q1[0:0];

assign trunc_ln215_2_fu_555_p1 = line_buffer_m_V_q0[0:0];

assign trunc_ln215_3_fu_600_p1 = line_buffer_m_V_q1[0:0];

assign trunc_ln215_4_fu_672_p1 = line_buffer_m_V_q0[0:0];

assign trunc_ln215_5_fu_717_p1 = line_buffer_m_V_q1[0:0];

assign trunc_ln215_6_fu_772_p1 = line_buffer_m_V_q0[0:0];

assign trunc_ln215_7_fu_813_p1 = line_buffer_m_V_q1[0:0];

assign trunc_ln215_8_fu_860_p1 = line_buffer_m_V_q0[0:0];

assign trunc_ln215_fu_400_p1 = line_buffer_m_V_q0[0:0];

assign xor_ln841_1_fu_472_p2 = (tmp_98_fu_464_p3 ^ and_ln1355_1_fu_458_p2);

assign xor_ln841_2_fu_580_p2 = (tmp_100_fu_572_p3 ^ and_ln1355_2_fu_566_p2);

assign xor_ln841_3_fu_625_p2 = (tmp_102_fu_617_p3 ^ and_ln1355_3_fu_611_p2);

assign xor_ln841_4_fu_697_p2 = (tmp_104_fu_689_p3 ^ and_ln1355_4_fu_683_p2);

assign xor_ln841_5_fu_742_p2 = (tmp_106_fu_734_p3 ^ and_ln1355_5_fu_728_p2);

assign xor_ln841_6_fu_797_p2 = (tmp_108_fu_789_p3 ^ and_ln1355_6_fu_783_p2);

assign xor_ln841_7_fu_838_p2 = (tmp_110_fu_830_p3 ^ and_ln1355_7_fu_824_p2);

assign xor_ln841_8_fu_883_p2 = (tmp_112_fu_875_p3 ^ and_ln1355_8_fu_869_p2);

assign xor_ln841_fu_426_p2 = (tmp_96_fu_418_p3 ^ and_ln1355_fu_412_p2);

assign zext_ln79_10_fu_668_p1 = add_ln79_8_reg_1023;

assign zext_ln79_11_fu_497_p1 = add_ln1353_14_fu_492_p2;

assign zext_ln79_12_fu_506_p1 = add_ln79_9_fu_501_p2;

assign zext_ln79_13_fu_545_p1 = add_ln79_10_fu_541_p2;

assign zext_ln79_14_fu_768_p1 = add_ln79_11_reg_1033;

assign zext_ln79_1_fu_327_p1 = tmp_94_fu_319_p3;

assign zext_ln79_2_fu_339_p1 = tmp_95_fu_331_p3;

assign zext_ln79_3_fu_349_p1 = cc_V;

assign zext_ln79_4_fu_359_p1 = add_ln79_3_fu_353_p2;

assign zext_ln79_5_fu_395_p1 = add_ln79_4_fu_390_p2;

assign zext_ln79_6_fu_664_p1 = add_ln79_5_reg_1013;

assign zext_ln79_7_fu_370_p1 = add_ln1353_fu_364_p2;

assign zext_ln79_8_fu_380_p1 = add_ln79_6_fu_374_p2;

assign zext_ln79_9_fu_531_p1 = add_ln79_7_fu_527_p2;

assign zext_ln79_cast_fu_305_p1 = tmp_fu_297_p3;

assign zext_ln79_fu_309_p1 = bank_V;

always @ (posedge ap_clk) begin
    sub_ln79_reg_946[0] <= 1'b0;
    zext_ln79_3_reg_953[10:4] <= 7'b0000000;
    zext_ln79_7_reg_964[10:4] <= 7'b0000000;
    add_ln79_1_reg_986[0] <= 1'b0;
    zext_ln79_11_reg_997[10:4] <= 7'b0000000;
end

endmodule //conv3x3b
