-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bin_dense is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    wt_mem_V_2_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    wt_mem_V_2_ce0 : OUT STD_LOGIC;
    wt_mem_V_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    kh_mem_V_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    kh_mem_V_2_ce0 : OUT STD_LOGIC;
    kh_mem_V_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    dmem_V_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    dmem_V_2_ce0 : OUT STD_LOGIC;
    dmem_V_2_we0 : OUT STD_LOGIC;
    dmem_V_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dmem_V_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    layer_type_V : IN STD_LOGIC_VECTOR (1 downto 0);
    d_i_idx_V : IN STD_LOGIC_VECTOR (0 downto 0);
    d_o_idx_V : IN STD_LOGIC_VECTOR (0 downto 0);
    o_index_V_2 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of bin_dense is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv13_925 : STD_LOGIC_VECTOR (12 downto 0) := "0100100100101";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv9_40 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal o_offset_V_fu_378_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal o_offset_V_reg_1874 : STD_LOGIC_VECTOR (5 downto 0);
    signal dmem_V_1_addr_reg_1879 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln879_fu_419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_1894 : STD_LOGIC_VECTOR (0 downto 0);
    signal dmem_V_1_addr_2_reg_1899 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln209_fu_445_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln209_reg_1904 : STD_LOGIC_VECTOR (2 downto 0);
    signal dmem_V_1_load_reg_1909 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln700_10_fu_460_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln700_10_reg_1918 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln649_fu_470_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln649_reg_1923 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln887_fu_454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln180_fu_494_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln180_reg_1938 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_70_reg_1944 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_71_reg_1950 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_72_reg_1956 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_73_reg_1962 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_74_reg_1968 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_75_reg_1974 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_76_reg_1980 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln68_fu_1608_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln68_reg_1987 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln700_fu_1618_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln700_reg_1992 : STD_LOGIC_VECTOR (3 downto 0);
    signal sum_m_1_V_1_fu_1787_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal sum_m_1_V_2_fu_1794_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln700_12_fu_1807_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal add_ln700_11_fu_1825_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln887_4_fu_1801_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_3_fu_1831_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_3_reg_2020 : STD_LOGIC_VECTOR (0 downto 0);
    signal sum_m_V_1_09_reg_309 : STD_LOGIC_VECTOR (15 downto 0);
    signal sum_m_V_0_08_reg_321 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0348_0_0_0_reg_333 : STD_LOGIC_VECTOR (1 downto 0);
    signal phi_mul_reg_344 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_0257_1_0_0_reg_355 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0759_0_0_0_reg_367 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln637_fu_414_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln180_fu_432_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln887_fu_449_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln648_fu_489_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal select_ln879_fu_1862_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_2_fu_390_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_16_fu_382_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1371_fu_400_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_3_fu_404_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_s_fu_425_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1_fu_437_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln649_fu_466_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln648_fu_476_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_17_fu_481_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal xor_ln1357_fu_498_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_fu_504_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_512_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_520_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_528_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_536_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_544_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_552_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_560_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_568_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_576_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_584_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_592_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_600_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_608_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_616_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_624_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_632_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_640_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_648_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_656_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_664_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_672_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_680_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_688_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_696_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_704_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_712_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_720_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_728_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_736_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_fu_744_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_fu_752_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln_fu_760_p64 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln1355_fu_890_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln701_fu_894_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_fu_900_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_5_fu_910_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_6_fu_920_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_7_fu_930_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_8_fu_940_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_9_fu_950_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_10_fu_960_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_11_fu_970_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_12_fu_980_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_13_fu_990_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_14_fu_1000_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_15_fu_1010_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_50_fu_1020_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_51_fu_1030_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_52_fu_1040_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln1355_fu_1050_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln1355_1_fu_1054_p32 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_53_fu_1124_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_54_fu_1134_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_55_fu_1144_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_56_fu_1154_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_57_fu_1164_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_58_fu_1174_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_59_fu_1184_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_60_fu_1194_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_61_fu_1204_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_62_fu_1214_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_63_fu_1224_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_64_fu_1234_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_65_fu_1244_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_66_fu_1254_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_67_fu_1264_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_68_fu_1274_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln1355_2_fu_1284_p32 : STD_LOGIC_VECTOR (61 downto 0);
    signal zext_ln1355_2_fu_1350_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln1355_1_fu_1120_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal add_ln68_fu_1488_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_69_fu_1502_p4 : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln68_3_fu_1354_p31 : STD_LOGIC_VECTOR (59 downto 0);
    signal trunc_ln68_4_fu_1418_p31 : STD_LOGIC_VECTOR (59 downto 0);
    signal zext_ln68_1_fu_1512_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal add_ln68_1_fu_1516_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal add_ln68_3_fu_1482_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln68_2_fu_1522_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal zext_ln700_fu_1494_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln4_fu_1528_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln700_7_fu_1612_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln700_1_fu_1498_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln1_fu_1624_p16 : STD_LOGIC_VECTOR (59 downto 0);
    signal lshr_ln1503_3_fu_1654_p14 : STD_LOGIC_VECTOR (51 downto 0);
    signal zext_ln1503_2_fu_1677_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal zext_ln1503_fu_1681_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal zext_ln68_fu_1650_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal add_ln700_8_fu_1691_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal lshr_ln1503_4_fu_1697_p4 : STD_LOGIC_VECTOR (44 downto 0);
    signal zext_ln1503_4_fu_1707_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal add_ln700_9_fu_1711_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal add_ln700_13_fu_1685_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal trunc_ln1503_1_fu_1727_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln1503_2_fu_1737_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1503_1_fu_1717_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln5_fu_1720_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1503_1_fu_1753_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1503_fu_1747_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1503_2_fu_1759_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln_fu_1765_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1503_3_fu_1773_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sum_m_0_V_fu_1777_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln68_fu_1783_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln700_fu_1813_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln700_fu_1817_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln647_fu_1836_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln816_fu_1843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln555_fu_1840_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln816_fu_1849_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_77_fu_1853_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    p_0257_1_0_0_reg_355_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_fu_454_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                p_0257_1_0_0_reg_355 <= ap_const_lv16_0;
            elsif (((icmp_ln887_4_fu_1801_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                p_0257_1_0_0_reg_355 <= add_ln700_11_fu_1825_p2;
            end if; 
        end if;
    end process;

    p_0348_0_0_0_reg_333_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                p_0348_0_0_0_reg_333 <= add_ln700_10_reg_1918;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                p_0348_0_0_0_reg_333 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    p_0759_0_0_0_reg_367_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_fu_454_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                p_0759_0_0_0_reg_367 <= ap_const_lv2_0;
            elsif (((icmp_ln887_4_fu_1801_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                p_0759_0_0_0_reg_367 <= add_ln700_12_fu_1807_p2;
            end if; 
        end if;
    end process;

    phi_mul_reg_344_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                phi_mul_reg_344 <= add_ln649_reg_1923;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                phi_mul_reg_344 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_fu_454_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                add_ln649_reg_1923 <= add_ln649_fu_470_p2;
                trunc_ln180_reg_1938 <= trunc_ln180_fu_494_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln700_10_reg_1918 <= add_ln700_10_fu_460_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln700_reg_1992 <= add_ln700_fu_1618_p2;
                tmp_70_reg_1944 <= add_ln68_2_fu_1522_p2(59 downto 56);
                tmp_71_reg_1950 <= add_ln68_2_fu_1522_p2(51 downto 48);
                tmp_72_reg_1956 <= add_ln68_2_fu_1522_p2(43 downto 40);
                tmp_73_reg_1962 <= add_ln68_2_fu_1522_p2(35 downto 32);
                tmp_74_reg_1968 <= add_ln68_2_fu_1522_p2(27 downto 24);
                tmp_75_reg_1974 <= add_ln68_2_fu_1522_p2(19 downto 16);
                tmp_76_reg_1980 <= add_ln68_2_fu_1522_p2(11 downto 8);
                trunc_ln68_reg_1987 <= trunc_ln68_fu_1608_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                    dmem_V_1_addr_2_reg_1899(11) <= zext_ln180_fu_432_p1(12 - 1 downto 0)(11);
                dmem_V_1_load_reg_1909 <= dmem_V_2_q0;
                icmp_ln879_reg_1894 <= icmp_ln879_fu_419_p2;
                    zext_ln209_reg_1904(1) <= zext_ln209_fu_445_p1(1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    dmem_V_1_addr_reg_1879(8 downto 0) <= zext_ln637_fu_414_p1(12 - 1 downto 0)(8 downto 0);    dmem_V_1_addr_reg_1879(11 downto 10) <= zext_ln637_fu_414_p1(12 - 1 downto 0)(11 downto 10);
                o_offset_V_reg_1874 <= o_offset_V_fu_378_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln887_4_fu_1801_p2 = ap_const_lv1_1))) then
                icmp_ln879_3_reg_2020 <= icmp_ln879_3_fu_1831_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                sum_m_V_0_08_reg_321 <= sum_m_1_V_2_fu_1794_p3;
                sum_m_V_1_09_reg_309 <= sum_m_1_V_1_fu_1787_p3;
            end if;
        end if;
    end process;
    dmem_V_1_addr_reg_1879(9) <= '0';
    dmem_V_1_addr_2_reg_1899(10 downto 0) <= "00000000000";
    zext_ln209_reg_1904(0) <= '0';
    zext_ln209_reg_1904(2) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, icmp_ln887_fu_454_p2, ap_CS_fsm_state6, icmp_ln887_4_fu_1801_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln887_fu_454_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln887_4_fu_1801_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    add_ln1503_1_fu_1753_p2 <= std_logic_vector(unsigned(zext_ln1503_1_fu_1717_p1) + unsigned(trunc_ln5_fu_1720_p3));
    add_ln1503_2_fu_1759_p2 <= std_logic_vector(unsigned(add_ln1503_1_fu_1753_p2) + unsigned(add_ln1503_fu_1747_p2));
    add_ln1503_fu_1747_p2 <= std_logic_vector(unsigned(trunc_ln1503_1_fu_1727_p4) + unsigned(trunc_ln1503_2_fu_1737_p4));
    add_ln648_fu_476_p2 <= std_logic_vector(unsigned(zext_ln649_fu_466_p1) + unsigned(zext_ln209_reg_1904));
    add_ln649_fu_470_p2 <= std_logic_vector(unsigned(ap_const_lv13_925) + unsigned(phi_mul_reg_344));
    add_ln68_1_fu_1516_p2 <= std_logic_vector(unsigned(trunc_ln68_3_fu_1354_p31) + unsigned(trunc_ln68_4_fu_1418_p31));
    add_ln68_2_fu_1522_p2 <= std_logic_vector(unsigned(zext_ln68_1_fu_1512_p1) + unsigned(add_ln68_1_fu_1516_p2));
    add_ln68_3_fu_1482_p2 <= std_logic_vector(unsigned(and_ln1355_1_fu_1054_p32) + unsigned(and_ln1355_2_fu_1284_p32));
    add_ln68_fu_1488_p2 <= std_logic_vector(unsigned(zext_ln1355_2_fu_1350_p1) + unsigned(zext_ln1355_1_fu_1120_p1));
    add_ln700_10_fu_460_p2 <= std_logic_vector(unsigned(p_0348_0_0_0_reg_333) + unsigned(ap_const_lv2_1));
    add_ln700_11_fu_1825_p2 <= std_logic_vector(unsigned(select_ln700_fu_1817_p3) + unsigned(p_0257_1_0_0_reg_355));
    add_ln700_12_fu_1807_p2 <= std_logic_vector(unsigned(p_0759_0_0_0_reg_367) + unsigned(ap_const_lv2_1));
    add_ln700_13_fu_1685_p2 <= std_logic_vector(unsigned(and_ln1_fu_1624_p16) + unsigned(zext_ln1503_2_fu_1677_p1));
    add_ln700_7_fu_1612_p2 <= std_logic_vector(unsigned(zext_ln700_fu_1494_p1) + unsigned(trunc_ln4_fu_1528_p4));
    add_ln700_8_fu_1691_p2 <= std_logic_vector(unsigned(zext_ln1503_fu_1681_p1) + unsigned(zext_ln68_fu_1650_p1));
    add_ln700_9_fu_1711_p2 <= std_logic_vector(unsigned(zext_ln1503_4_fu_1707_p1) + unsigned(add_ln700_8_fu_1691_p2));
    add_ln700_fu_1618_p2 <= std_logic_vector(unsigned(add_ln700_7_fu_1612_p2) + unsigned(zext_ln700_1_fu_1498_p1));
    and_ln1355_1_fu_1054_p32 <= ((((((((((((((((((((((((((((((tmp_4_fu_900_p4 & ap_const_lv2_0) & tmp_5_fu_910_p4) & ap_const_lv2_0) & tmp_6_fu_920_p4) & ap_const_lv2_0) & tmp_7_fu_930_p4) & ap_const_lv2_0) & tmp_8_fu_940_p4) & ap_const_lv2_0) & tmp_9_fu_950_p4) & ap_const_lv2_0) & tmp_10_fu_960_p4) & ap_const_lv2_0) & tmp_11_fu_970_p4) & ap_const_lv2_0) & tmp_12_fu_980_p4) & ap_const_lv2_0) & tmp_13_fu_990_p4) & ap_const_lv2_0) & tmp_14_fu_1000_p4) & ap_const_lv2_0) & tmp_15_fu_1010_p4) & ap_const_lv2_0) & tmp_50_fu_1020_p4) & ap_const_lv2_0) & tmp_51_fu_1030_p4) & ap_const_lv2_0) & tmp_52_fu_1040_p4) & ap_const_lv2_0) & trunc_ln1355_fu_1050_p1);
    and_ln1355_2_fu_1284_p32 <= ((((((((((((((((((((((((((((((tmp_53_fu_1124_p4 & ap_const_lv2_0) & tmp_54_fu_1134_p4) & ap_const_lv2_0) & tmp_55_fu_1144_p4) & ap_const_lv2_0) & tmp_56_fu_1154_p4) & ap_const_lv2_0) & tmp_57_fu_1164_p4) & ap_const_lv2_0) & tmp_58_fu_1174_p4) & ap_const_lv2_0) & tmp_59_fu_1184_p4) & ap_const_lv2_0) & tmp_60_fu_1194_p4) & ap_const_lv2_0) & tmp_61_fu_1204_p4) & ap_const_lv2_0) & tmp_62_fu_1214_p4) & ap_const_lv2_0) & tmp_63_fu_1224_p4) & ap_const_lv2_0) & tmp_64_fu_1234_p4) & ap_const_lv2_0) & tmp_65_fu_1244_p4) & ap_const_lv2_0) & tmp_66_fu_1254_p4) & ap_const_lv2_0) & tmp_67_fu_1264_p4) & ap_const_lv2_0) & tmp_68_fu_1274_p4);
    and_ln1_fu_1624_p16 <= ((((((((((((((tmp_70_reg_1944 & ap_const_lv4_0) & tmp_71_reg_1950) & ap_const_lv4_0) & tmp_72_reg_1956) & ap_const_lv4_0) & tmp_73_reg_1962) & ap_const_lv4_0) & tmp_74_reg_1968) & ap_const_lv4_0) & tmp_75_reg_1974) & ap_const_lv4_0) & tmp_76_reg_1980) & ap_const_lv4_0) & trunc_ln68_reg_1987);
    and_ln_fu_760_p64 <= ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((tmp_18_fu_504_p3 & ap_const_lv1_0) & tmp_19_fu_512_p3) & ap_const_lv1_0) & tmp_20_fu_520_p3) & ap_const_lv1_0) & tmp_21_fu_528_p3) & ap_const_lv1_0) & tmp_22_fu_536_p3) & ap_const_lv1_0) & tmp_23_fu_544_p3) & ap_const_lv1_0) & tmp_24_fu_552_p3) & ap_const_lv1_0) & tmp_25_fu_560_p3) & ap_const_lv1_0) & tmp_26_fu_568_p3) & ap_const_lv1_0) & tmp_27_fu_576_p3) & ap_const_lv1_0) & tmp_28_fu_584_p3) & ap_const_lv1_0) & tmp_29_fu_592_p3) & ap_const_lv1_0) & tmp_30_fu_600_p3) & ap_const_lv1_0) & tmp_31_fu_608_p3) & ap_const_lv1_0) & tmp_32_fu_616_p3) & ap_const_lv1_0) & tmp_33_fu_624_p3) & ap_const_lv1_0) & tmp_34_fu_632_p3) & ap_const_lv1_0) & tmp_35_fu_640_p3) & ap_const_lv1_0) & tmp_36_fu_648_p3) & ap_const_lv1_0) & tmp_37_fu_656_p3) & ap_const_lv1_0) & tmp_38_fu_664_p3) & ap_const_lv1_0) & tmp_39_fu_672_p3) & ap_const_lv1_0) & tmp_40_fu_680_p3) & ap_const_lv1_0) & tmp_41_fu_688_p3) & ap_const_lv1_0) & tmp_42_fu_696_p3) & ap_const_lv1_0) & tmp_43_fu_704_p3) & ap_const_lv1_0) & tmp_44_fu_712_p3) & ap_const_lv1_0) & tmp_45_fu_720_p3) & ap_const_lv1_0) & tmp_46_fu_728_p3) & ap_const_lv1_0) & tmp_47_fu_736_p3) & ap_const_lv1_0) & tmp_48_fu_744_p3) & ap_const_lv1_0) & tmp_49_fu_752_p3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    dmem_V_2_address0_assign_proc : process(ap_CS_fsm_state1, dmem_V_1_addr_reg_1879, dmem_V_1_addr_2_reg_1899, ap_CS_fsm_state3, zext_ln637_fu_414_p1, zext_ln648_fu_489_p1, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dmem_V_2_address0 <= dmem_V_1_addr_2_reg_1899;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            dmem_V_2_address0 <= dmem_V_1_addr_reg_1879;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            dmem_V_2_address0 <= zext_ln648_fu_489_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            dmem_V_2_address0 <= zext_ln637_fu_414_p1(12 - 1 downto 0);
        else 
            dmem_V_2_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    dmem_V_2_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            dmem_V_2_ce0 <= ap_const_logic_1;
        else 
            dmem_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dmem_V_2_d0_assign_proc : process(ap_CS_fsm_state7, select_ln879_fu_1862_p3, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dmem_V_2_d0 <= ap_const_lv64_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            dmem_V_2_d0 <= select_ln879_fu_1862_p3;
        else 
            dmem_V_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dmem_V_2_we0_assign_proc : process(icmp_ln879_3_reg_2020, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln879_3_reg_2020 = ap_const_lv1_1)))) then 
            dmem_V_2_we0 <= ap_const_logic_1;
        else 
            dmem_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln816_fu_1843_p2 <= "1" when (signed(p_0257_1_0_0_reg_355) < signed(trunc_ln647_fu_1836_p1)) else "0";
    icmp_ln879_3_fu_1831_p2 <= "1" when (layer_type_V = ap_const_lv2_3) else "0";
    icmp_ln879_fu_419_p2 <= "1" when (layer_type_V = ap_const_lv2_2) else "0";
    icmp_ln887_4_fu_1801_p2 <= "1" when (p_0759_0_0_0_reg_367 = ap_const_lv2_2) else "0";
    icmp_ln887_fu_454_p2 <= "1" when (p_0348_0_0_0_reg_333 = ap_const_lv2_2) else "0";
    kh_mem_V_2_address0 <= ap_const_lv64_0(6 - 1 downto 0);

    kh_mem_V_2_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            kh_mem_V_2_ce0 <= ap_const_logic_1;
        else 
            kh_mem_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln1503_3_fu_1654_p14 <= ((((((((((((tmp_70_reg_1944 & ap_const_lv4_0) & tmp_71_reg_1950) & ap_const_lv4_0) & tmp_72_reg_1956) & ap_const_lv4_0) & tmp_73_reg_1962) & ap_const_lv4_0) & tmp_74_reg_1968) & ap_const_lv4_0) & tmp_75_reg_1974) & ap_const_lv4_0) & tmp_76_reg_1980);
    lshr_ln1503_4_fu_1697_p4 <= add_ln700_8_fu_1691_p2(60 downto 16);
    o_offset_V_fu_378_p1 <= o_index_V_2(6 - 1 downto 0);
    select_ln700_fu_1817_p3 <= 
        sum_m_V_1_09_reg_309 when (trunc_ln700_fu_1813_p1(0) = '1') else 
        sum_m_V_0_08_reg_321;
    select_ln879_fu_1862_p3 <= 
        tmp_77_fu_1853_p4 when (icmp_ln879_reg_1894(0) = '1') else 
        dmem_V_1_load_reg_1909;
        sext_ln68_fu_1783_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sum_m_0_V_fu_1777_p2),16));

    shl_ln_fu_1765_p3 <= (add_ln1503_2_fu_1759_p2 & ap_const_lv1_0);
    sub_ln701_fu_894_p2 <= std_logic_vector(unsigned(xor_ln1357_fu_498_p2) - unsigned(zext_ln1355_fu_890_p1));
    sum_m_0_V_fu_1777_p2 <= std_logic_vector(unsigned(ap_const_lv9_40) - unsigned(zext_ln1503_3_fu_1773_p1));
    sum_m_1_V_1_fu_1787_p3 <= 
        sext_ln68_fu_1783_p1 when (trunc_ln180_reg_1938(0) = '1') else 
        sum_m_V_1_09_reg_309;
    sum_m_1_V_2_fu_1794_p3 <= 
        sum_m_V_0_08_reg_321 when (trunc_ln180_reg_1938(0) = '1') else 
        sext_ln68_fu_1783_p1;
    tmp_10_fu_960_p4 <= sub_ln701_fu_894_p2(37 downto 36);
    tmp_11_fu_970_p4 <= sub_ln701_fu_894_p2(33 downto 32);
    tmp_12_fu_980_p4 <= sub_ln701_fu_894_p2(29 downto 28);
    tmp_13_fu_990_p4 <= sub_ln701_fu_894_p2(25 downto 24);
    tmp_14_fu_1000_p4 <= sub_ln701_fu_894_p2(21 downto 20);
    tmp_15_fu_1010_p4 <= sub_ln701_fu_894_p2(17 downto 16);
    tmp_16_fu_382_p3 <= o_index_V_2(6 downto 6);
    tmp_17_fu_481_p3 <= (add_ln648_fu_476_p2 & ap_const_lv10_0);
    tmp_18_fu_504_p3 <= xor_ln1357_fu_498_p2(63 downto 63);
    tmp_19_fu_512_p3 <= xor_ln1357_fu_498_p2(61 downto 61);
    tmp_1_fu_437_p3 <= (d_i_idx_V & ap_const_lv1_0);
    tmp_20_fu_520_p3 <= xor_ln1357_fu_498_p2(59 downto 59);
    tmp_21_fu_528_p3 <= xor_ln1357_fu_498_p2(57 downto 57);
    tmp_22_fu_536_p3 <= xor_ln1357_fu_498_p2(55 downto 55);
    tmp_23_fu_544_p3 <= xor_ln1357_fu_498_p2(53 downto 53);
    tmp_24_fu_552_p3 <= xor_ln1357_fu_498_p2(51 downto 51);
    tmp_25_fu_560_p3 <= xor_ln1357_fu_498_p2(49 downto 49);
    tmp_26_fu_568_p3 <= xor_ln1357_fu_498_p2(47 downto 47);
    tmp_27_fu_576_p3 <= xor_ln1357_fu_498_p2(45 downto 45);
    tmp_28_fu_584_p3 <= xor_ln1357_fu_498_p2(43 downto 43);
    tmp_29_fu_592_p3 <= xor_ln1357_fu_498_p2(41 downto 41);
    tmp_2_fu_390_p4 <= o_index_V_2(15 downto 7);
    tmp_30_fu_600_p3 <= xor_ln1357_fu_498_p2(39 downto 39);
    tmp_31_fu_608_p3 <= xor_ln1357_fu_498_p2(37 downto 37);
    tmp_32_fu_616_p3 <= xor_ln1357_fu_498_p2(35 downto 35);
    tmp_33_fu_624_p3 <= xor_ln1357_fu_498_p2(33 downto 33);
    tmp_34_fu_632_p3 <= xor_ln1357_fu_498_p2(31 downto 31);
    tmp_35_fu_640_p3 <= xor_ln1357_fu_498_p2(29 downto 29);
    tmp_36_fu_648_p3 <= xor_ln1357_fu_498_p2(27 downto 27);
    tmp_37_fu_656_p3 <= xor_ln1357_fu_498_p2(25 downto 25);
    tmp_38_fu_664_p3 <= xor_ln1357_fu_498_p2(23 downto 23);
    tmp_39_fu_672_p3 <= xor_ln1357_fu_498_p2(21 downto 21);
    tmp_3_fu_404_p4 <= ((d_o_idx_V & tmp_16_fu_382_p3) & zext_ln1371_fu_400_p1);
    tmp_40_fu_680_p3 <= xor_ln1357_fu_498_p2(19 downto 19);
    tmp_41_fu_688_p3 <= xor_ln1357_fu_498_p2(17 downto 17);
    tmp_42_fu_696_p3 <= xor_ln1357_fu_498_p2(15 downto 15);
    tmp_43_fu_704_p3 <= xor_ln1357_fu_498_p2(13 downto 13);
    tmp_44_fu_712_p3 <= xor_ln1357_fu_498_p2(11 downto 11);
    tmp_45_fu_720_p3 <= xor_ln1357_fu_498_p2(9 downto 9);
    tmp_46_fu_728_p3 <= xor_ln1357_fu_498_p2(7 downto 7);
    tmp_47_fu_736_p3 <= xor_ln1357_fu_498_p2(5 downto 5);
    tmp_48_fu_744_p3 <= xor_ln1357_fu_498_p2(3 downto 3);
    tmp_49_fu_752_p3 <= xor_ln1357_fu_498_p2(1 downto 1);
    tmp_4_fu_900_p4 <= sub_ln701_fu_894_p2(61 downto 60);
    tmp_50_fu_1020_p4 <= sub_ln701_fu_894_p2(13 downto 12);
    tmp_51_fu_1030_p4 <= sub_ln701_fu_894_p2(9 downto 8);
    tmp_52_fu_1040_p4 <= sub_ln701_fu_894_p2(5 downto 4);
    tmp_53_fu_1124_p4 <= sub_ln701_fu_894_p2(63 downto 62);
    tmp_54_fu_1134_p4 <= sub_ln701_fu_894_p2(59 downto 58);
    tmp_55_fu_1144_p4 <= sub_ln701_fu_894_p2(55 downto 54);
    tmp_56_fu_1154_p4 <= sub_ln701_fu_894_p2(51 downto 50);
    tmp_57_fu_1164_p4 <= sub_ln701_fu_894_p2(47 downto 46);
    tmp_58_fu_1174_p4 <= sub_ln701_fu_894_p2(43 downto 42);
    tmp_59_fu_1184_p4 <= sub_ln701_fu_894_p2(39 downto 38);
    tmp_5_fu_910_p4 <= sub_ln701_fu_894_p2(57 downto 56);
    tmp_60_fu_1194_p4 <= sub_ln701_fu_894_p2(35 downto 34);
    tmp_61_fu_1204_p4 <= sub_ln701_fu_894_p2(31 downto 30);
    tmp_62_fu_1214_p4 <= sub_ln701_fu_894_p2(27 downto 26);
    tmp_63_fu_1224_p4 <= sub_ln701_fu_894_p2(23 downto 22);
    tmp_64_fu_1234_p4 <= sub_ln701_fu_894_p2(19 downto 18);
    tmp_65_fu_1244_p4 <= sub_ln701_fu_894_p2(15 downto 14);
    tmp_66_fu_1254_p4 <= sub_ln701_fu_894_p2(11 downto 10);
    tmp_67_fu_1264_p4 <= sub_ln701_fu_894_p2(7 downto 6);
    tmp_68_fu_1274_p4 <= sub_ln701_fu_894_p2(3 downto 2);
    tmp_69_fu_1502_p4 <= add_ln68_fu_1488_p2(62 downto 4);
    tmp_6_fu_920_p4 <= sub_ln701_fu_894_p2(53 downto 52);
    
    tmp_77_fu_1853_p4_proc : process(dmem_V_1_load_reg_1909, zext_ln555_fu_1840_p1, zext_ln816_fu_1849_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_77_fu_1853_p4 <= dmem_V_1_load_reg_1909;
        if to_integer(unsigned(zext_ln555_fu_1840_p1)) >= dmem_V_1_load_reg_1909'low and to_integer(unsigned(zext_ln555_fu_1840_p1)) <= dmem_V_1_load_reg_1909'high then
            result(0) := '0';
            for i in zext_ln816_fu_1849_p1'range loop
                result(0) := result(0) or zext_ln816_fu_1849_p1(i);
            end loop;
            tmp_77_fu_1853_p4(to_integer(unsigned(zext_ln555_fu_1840_p1))) <= result(0);
        end if;
    end process;

    tmp_7_fu_930_p4 <= sub_ln701_fu_894_p2(49 downto 48);
    tmp_8_fu_940_p4 <= sub_ln701_fu_894_p2(45 downto 44);
    tmp_9_fu_950_p4 <= sub_ln701_fu_894_p2(41 downto 40);
    tmp_s_fu_425_p3 <= (d_o_idx_V & ap_const_lv11_0);
    trunc_ln1355_fu_1050_p1 <= sub_ln701_fu_894_p2(2 - 1 downto 0);
    trunc_ln1503_1_fu_1727_p4 <= add_ln700_9_fu_1711_p2(38 downto 32);
    trunc_ln1503_2_fu_1737_p4 <= add_ln700_13_fu_1685_p2(22 downto 16);
    trunc_ln180_fu_494_p1 <= p_0348_0_0_0_reg_333(1 - 1 downto 0);
    trunc_ln4_fu_1528_p4 <= add_ln68_3_fu_1482_p2(7 downto 4);
    trunc_ln5_fu_1720_p3 <= (ap_const_lv3_0 & tmp_76_reg_1980);
    trunc_ln647_fu_1836_p1 <= kh_mem_V_2_q0(16 - 1 downto 0);
    trunc_ln68_3_fu_1354_p31 <= (((((((((((((((((((((((((((((ap_const_lv2_0 & tmp_5_fu_910_p4) & ap_const_lv2_0) & tmp_6_fu_920_p4) & ap_const_lv2_0) & tmp_7_fu_930_p4) & ap_const_lv2_0) & tmp_8_fu_940_p4) & ap_const_lv2_0) & tmp_9_fu_950_p4) & ap_const_lv2_0) & tmp_10_fu_960_p4) & ap_const_lv2_0) & tmp_11_fu_970_p4) & ap_const_lv2_0) & tmp_12_fu_980_p4) & ap_const_lv2_0) & tmp_13_fu_990_p4) & ap_const_lv2_0) & tmp_14_fu_1000_p4) & ap_const_lv2_0) & tmp_15_fu_1010_p4) & ap_const_lv2_0) & tmp_50_fu_1020_p4) & ap_const_lv2_0) & tmp_51_fu_1030_p4) & ap_const_lv2_0) & tmp_52_fu_1040_p4) & ap_const_lv2_0) & trunc_ln1355_fu_1050_p1);
    trunc_ln68_4_fu_1418_p31 <= (((((((((((((((((((((((((((((ap_const_lv2_0 & tmp_54_fu_1134_p4) & ap_const_lv2_0) & tmp_55_fu_1144_p4) & ap_const_lv2_0) & tmp_56_fu_1154_p4) & ap_const_lv2_0) & tmp_57_fu_1164_p4) & ap_const_lv2_0) & tmp_58_fu_1174_p4) & ap_const_lv2_0) & tmp_59_fu_1184_p4) & ap_const_lv2_0) & tmp_60_fu_1194_p4) & ap_const_lv2_0) & tmp_61_fu_1204_p4) & ap_const_lv2_0) & tmp_62_fu_1214_p4) & ap_const_lv2_0) & tmp_63_fu_1224_p4) & ap_const_lv2_0) & tmp_64_fu_1234_p4) & ap_const_lv2_0) & tmp_65_fu_1244_p4) & ap_const_lv2_0) & tmp_66_fu_1254_p4) & ap_const_lv2_0) & tmp_67_fu_1264_p4) & ap_const_lv2_0) & tmp_68_fu_1274_p4);
    trunc_ln68_fu_1608_p1 <= add_ln68_2_fu_1522_p2(4 - 1 downto 0);
    trunc_ln700_fu_1813_p1 <= p_0759_0_0_0_reg_367(1 - 1 downto 0);
    wt_mem_V_2_address0 <= zext_ln887_fu_449_p1(13 - 1 downto 0);

    wt_mem_V_2_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            wt_mem_V_2_ce0 <= ap_const_logic_1;
        else 
            wt_mem_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln1357_fu_498_p2 <= (wt_mem_V_2_q0 xor dmem_V_2_q0);
    zext_ln1355_1_fu_1120_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln1355_1_fu_1054_p32),63));
    zext_ln1355_2_fu_1350_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln1355_2_fu_1284_p32),63));
    zext_ln1355_fu_890_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln_fu_760_p64),64));
    zext_ln1371_fu_400_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_390_p4),10));
    zext_ln1503_1_fu_1717_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln700_reg_1992),7));
    zext_ln1503_2_fu_1677_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1503_3_fu_1654_p14),60));
    zext_ln1503_3_fu_1773_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_1765_p3),9));
    zext_ln1503_4_fu_1707_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1503_4_fu_1697_p4),61));
    zext_ln1503_fu_1681_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1503_3_fu_1654_p14),61));
    zext_ln180_fu_432_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_425_p3),64));
    zext_ln209_fu_445_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_437_p3),3));
    zext_ln555_fu_1840_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(o_offset_V_reg_1874),32));
    zext_ln637_fu_414_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_404_p4),64));
    zext_ln648_fu_489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_17_fu_481_p3),64));
    zext_ln649_fu_466_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0348_0_0_0_reg_333),3));
    zext_ln68_1_fu_1512_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_69_fu_1502_p4),60));
    zext_ln68_fu_1650_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln1_fu_1624_p16),61));
    zext_ln700_1_fu_1498_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_68_fu_1274_p4),4));
    zext_ln700_fu_1494_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1355_fu_1050_p1),4));
    zext_ln816_fu_1849_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln816_fu_1843_p2),32));
    zext_ln887_fu_449_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(phi_mul_reg_344),64));
end behav;
