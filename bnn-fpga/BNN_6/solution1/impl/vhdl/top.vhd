-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    wt_i_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    wt_i_V_ce0 : OUT STD_LOGIC;
    wt_i_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    kh_i_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    kh_i_V_ce0 : OUT STD_LOGIC;
    kh_i_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    dmem_i_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    dmem_i_V_ce0 : OUT STD_LOGIC;
    dmem_i_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    dmem_o_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    dmem_o_V_ce0 : OUT STD_LOGIC;
    dmem_o_V_we0 : OUT STD_LOGIC;
    dmem_o_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    n_inputs_V : IN STD_LOGIC_VECTOR (15 downto 0);
    n_outputs_V : IN STD_LOGIC_VECTOR (15 downto 0);
    input_words_V : IN STD_LOGIC_VECTOR (15 downto 0);
    output_words_V : IN STD_LOGIC_VECTOR (15 downto 0);
    layer_mode_V : IN STD_LOGIC_VECTOR (2 downto 0);
    dmem_mode_V : IN STD_LOGIC_VECTOR (0 downto 0);
    width_mode_V : IN STD_LOGIC_VECTOR (1 downto 0);
    norm_mode_V : IN STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "top,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k70t-fbv676-1,HLS_INPUT_CLOCK=12.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.489286,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=61,HLS_SYN_DSP=1,HLS_SYN_FF=2664,HLS_SYN_LUT=12049,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (12 downto 0) := "0000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (12 downto 0) := "0000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (12 downto 0) := "0000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (12 downto 0) := "0000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (12 downto 0) := "0000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (12 downto 0) := "0000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (12 downto 0) := "0001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (12 downto 0) := "0010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (12 downto 0) := "0100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv13_124A : STD_LOGIC_VECTOR (12 downto 0) := "1001001001010";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv13_925 : STD_LOGIC_VECTOR (12 downto 0) := "0100100100101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv16_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal kh_index_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal o_index_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal dmem_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal dmem_V_ce0 : STD_LOGIC;
    signal dmem_V_we0 : STD_LOGIC;
    signal dmem_V_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dmem_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal wt_mem_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal wt_mem_V_ce0 : STD_LOGIC;
    signal wt_mem_V_we0 : STD_LOGIC;
    signal wt_mem_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal kh_mem_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal kh_mem_V_ce0 : STD_LOGIC;
    signal kh_mem_V_we0 : STD_LOGIC;
    signal kh_mem_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal layer_type_V_fu_446_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal layer_type_V_reg_902 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln792_fu_456_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln792_reg_907 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln780_fu_470_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln780_reg_912 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_fu_478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal t_V_reg_917 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln735_fu_484_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln735_reg_924 : STD_LOGIC_VECTOR (15 downto 0);
    signal t_V_1_fu_488_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal t_V_1_reg_930 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_2_fu_496_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_2_reg_938 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln746_fu_510_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln746_reg_946 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln879_fu_524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_951 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln879_fu_530_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln879_reg_955 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln879_1_fu_534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_reg_960 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_4_fu_540_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_4_reg_964 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ret_V_2_fu_544_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal ret_V_2_reg_969 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_V_2_fu_554_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_V_2_reg_977 : STD_LOGIC_VECTOR (6 downto 0);
    signal ret_V_6_reg_982 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln887_fu_548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln887_3_fu_599_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln887_3_reg_997 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln760_fu_693_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal select_ln760_1_fu_701_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal i_V_fu_719_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal i_V_reg_1020 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal add_ln180_1_fu_747_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln180_1_reg_1025 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln887_1_fu_713_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_V_1_fu_768_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_V_1_reg_1038 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal zext_ln544_4_fu_774_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_4_reg_1043 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln887_2_fu_762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal nc_V_fu_821_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal nc_V_reg_1053 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal select_ln700_fu_829_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_bin_conv_fu_401_ap_ready : STD_LOGIC;
    signal grp_bin_conv_fu_401_ap_done : STD_LOGIC;
    signal ap_predicate_op159_call_state10 : BOOLEAN;
    signal ap_block_state10_on_subcall_done : BOOLEAN;
    signal add_ln700_fu_836_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_fp_conv_fu_417_ap_ready : STD_LOGIC;
    signal grp_fp_conv_fu_417_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_bin_conv_fu_401_ap_start : STD_LOGIC;
    signal grp_bin_conv_fu_401_ap_idle : STD_LOGIC;
    signal grp_bin_conv_fu_401_wt_mem_V_6_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_bin_conv_fu_401_wt_mem_V_6_ce0 : STD_LOGIC;
    signal grp_bin_conv_fu_401_dmem_V_6_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_bin_conv_fu_401_dmem_V_6_ce0 : STD_LOGIC;
    signal grp_bin_conv_fu_401_dmem_V_6_we0 : STD_LOGIC;
    signal grp_bin_conv_fu_401_dmem_V_6_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fp_conv_fu_417_ap_start : STD_LOGIC;
    signal grp_fp_conv_fu_417_ap_idle : STD_LOGIC;
    signal grp_fp_conv_fu_417_wt_mem_V_2_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fp_conv_fu_417_wt_mem_V_2_ce0 : STD_LOGIC;
    signal grp_fp_conv_fu_417_kh_mem_V_2_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fp_conv_fu_417_kh_mem_V_2_ce0 : STD_LOGIC;
    signal grp_fp_conv_fu_417_dmem_V_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fp_conv_fu_417_dmem_V_2_ce0 : STD_LOGIC;
    signal grp_fp_conv_fu_417_dmem_V_2_we0 : STD_LOGIC;
    signal grp_fp_conv_fu_417_dmem_V_2_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_bin_dense_fu_432_ap_start : STD_LOGIC;
    signal grp_bin_dense_fu_432_ap_done : STD_LOGIC;
    signal grp_bin_dense_fu_432_ap_idle : STD_LOGIC;
    signal grp_bin_dense_fu_432_ap_ready : STD_LOGIC;
    signal grp_bin_dense_fu_432_wt_mem_V_4_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_bin_dense_fu_432_wt_mem_V_4_ce0 : STD_LOGIC;
    signal grp_bin_dense_fu_432_kh_mem_V_4_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_bin_dense_fu_432_kh_mem_V_4_ce0 : STD_LOGIC;
    signal grp_bin_dense_fu_432_dmem_V_4_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_bin_dense_fu_432_dmem_V_4_ce0 : STD_LOGIC;
    signal grp_bin_dense_fu_432_dmem_V_4_we0 : STD_LOGIC;
    signal grp_bin_dense_fu_432_dmem_V_4_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_0701_0_reg_320 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0869_0_reg_332 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0229_0_reg_344 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_0492_0_reg_355 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal p_0595_0_reg_366 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal kh_index_V_new_1_reg_377 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal n_outputs_V_pn_reg_388 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_bin_conv_fu_401_ap_start_reg : STD_LOGIC := '0';
    signal grp_fp_conv_fu_417_ap_start_reg : STD_LOGIC := '0';
    signal grp_bin_dense_fu_432_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln544_3_fu_570_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_2_fu_575_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_fu_603_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln180_2_fu_621_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln180_1_fu_634_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln180_4_fu_671_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_1_fu_753_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln180_5_fu_758_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln180_3_fu_852_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln700_6_fu_840_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal p_Result_s_fu_460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln_fu_502_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln746_1_fu_514_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal words_per_image_V_fu_518_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ret_V_9_fu_580_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal ret_V_5_fu_590_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_fu_594_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_3_fu_608_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_2_fu_611_p5 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1_fu_626_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln887_fu_639_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln887_4_fu_648_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_652_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln887_fu_643_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln180_fu_661_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln180_fu_665_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal img_off_V_fu_676_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln879_2_fu_682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal img_idx_V_fu_687_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_fu_725_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_fu_709_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1372_fu_735_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln180_fu_739_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal xor_ln879_fu_779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln879_fu_784_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_fu_789_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_2_fu_803_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_1_fu_793_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln879_fu_813_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_845_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (12 downto 0);

    component bin_conv IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        wt_mem_V_6_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        wt_mem_V_6_ce0 : OUT STD_LOGIC;
        wt_mem_V_6_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        nc_V : IN STD_LOGIC_VECTOR (15 downto 0);
        dmem_V_6_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        dmem_V_6_ce0 : OUT STD_LOGIC;
        dmem_V_6_we0 : OUT STD_LOGIC;
        dmem_V_6_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        dmem_V_6_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        d_i_idx_V : IN STD_LOGIC_VECTOR (0 downto 0);
        d_o_idx_V : IN STD_LOGIC_VECTOR (0 downto 0);
        o_index_V_6 : IN STD_LOGIC_VECTOR (15 downto 0);
        width_mode_V : IN STD_LOGIC_VECTOR (1 downto 0);
        norm_mode_V : IN STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component fp_conv IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        wt_mem_V_2_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        wt_mem_V_2_ce0 : OUT STD_LOGIC;
        wt_mem_V_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        kh_mem_V_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        kh_mem_V_2_ce0 : OUT STD_LOGIC;
        kh_mem_V_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        dmem_V_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        dmem_V_2_ce0 : OUT STD_LOGIC;
        dmem_V_2_we0 : OUT STD_LOGIC;
        dmem_V_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        dmem_V_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        d_i_idx_V : IN STD_LOGIC_VECTOR (0 downto 0);
        d_o_idx_V : IN STD_LOGIC_VECTOR (0 downto 0);
        kh_index_V_2 : IN STD_LOGIC_VECTOR (0 downto 0);
        o_index_V_2 : IN STD_LOGIC_VECTOR (15 downto 0);
        N : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component bin_dense IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        wt_mem_V_4_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        wt_mem_V_4_ce0 : OUT STD_LOGIC;
        wt_mem_V_4_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        kh_mem_V_4_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        kh_mem_V_4_ce0 : OUT STD_LOGIC;
        kh_mem_V_4_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        dmem_V_4_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        dmem_V_4_ce0 : OUT STD_LOGIC;
        dmem_V_4_we0 : OUT STD_LOGIC;
        dmem_V_4_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        dmem_V_4_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        layer_type_V : IN STD_LOGIC_VECTOR (1 downto 0);
        d_i_idx_V : IN STD_LOGIC_VECTOR (0 downto 0);
        d_o_idx_V : IN STD_LOGIC_VECTOR (0 downto 0);
        o_index_V_4 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component top_dmem_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component top_wt_mem_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component top_kh_mem_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    dmem_V_U : component top_dmem_V
    generic map (
        DataWidth => 64,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dmem_V_address0,
        ce0 => dmem_V_ce0,
        we0 => dmem_V_we0,
        d0 => dmem_V_d0,
        q0 => dmem_V_q0);

    wt_mem_V_U : component top_wt_mem_V
    generic map (
        DataWidth => 64,
        AddressRange => 4682,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => wt_mem_V_address0,
        ce0 => wt_mem_V_ce0,
        we0 => wt_mem_V_we0,
        d0 => wt_i_V_q0,
        q0 => wt_mem_V_q0);

    kh_mem_V_U : component top_kh_mem_V
    generic map (
        DataWidth => 64,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kh_mem_V_address0,
        ce0 => kh_mem_V_ce0,
        we0 => kh_mem_V_we0,
        d0 => kh_i_V_q0,
        q0 => kh_mem_V_q0);

    grp_bin_conv_fu_401 : component bin_conv
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bin_conv_fu_401_ap_start,
        ap_done => grp_bin_conv_fu_401_ap_done,
        ap_idle => grp_bin_conv_fu_401_ap_idle,
        ap_ready => grp_bin_conv_fu_401_ap_ready,
        wt_mem_V_6_address0 => grp_bin_conv_fu_401_wt_mem_V_6_address0,
        wt_mem_V_6_ce0 => grp_bin_conv_fu_401_wt_mem_V_6_ce0,
        wt_mem_V_6_q0 => wt_mem_V_q0,
        nc_V => nc_V_reg_1053,
        dmem_V_6_address0 => grp_bin_conv_fu_401_dmem_V_6_address0,
        dmem_V_6_ce0 => grp_bin_conv_fu_401_dmem_V_6_ce0,
        dmem_V_6_we0 => grp_bin_conv_fu_401_dmem_V_6_we0,
        dmem_V_6_d0 => grp_bin_conv_fu_401_dmem_V_6_d0,
        dmem_V_6_q0 => dmem_V_q0,
        d_i_idx_V => dmem_mode_V,
        d_o_idx_V => r_V_2_reg_938,
        o_index_V_6 => t_V_1_reg_930,
        width_mode_V => width_mode_V,
        norm_mode_V => norm_mode_V);

    grp_fp_conv_fu_417 : component fp_conv
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fp_conv_fu_417_ap_start,
        ap_done => grp_fp_conv_fu_417_ap_done,
        ap_idle => grp_fp_conv_fu_417_ap_idle,
        ap_ready => grp_fp_conv_fu_417_ap_ready,
        wt_mem_V_2_address0 => grp_fp_conv_fu_417_wt_mem_V_2_address0,
        wt_mem_V_2_ce0 => grp_fp_conv_fu_417_wt_mem_V_2_ce0,
        wt_mem_V_2_q0 => wt_mem_V_q0,
        kh_mem_V_2_address0 => grp_fp_conv_fu_417_kh_mem_V_2_address0,
        kh_mem_V_2_ce0 => grp_fp_conv_fu_417_kh_mem_V_2_ce0,
        kh_mem_V_2_q0 => kh_mem_V_q0,
        dmem_V_2_address0 => grp_fp_conv_fu_417_dmem_V_2_address0,
        dmem_V_2_ce0 => grp_fp_conv_fu_417_dmem_V_2_ce0,
        dmem_V_2_we0 => grp_fp_conv_fu_417_dmem_V_2_we0,
        dmem_V_2_d0 => grp_fp_conv_fu_417_dmem_V_2_d0,
        dmem_V_2_q0 => dmem_V_q0,
        d_i_idx_V => dmem_mode_V,
        d_o_idx_V => r_V_2_reg_938,
        kh_index_V_2 => t_V_reg_917,
        o_index_V_2 => t_V_1_reg_930,
        N => n_outputs_V);

    grp_bin_dense_fu_432 : component bin_dense
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bin_dense_fu_432_ap_start,
        ap_done => grp_bin_dense_fu_432_ap_done,
        ap_idle => grp_bin_dense_fu_432_ap_idle,
        ap_ready => grp_bin_dense_fu_432_ap_ready,
        wt_mem_V_4_address0 => grp_bin_dense_fu_432_wt_mem_V_4_address0,
        wt_mem_V_4_ce0 => grp_bin_dense_fu_432_wt_mem_V_4_ce0,
        wt_mem_V_4_q0 => wt_mem_V_q0,
        kh_mem_V_4_address0 => grp_bin_dense_fu_432_kh_mem_V_4_address0,
        kh_mem_V_4_ce0 => grp_bin_dense_fu_432_kh_mem_V_4_ce0,
        kh_mem_V_4_q0 => kh_mem_V_q0,
        dmem_V_4_address0 => grp_bin_dense_fu_432_dmem_V_4_address0,
        dmem_V_4_ce0 => grp_bin_dense_fu_432_dmem_V_4_ce0,
        dmem_V_4_we0 => grp_bin_dense_fu_432_dmem_V_4_we0,
        dmem_V_4_d0 => grp_bin_dense_fu_432_dmem_V_4_d0,
        dmem_V_4_q0 => dmem_V_q0,
        layer_type_V => layer_type_V_reg_902,
        d_i_idx_V => dmem_mode_V,
        d_o_idx_V => r_V_2_reg_938,
        o_index_V_4 => t_V_1_reg_930);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_bin_conv_fu_401_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_bin_conv_fu_401_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    grp_bin_conv_fu_401_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_bin_conv_fu_401_ap_ready = ap_const_logic_1)) then 
                    grp_bin_conv_fu_401_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_bin_dense_fu_432_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_bin_dense_fu_432_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln887_2_fu_762_p2 = ap_const_lv1_1) and (icmp_ln879_1_reg_960 = ap_const_lv1_0) and (icmp_ln879_reg_951 = ap_const_lv1_0))) then 
                    grp_bin_dense_fu_432_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_bin_dense_fu_432_ap_ready = ap_const_logic_1)) then 
                    grp_bin_dense_fu_432_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fp_conv_fu_417_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fp_conv_fu_417_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln887_2_fu_762_p2 = ap_const_lv1_1) and (icmp_ln879_1_reg_960 = ap_const_lv1_1))) then 
                    grp_fp_conv_fu_417_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fp_conv_fu_417_ap_ready = ap_const_logic_1)) then 
                    grp_fp_conv_fu_417_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    kh_index_V_new_1_reg_377_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_bin_dense_fu_432_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                kh_index_V_new_1_reg_377 <= zext_ln735_reg_924;
            elsif (((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln879_1_reg_960 = ap_const_lv1_0) and (icmp_ln879_reg_951 = ap_const_lv1_1))) then 
                kh_index_V_new_1_reg_377 <= select_ln700_fu_829_p3;
            elsif (((grp_fp_conv_fu_417_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                kh_index_V_new_1_reg_377 <= add_ln700_fu_836_p2;
            end if; 
        end if;
    end process;

    n_outputs_V_pn_reg_388_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln879_1_reg_960 = ap_const_lv1_0) and (icmp_ln879_reg_951 = ap_const_lv1_1))) then 
                n_outputs_V_pn_reg_388 <= ap_const_lv16_1;
            elsif ((((grp_bin_dense_fu_432_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((grp_fp_conv_fu_417_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
                n_outputs_V_pn_reg_388 <= n_outputs_V;
            end if; 
        end if;
    end process;

    p_0229_0_reg_344_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                p_0229_0_reg_344 <= i_V_2_reg_977;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                p_0229_0_reg_344 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    p_0492_0_reg_355_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln887_fu_548_p2 = ap_const_lv1_1))) then 
                p_0492_0_reg_355 <= ap_const_lv13_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                p_0492_0_reg_355 <= i_V_reg_1020;
            end if; 
        end if;
    end process;

    p_0595_0_reg_366_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln887_1_fu_713_p2 = ap_const_lv1_1))) then 
                p_0595_0_reg_366 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                p_0595_0_reg_366 <= i_V_1_reg_1038;
            end if; 
        end if;
    end process;

    p_0701_0_reg_320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                p_0701_0_reg_320 <= select_ln760_fu_693_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                p_0701_0_reg_320 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    p_0869_0_reg_332_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                p_0869_0_reg_332 <= select_ln760_1_fu_701_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                p_0869_0_reg_332 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln887_1_fu_713_p2 = ap_const_lv1_0))) then
                add_ln180_1_reg_1025 <= add_ln180_1_fu_747_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                i_V_1_reg_1038 <= i_V_1_fu_768_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_2_reg_977 <= i_V_2_fu_554_p2;
                ret_V_2_reg_969 <= ret_V_2_fu_544_p1;
                ret_V_4_reg_964 <= ret_V_4_fu_540_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                i_V_reg_1020 <= i_V_fu_719_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                icmp_ln879_1_reg_960 <= icmp_ln879_1_fu_534_p2;
                icmp_ln879_reg_951 <= icmp_ln879_fu_524_p2;
                layer_type_V_reg_902 <= layer_mode_V(2 downto 1);
                r_V_2_reg_938 <= r_V_2_fu_496_p2;
                t_V_1_reg_930 <= t_V_1_fu_488_p3;
                t_V_reg_917 <= t_V_fu_478_p2;
                trunc_ln780_reg_912 <= trunc_ln780_fu_470_p1;
                trunc_ln792_reg_907 <= trunc_ln792_fu_456_p1;
                    zext_ln735_reg_924(0) <= zext_ln735_fu_484_p1(0);
                    zext_ln746_reg_946(2 downto 1) <= zext_ln746_fu_510_p1(2 downto 1);
                    zext_ln879_reg_955(4 downto 0) <= zext_ln879_fu_530_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                kh_index_V <= kh_index_V_new_1_reg_377;
                o_index_V <= add_ln700_6_fu_840_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                nc_V_reg_1053 <= nc_V_fu_821_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln887_fu_548_p2 = ap_const_lv1_0) and (icmp_ln879_1_reg_960 = ap_const_lv1_0) and (icmp_ln879_reg_951 = ap_const_lv1_0))) then
                ret_V_6_reg_982 <= p_0229_0_reg_344(6 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln887_fu_548_p2 = ap_const_lv1_0) and (icmp_ln879_reg_951 = ap_const_lv1_1))) then
                trunc_ln887_3_reg_997 <= trunc_ln887_3_fu_599_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln887_2_fu_762_p2 = ap_const_lv1_0))) then
                    zext_ln544_4_reg_1043(6 downto 0) <= zext_ln544_4_fu_774_p1(6 downto 0);
            end if;
        end if;
    end process;
    zext_ln735_reg_924(15 downto 1) <= "000000000000000";
    zext_ln746_reg_946(0) <= '0';
    zext_ln746_reg_946(15 downto 3) <= "0000000000000";
    zext_ln879_reg_955(9 downto 5) <= "00000";
    zext_ln544_4_reg_1043(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln879_reg_951, icmp_ln879_1_reg_960, ap_CS_fsm_state2, icmp_ln887_fu_548_p2, ap_CS_fsm_state4, icmp_ln887_1_fu_713_p2, ap_CS_fsm_state6, icmp_ln887_2_fu_762_p2, ap_CS_fsm_state10, ap_block_state10_on_subcall_done, ap_CS_fsm_state11, grp_fp_conv_fu_417_ap_done, grp_bin_dense_fu_432_ap_done, ap_CS_fsm_state8)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln887_fu_548_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln887_1_fu_713_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln887_2_fu_762_p2 = ap_const_lv1_1) and (icmp_ln879_1_reg_960 = ap_const_lv1_0) and (icmp_ln879_reg_951 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln887_2_fu_762_p2 = ap_const_lv1_1) and (icmp_ln879_1_reg_960 = ap_const_lv1_0) and (icmp_ln879_reg_951 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln887_2_fu_762_p2 = ap_const_lv1_1) and (icmp_ln879_1_reg_960 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state8 => 
                if (((grp_bin_dense_fu_432_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((grp_fp_conv_fu_417_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXX";
        end case;
    end process;
    add_ln180_1_fu_747_p2 <= std_logic_vector(unsigned(zext_ln1372_fu_735_p1) + unsigned(select_ln180_fu_739_p3));
    add_ln180_fu_665_p2 <= std_logic_vector(unsigned(add_ln887_fu_643_p2) + unsigned(zext_ln180_fu_661_p1));
    add_ln700_6_fu_840_p2 <= std_logic_vector(unsigned(t_V_1_reg_930) + unsigned(n_outputs_V_pn_reg_388));
    add_ln700_fu_836_p2 <= std_logic_vector(unsigned(zext_ln735_reg_924) + unsigned(n_outputs_V));
    add_ln887_fu_643_p2 <= std_logic_vector(unsigned(trunc_ln887_3_reg_997) + unsigned(zext_ln887_fu_639_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state10_on_subcall_done_assign_proc : process(grp_bin_conv_fu_401_ap_done, ap_predicate_op159_call_state10)
    begin
                ap_block_state10_on_subcall_done <= ((grp_bin_conv_fu_401_ap_done = ap_const_logic_0) and (ap_predicate_op159_call_state10 = ap_const_boolean_1));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op159_call_state10_assign_proc : process(icmp_ln879_reg_951, icmp_ln879_1_reg_960)
    begin
                ap_predicate_op159_call_state10 <= ((icmp_ln879_1_reg_960 = ap_const_lv1_0) and (icmp_ln879_reg_951 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    dmem_V_address0_assign_proc : process(icmp_ln879_reg_951, icmp_ln879_1_reg_960, ap_CS_fsm_state3, ap_CS_fsm_state10, ap_predicate_op159_call_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, grp_bin_conv_fu_401_dmem_V_6_address0, grp_fp_conv_fu_417_dmem_V_2_address0, grp_bin_dense_fu_432_dmem_V_4_address0, ap_CS_fsm_state8, zext_ln180_2_fu_621_p1, zext_ln180_1_fu_634_p1, zext_ln180_4_fu_671_p1, zext_ln180_3_fu_852_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dmem_V_address0 <= zext_ln180_3_fu_852_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln879_reg_951 = ap_const_lv1_1))) then 
            dmem_V_address0 <= zext_ln180_4_fu_671_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln879_1_reg_960 = ap_const_lv1_1) and (icmp_ln879_reg_951 = ap_const_lv1_0))) then 
            dmem_V_address0 <= zext_ln180_1_fu_634_p1(12 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln879_1_reg_960 = ap_const_lv1_0) and (icmp_ln879_reg_951 = ap_const_lv1_0))) then 
            dmem_V_address0 <= zext_ln180_2_fu_621_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dmem_V_address0 <= grp_bin_dense_fu_432_dmem_V_4_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            dmem_V_address0 <= grp_fp_conv_fu_417_dmem_V_2_address0;
        elsif (((ap_predicate_op159_call_state10 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            dmem_V_address0 <= grp_bin_conv_fu_401_dmem_V_6_address0;
        else 
            dmem_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    dmem_V_ce0_assign_proc : process(icmp_ln879_reg_951, icmp_ln879_1_reg_960, ap_CS_fsm_state3, ap_CS_fsm_state10, ap_predicate_op159_call_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, grp_bin_conv_fu_401_dmem_V_6_ce0, grp_fp_conv_fu_417_dmem_V_2_ce0, grp_bin_dense_fu_432_dmem_V_4_ce0, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln879_reg_951 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln879_1_reg_960 = ap_const_lv1_1) and (icmp_ln879_reg_951 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln879_1_reg_960 = ap_const_lv1_0) and (icmp_ln879_reg_951 = ap_const_lv1_0)))) then 
            dmem_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dmem_V_ce0 <= grp_bin_dense_fu_432_dmem_V_4_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            dmem_V_ce0 <= grp_fp_conv_fu_417_dmem_V_2_ce0;
        elsif (((ap_predicate_op159_call_state10 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            dmem_V_ce0 <= grp_bin_conv_fu_401_dmem_V_6_ce0;
        else 
            dmem_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dmem_V_d0_assign_proc : process(dmem_i_V_q0, icmp_ln879_reg_951, icmp_ln879_1_reg_960, ap_CS_fsm_state3, ap_CS_fsm_state10, ap_predicate_op159_call_state10, ap_CS_fsm_state11, grp_bin_conv_fu_401_dmem_V_6_d0, grp_fp_conv_fu_417_dmem_V_2_d0, grp_bin_dense_fu_432_dmem_V_4_d0, ap_CS_fsm_state8)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln879_reg_951 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln879_1_reg_960 = ap_const_lv1_1) and (icmp_ln879_reg_951 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln879_1_reg_960 = ap_const_lv1_0) and (icmp_ln879_reg_951 = ap_const_lv1_0)))) then 
            dmem_V_d0 <= dmem_i_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dmem_V_d0 <= grp_bin_dense_fu_432_dmem_V_4_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            dmem_V_d0 <= grp_fp_conv_fu_417_dmem_V_2_d0;
        elsif (((ap_predicate_op159_call_state10 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            dmem_V_d0 <= grp_bin_conv_fu_401_dmem_V_6_d0;
        else 
            dmem_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dmem_V_we0_assign_proc : process(icmp_ln879_reg_951, icmp_ln879_1_reg_960, ap_CS_fsm_state3, ap_CS_fsm_state10, ap_predicate_op159_call_state10, ap_CS_fsm_state11, grp_bin_conv_fu_401_dmem_V_6_we0, grp_fp_conv_fu_417_dmem_V_2_we0, grp_bin_dense_fu_432_dmem_V_4_we0, ap_CS_fsm_state8)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln879_reg_951 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln879_1_reg_960 = ap_const_lv1_1) and (icmp_ln879_reg_951 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln879_1_reg_960 = ap_const_lv1_0) and (icmp_ln879_reg_951 = ap_const_lv1_0)))) then 
            dmem_V_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dmem_V_we0 <= grp_bin_dense_fu_432_dmem_V_4_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            dmem_V_we0 <= grp_fp_conv_fu_417_dmem_V_2_we0;
        elsif (((ap_predicate_op159_call_state10 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            dmem_V_we0 <= grp_bin_conv_fu_401_dmem_V_6_we0;
        else 
            dmem_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dmem_i_V_address0_assign_proc : process(icmp_ln879_reg_951, icmp_ln879_1_reg_960, ap_CS_fsm_state2, icmp_ln887_fu_548_p2, zext_ln544_3_fu_570_p1, zext_ln544_2_fu_575_p1, zext_ln544_fu_603_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln887_fu_548_p2 = ap_const_lv1_0))) then
            if ((icmp_ln879_reg_951 = ap_const_lv1_1)) then 
                dmem_i_V_address0 <= zext_ln544_fu_603_p1(11 - 1 downto 0);
            elsif (((icmp_ln879_1_reg_960 = ap_const_lv1_1) and (icmp_ln879_reg_951 = ap_const_lv1_0))) then 
                dmem_i_V_address0 <= zext_ln544_2_fu_575_p1(11 - 1 downto 0);
            elsif (((icmp_ln879_1_reg_960 = ap_const_lv1_0) and (icmp_ln879_reg_951 = ap_const_lv1_0))) then 
                dmem_i_V_address0 <= zext_ln544_3_fu_570_p1(11 - 1 downto 0);
            else 
                dmem_i_V_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            dmem_i_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    dmem_i_V_ce0_assign_proc : process(icmp_ln879_reg_951, icmp_ln879_1_reg_960, ap_CS_fsm_state2, icmp_ln887_fu_548_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln887_fu_548_p2 = ap_const_lv1_0) and (icmp_ln879_reg_951 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln887_fu_548_p2 = ap_const_lv1_0) and (icmp_ln879_1_reg_960 = ap_const_lv1_1) and (icmp_ln879_reg_951 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln887_fu_548_p2 = ap_const_lv1_0) and (icmp_ln879_1_reg_960 = ap_const_lv1_0) and (icmp_ln879_reg_951 = ap_const_lv1_0)))) then 
            dmem_i_V_ce0 <= ap_const_logic_1;
        else 
            dmem_i_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dmem_o_V_address0 <= ap_const_lv64_0(7 - 1 downto 0);

    dmem_o_V_ce0_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            dmem_o_V_ce0 <= ap_const_logic_1;
        else 
            dmem_o_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dmem_o_V_d0 <= dmem_V_q0;

    dmem_o_V_we0_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            dmem_o_V_we0 <= ap_const_logic_1;
        else 
            dmem_o_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_bin_conv_fu_401_ap_start <= grp_bin_conv_fu_401_ap_start_reg;
    grp_bin_dense_fu_432_ap_start <= grp_bin_dense_fu_432_ap_start_reg;
    grp_fp_conv_fu_417_ap_start <= grp_fp_conv_fu_417_ap_start_reg;
    i_V_1_fu_768_p2 <= std_logic_vector(unsigned(p_0595_0_reg_366) + unsigned(ap_const_lv7_1));
    i_V_2_fu_554_p2 <= std_logic_vector(unsigned(ap_const_lv7_1) + unsigned(p_0229_0_reg_344));
    i_V_fu_719_p2 <= std_logic_vector(unsigned(ap_const_lv13_1) + unsigned(p_0492_0_reg_355));
    icmp_ln879_1_fu_534_p2 <= "1" when (layer_type_V_fu_446_p4 = ap_const_lv2_0) else "0";
    icmp_ln879_2_fu_682_p2 <= "1" when (img_off_V_fu_676_p2 = zext_ln879_reg_955) else "0";
    icmp_ln879_fu_524_p2 <= "1" when (layer_type_V_fu_446_p4 = ap_const_lv2_1) else "0";
    icmp_ln887_1_fu_713_p2 <= "1" when (p_0492_0_reg_355 = ap_const_lv13_124A) else "0";
    icmp_ln887_2_fu_762_p2 <= "1" when (p_0595_0_reg_366 = ap_const_lv7_40) else "0";
    icmp_ln887_fu_548_p2 <= "1" when (p_0229_0_reg_344 = ap_const_lv7_40) else "0";
    img_idx_V_fu_687_p2 <= std_logic_vector(unsigned(p_0701_0_reg_320) + unsigned(ap_const_lv16_1));
    img_off_V_fu_676_p2 <= std_logic_vector(unsigned(p_0869_0_reg_332) + unsigned(ap_const_lv10_1));
    kh_i_V_address0 <= zext_ln544_4_fu_774_p1(6 - 1 downto 0);

    kh_i_V_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            kh_i_V_ce0 <= ap_const_logic_1;
        else 
            kh_i_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kh_mem_V_address0_assign_proc : process(icmp_ln879_reg_951, icmp_ln879_1_reg_960, ap_CS_fsm_state6, zext_ln544_4_reg_1043, icmp_ln887_2_fu_762_p2, ap_CS_fsm_state11, grp_fp_conv_fu_417_kh_mem_V_2_address0, grp_bin_dense_fu_432_kh_mem_V_4_address0, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            kh_mem_V_address0 <= zext_ln544_4_reg_1043(6 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln887_2_fu_762_p2 = ap_const_lv1_1) and (icmp_ln879_1_reg_960 = ap_const_lv1_0) and (icmp_ln879_reg_951 = ap_const_lv1_1))) then 
            kh_mem_V_address0 <= ap_const_lv6_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            kh_mem_V_address0 <= grp_bin_dense_fu_432_kh_mem_V_4_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            kh_mem_V_address0 <= grp_fp_conv_fu_417_kh_mem_V_2_address0;
        else 
            kh_mem_V_address0 <= "XXXXXX";
        end if; 
    end process;


    kh_mem_V_ce0_assign_proc : process(icmp_ln879_reg_951, icmp_ln879_1_reg_960, ap_CS_fsm_state6, icmp_ln887_2_fu_762_p2, ap_CS_fsm_state11, grp_fp_conv_fu_417_kh_mem_V_2_ce0, grp_bin_dense_fu_432_kh_mem_V_4_ce0, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln887_2_fu_762_p2 = ap_const_lv1_1) and (icmp_ln879_1_reg_960 = ap_const_lv1_0) and (icmp_ln879_reg_951 = ap_const_lv1_1)))) then 
            kh_mem_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            kh_mem_V_ce0 <= grp_bin_dense_fu_432_kh_mem_V_4_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            kh_mem_V_ce0 <= grp_fp_conv_fu_417_kh_mem_V_2_ce0;
        else 
            kh_mem_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kh_mem_V_we0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            kh_mem_V_we0 <= ap_const_logic_1;
        else 
            kh_mem_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    layer_type_V_fu_446_p4 <= layer_mode_V(2 downto 1);
    nc_V_fu_821_p3 <= 
        tmp_V_1_fu_793_p4 when (t_V_reg_917(0) = '1') else 
        select_ln879_fu_813_p3;
    or_ln879_fu_784_p2 <= (xor_ln879_fu_779_p2 or trunc_ln792_reg_907);
    p_Result_s_fu_460_p2 <= (trunc_ln792_fu_456_p1 xor ap_const_lv1_1);
    r_V_2_fu_496_p2 <= (dmem_mode_V xor ap_const_lv1_1);
    r_V_fu_594_p2 <= std_logic_vector(shift_left(unsigned(ret_V_5_fu_590_p1),to_integer(unsigned('0' & zext_ln746_reg_946(16-1 downto 0)))));
    ret_V_2_fu_544_p1 <= p_0229_0_reg_344(6 - 1 downto 0);
    ret_V_3_fu_608_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_6_reg_982),7));
    ret_V_4_fu_540_p1 <= p_0229_0_reg_344(1 - 1 downto 0);
    ret_V_5_fu_590_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_9_fu_580_p4),16));
    ret_V_9_fu_580_p4 <= p_0701_0_reg_320(15 downto 1);
    ret_V_fu_709_p1 <= p_0492_0_reg_355(1 - 1 downto 0);
    select_ln180_fu_739_p3 <= 
        ap_const_lv13_925 when (ret_V_fu_709_p1(0) = '1') else 
        ap_const_lv13_0;
    select_ln700_fu_829_p3 <= 
        ap_const_lv16_2 when (t_V_reg_917(0) = '1') else 
        ap_const_lv16_1;
    select_ln760_1_fu_701_p3 <= 
        ap_const_lv10_0 when (icmp_ln879_2_fu_682_p2(0) = '1') else 
        img_off_V_fu_676_p2;
    select_ln760_fu_693_p3 <= 
        img_idx_V_fu_687_p2 when (icmp_ln879_2_fu_682_p2(0) = '1') else 
        p_0701_0_reg_320;
    select_ln879_fu_813_p3 <= 
        tmp_V_fu_789_p1 when (or_ln879_fu_784_p2(0) = '1') else 
        tmp_V_2_fu_803_p4;
    shl_ln_fu_502_p3 <= (width_mode_V & ap_const_lv1_0);
    t_V_1_fu_488_p3 <= 
        ap_const_lv16_0 when (trunc_ln792_fu_456_p1(0) = '1') else 
        o_index_V;
    t_V_fu_478_p2 <= (trunc_ln780_fu_470_p1 and p_Result_s_fu_460_p2);
    tmp_1_fu_626_p4 <= ((dmem_mode_V & ap_const_lv5_0) & ret_V_2_reg_969);
    tmp_2_fu_611_p5 <= (((dmem_mode_V & ret_V_4_reg_964) & ap_const_lv3_0) & ret_V_3_fu_608_p1);
    tmp_3_fu_845_p3 <= (r_V_2_reg_938 & ap_const_lv11_0);
    tmp_4_fu_725_p4 <= p_0492_0_reg_355(12 downto 1);
    tmp_V_1_fu_793_p4 <= kh_mem_V_q0(31 downto 16);
    tmp_V_2_fu_803_p4 <= kh_mem_V_q0(63 downto 48);
    tmp_V_fu_789_p1 <= kh_mem_V_q0(16 - 1 downto 0);
    tmp_fu_652_p4 <= ((dmem_mode_V & trunc_ln887_4_fu_648_p1) & ap_const_lv10_0);
    trunc_ln780_fu_470_p1 <= kh_index_V(1 - 1 downto 0);
    trunc_ln792_fu_456_p1 <= layer_mode_V(1 - 1 downto 0);
    trunc_ln887_3_fu_599_p1 <= r_V_fu_594_p2(14 - 1 downto 0);
    trunc_ln887_4_fu_648_p1 <= p_0701_0_reg_320(1 - 1 downto 0);
    words_per_image_V_fu_518_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv5_1),to_integer(unsigned('0' & zext_ln746_1_fu_514_p1(5-1 downto 0)))));
    wt_i_V_address0 <= zext_ln544_1_fu_753_p1(13 - 1 downto 0);

    wt_i_V_ce0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            wt_i_V_ce0 <= ap_const_logic_1;
        else 
            wt_i_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    wt_mem_V_address0_assign_proc : process(ap_CS_fsm_state10, ap_predicate_op159_call_state10, ap_CS_fsm_state11, grp_bin_conv_fu_401_wt_mem_V_6_address0, grp_fp_conv_fu_417_wt_mem_V_2_address0, grp_bin_dense_fu_432_wt_mem_V_4_address0, ap_CS_fsm_state5, ap_CS_fsm_state8, zext_ln180_5_fu_758_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            wt_mem_V_address0 <= zext_ln180_5_fu_758_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            wt_mem_V_address0 <= grp_bin_dense_fu_432_wt_mem_V_4_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            wt_mem_V_address0 <= grp_fp_conv_fu_417_wt_mem_V_2_address0;
        elsif (((ap_predicate_op159_call_state10 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            wt_mem_V_address0 <= grp_bin_conv_fu_401_wt_mem_V_6_address0;
        else 
            wt_mem_V_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    wt_mem_V_ce0_assign_proc : process(ap_CS_fsm_state10, ap_predicate_op159_call_state10, ap_CS_fsm_state11, grp_bin_conv_fu_401_wt_mem_V_6_ce0, grp_fp_conv_fu_417_wt_mem_V_2_ce0, grp_bin_dense_fu_432_wt_mem_V_4_ce0, ap_CS_fsm_state5, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            wt_mem_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            wt_mem_V_ce0 <= grp_bin_dense_fu_432_wt_mem_V_4_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            wt_mem_V_ce0 <= grp_fp_conv_fu_417_wt_mem_V_2_ce0;
        elsif (((ap_predicate_op159_call_state10 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            wt_mem_V_ce0 <= grp_bin_conv_fu_401_wt_mem_V_6_ce0;
        else 
            wt_mem_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    wt_mem_V_we0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            wt_mem_V_we0 <= ap_const_logic_1;
        else 
            wt_mem_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln879_fu_779_p2 <= (trunc_ln780_reg_912 xor ap_const_lv1_1);
    zext_ln1372_fu_735_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_725_p4),13));
    zext_ln180_1_fu_634_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_626_p4),64));
    zext_ln180_2_fu_621_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_611_p5),64));
    zext_ln180_3_fu_852_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_845_p3),64));
    zext_ln180_4_fu_671_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln180_fu_665_p2),64));
    zext_ln180_5_fu_758_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln180_1_reg_1025),64));
    zext_ln180_fu_661_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_652_p4),14));
    zext_ln544_1_fu_753_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0492_0_reg_355),64));
    zext_ln544_2_fu_575_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0229_0_reg_344),64));
    zext_ln544_3_fu_570_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0229_0_reg_344),64));
    zext_ln544_4_fu_774_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0595_0_reg_366),64));
    zext_ln544_fu_603_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0229_0_reg_344),64));
    zext_ln735_fu_484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_fu_478_p2),16));
    zext_ln746_1_fu_514_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_502_p3),5));
    zext_ln746_fu_510_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_502_p3),16));
    zext_ln879_fu_530_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(words_per_image_V_fu_518_p2),10));
    zext_ln887_fu_639_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0869_0_reg_332),14));
end behav;
